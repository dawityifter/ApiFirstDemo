basePath: /
definitions:
  AccountBalance:
    description: The balance of the Account
    properties:
      amount:
        description: The amount of money expressed as a String.
        example: '9999.99'
        pattern: '^-?[0-9]*(\.([0-9]{1,2}))?$'
        type: string
      currency:
        default: USD
        description: Indicates the `Currency` unit of the amount.
        enum:
          - USD
        type: string
    required:
      - amount
    type: object
  AccountPayeeRemittanceAccount:
    description: >-
      Account Payee is used to display data related to account to account
      payments.
    properties:
      bankAccountLast4:
        description: The account to account payee account number.
        pattern: '[#]*[0-9]{1,4}'
        type: string
      created:
        description: The timestamp when the `BankAccount` was created.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `BankAccount`.
        example: ba_45fc183f900c4d9292610254b04c0089
        readOnly: true
        type: string
      merchantPhoneNumber:
        type: string
      merchantRemittanceLocationId:
        description: >-
          The `Merchant`'s remittance location that the `PayeeAccount` should be
          associated with. Location ids are retrieved from the merchant
          directory. A `merchantRemittanceLocationId` or a `remittanceAddress`
          can be provided, not both.
        type: string
      payeeAccountType:
        description: The bank account type.
        enum:
          - CHECKING
          - SAVINGS
          - LOAN
        type: string
      remittanceAddress:
        $ref: '#/definitions/RemittanceAddress'
      routingNumberLast4:
        description: The account to account payee routing number.
        pattern: '[#]{5}[0-9]{4}'
        type: string
      updated:
        description: The timestamp when the `BankAccount` was last updated.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - bankAccountLast4
      - created
      - id
      - payeeAccountType
      - routingNumberLast4
      - updated
    type: object
  Address:
    description: Represents an address within the API.
    properties:
      addressLine1:
        description: The first line of the address.
        example: 123 Main St.
        maxLength: 255
        minLength: 0
        type: string
      addressLine2:
        description: The second line of the address if applicable.
        example: PO Box 101
        maxLength: 255
        minLength: 0
        type: string
      addressLine3:
        description: The third line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      addressLine4:
        description: The fourth line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      city:
        description: The address city.
        example: New Brunswick
        maxLength: 255
        minLength: 0
        type: string
      countryCode:
        default: US
        description: >-
          The two or three character country code from ISO-3166. If the client
          is designated as OFX, three letter country code from ISO-3166 is
          provided.
        maxLength: 3
        minLength: 2
        type: string
      created:
        description: The timestamp when the `Address` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      defaultAddress:
        default: false
        description: Is this the default address.
        readOnly: true
        type: boolean
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Address`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Address`
        example: u_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      postalCode:
        description: >-
          The postal code for this address. Supports international postal codes
          as well.
        example: '10001'
        type: string
      province:
        description: The province for international addresses
        maxLength: 255
        minLength: 0
        type: string
      stateAbbreviation:
        description: >-
          The two character abbreviation for the address state. Not used in
          international addresses.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      status:
        default: ACTIVE
        description: Indicates the address status.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: Indicates the address type.
        enum:
          - MAILING
          - PHYSICAL
        example: MAILING
        type: string
      updated:
        description: The timestamp when the `Address` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      verified:
        default: false
        description: Has the address been verified for KYC compliance.
        readOnly: true
        type: boolean
    readOnly: true
    required:
      - addressLine1
      - city
      - postalCode
      - type
    type: object
  AddressComponents:
    description: The components of the address.
    properties:
      building:
        description: >-
          The descriptive name that identifies an individual location, if one
          exists
        type: string
      buildingLeadingType:
        description: >-
          The leading building type component of the building (E.g., if building
          contains 'Bloc C' buildingLeadingType would contain 'Bloc.')
        type: string
      buildingName:
        description: >-
          The name component of the building (E.g., if building contains
          'Westminster House' buildingName would contain 'Westminster.')
        type: string
      buildingTrailingType:
        description: >-
          The trailing building type component of the building (E.g., if
          building contains 'Westminster House' buildingTrailingType would
          contain 'House.')
        type: string
      cityName:
        description: >-
          The USPS-preferred city name for this particular address, or an
          acceptable alternate if provided by the user.
        type: string
      countryIso3:
        description: The ISO 3166-1 alpha-3 country code.
        type: string
      defaultCityName:
        description: The default city name for this 5-digit ZIP Code.
        type: string
      dependentLocality:
        description: >-
          If there is additional information about the locality, it will be
          here. (e.g., neighborhood in Turkey)
        type: string
      dependentThoroughfare:
        description: All of the dependent thoroughfare components combined
        type: string
      dependentThoroughfareName:
        description: >-
          The name component of the dependentThoroughfare (E.g., if
          dependentThoroughfare contains 'N Main St' dependentThoroughfareName
          would contain 'Main.')
        type: string
      dependentThoroughfarePostdirection:
        description: >-
          The directional suffix component of the dependentThoroughfare (E.g.,
          if dependentThoroughfare contains 'Main St N'
          dependentThoroughfarePostdirection would contain 'N.')
        type: string
      dependentThoroughfarePredirection:
        description: >-
          The directional prefix component of the dependentThoroughfare (E.g.,
          if dependentThoroughfare contains 'N Main St'
          dependentThoroughfarePredirection would contain 'N.')
        type: string
      dependentThoroughfareTrailingType:
        description: >-
          The trailing dependentThoroughfare type component of the
          dependentThoroughfare (E.g., if dependentThoroughfare contains 'N Main
          St' dependentThoroughfareTrailingType would contain 'St.')
        type: string
      dependentThoroughfareType:
        description: >-
          The leading thoroughfare type component of the dependentThoroughfare
          field (E.g., if dependentThoroughfare contains 'Rue De La Gare'
          dependentThoroughfareType would contain 'Rue.')
        type: string
      dependentlocalityName:
        description: >-
          If the dependentLocality has a name, you'll find it here. (E.g., the
          dependentLocality 'Dong Cheng Qu' is named 'Dong Cheng.'
        type: string
      doubleDependentLocality:
        description: >-
          If there is additional information about the dependentLocality, you'll
          find it here. (e.g., village in the United Kingdom)
        type: string
      extraSecondaryDesignator:
        description: >-
          Description of the location type within a campus (e.g., Bldg, Unit,
          Lot, etc.)
        type: string
      extraSecondaryNumber:
        description: >-
          Descriptive information about the location of a building within a
          campus (e.g., E-5 in '5619 Loop 1604, Bldg E-5, Ste. 101 San Antonio
          TX')
        type: string
      plus4Code:
        description: The 4-digit add-on code (more specific than 5-digit ZIP).
        type: string
      pmbDesignator:
        description: The private mailbox unit designator.
        type: string
      pmbNumber:
        description: The private mailbox number.
        type: string
      postBox:
        description: All postBox Post Office Box components combined.
        type: string
      postBoxNumber:
        description: >-
          The alphanumeric component of the postbox (E.g., if postBox contains
          'PO Box 1234' postBoxNumber would contain '1234.')
        type: string
      postBoxType:
        description: >-
          The type component of the postBox (E.g., if postBox contains 'PO Box
          1234' postBoxType would contain 'PO Box.')
        type: string
      premise:
        description: Alphanumeric code pertaining to an individual location
        type: string
      premiseExtra:
        description: >-
          Extra information about the premise that is not necessarily
          authoritative but might still be useful (E.g., in a French address, 25
          bis rue Emile Zola, 91190 Gif Sur Yvette, France, the premise number
          could be followed by the word 'bis' which would be considered
          premiseExtra data.)
        type: string
      premiseNumber:
        description: >-
          The alphanumeric component of the premise field (E.g., if premise
          contains 'Plot 7/7A' premiseNumber would contain '7/7A.')
        type: string
      premiseType:
        description: >-
          The premise type component of the premise field (E.g., if premise
          contains 'Plot 7/7A' premiseType would contain 'Plot.')
        type: string
      primaryNumber:
        description: 'The house, PO Box, or building number.'
        type: string
      province:
        description: >-
          The state or province name or abbreviation. Only used in international
          addresses.
        type: string
      secondaryDesignator:
        description: 'Describes location within a complex/building (Ste, Apt, etc.)'
        type: string
      secondaryNumber:
        description: Apartment or suite number.
        type: string
      stateAbbreviation:
        description: The two-letter state abbreviation.
        type: string
      streetName:
        description: The name of the street.
        type: string
      streetPostdirection:
        description: 'Directional information after a street name (N, SW, etc.)'
        type: string
      streetPredirection:
        description: 'Directional information before a street name (N, SW, etc.)'
        type: string
      streetSuffix:
        description: 'Abbreviated value describing the street (St, Ave, Blvd, etc.)'
        type: string
      subAdministrativeArea:
        description: >-
          The smallest administrative division within a country (e.g., county in
          Germany).
        type: string
      subBuilding:
        description: All subBuilding components combined
        type: string
      subBuildingName:
        description: >-
          The descriptive name component of the subBuilding (E.g., if
          subBuilding contains 'Basement Flat' subBuildingName would contain
          'Basement.')
        type: string
      subBuildingNumber:
        description: >-
          The alphanumeric component of the subBuilding (E.g., if subBuilding
          contains 'Flat 1' subBuildingNumber would contain '1.')
        type: string
      subBuildingType:
        description: >-
          The leading sub-building type of the subBbuilding (E.g., if
          subBuilding contains 'Flat 1' subBuildingType would contain 'Flat.')
        type: string
      superAdministrativeArea:
        description: >-
          The largest administrative division within a country (e.g., region in
          France).
        type: string
      thoroughfare:
        description: All thoroughfare components combined
        type: string
      thoroughfareName:
        description: >-
          The name component of the thoroughfare (E.g., if thoroughfare contains
          'Main St' thoroughfareName would contain 'Main.')
        type: string
      thoroughfarePostdirection:
        description: >-
          The directional suffix component of the thoroughfare (E.g., if
          thoroughfare contains 'Main St N' thoroughfarePostdirection would
          contain 'N.')
        type: string
      thoroughfarePredirection:
        description: >-
          The directional prefix component of the thoroughfare (E.g., if
          thoroughfare contains 'N Main St' thoroughfarePredirection would
          contain 'N.')
        type: string
      thoroughfareTrailingType:
        description: >-
          The trailing thoroughfare type component of the thoroughfare (E.g., if
          thoroughfare contains 'N Main St' thoroughfareTrailingType would
          contain 'St.')
        type: string
      thoroughfareType:
        description: >-
          The leading thoroughfare type component of the thoroughfare (E.g., if
          thoroughfare contains 'Rue De La Gare' thoroughfareLeadingType would
          contain 'Rue.')
        type: string
      urbanization:
        description: >-
          The neighborhood, or city subdivision; used with Puerto Rican
          addresses.
        type: string
      zipCode:
        description: The Zip Code.
        type: string
    required:
      - cityName
      - zipCode
    type: object
  AddressRequest:
    description: Contains the address for a request.
    properties:
      addressLine1:
        description: The first line of the address.
        example: 123 Main St.
        maxLength: 255
        minLength: 0
        type: string
      addressLine2:
        description: The second line of the address if applicable.
        example: PO Box 101
        maxLength: 255
        minLength: 0
        type: string
      addressLine3:
        description: The third line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      addressLine4:
        description: The fourth line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      city:
        description: The address city.
        example: New Brunswick
        maxLength: 255
        minLength: 0
        type: string
      countryCode:
        default: US
        description: >-
          The two or three character country code from ISO-3166. If the client
          is designated as OFX, three letter country code from ISO-3166 is
          provided.
        maxLength: 3
        minLength: 2
        type: string
      postalCode:
        description: >-
          The postal code for this address. Supports international postal codes
          as well.
        example: '10001'
        type: string
      province:
        description: The province for international addresses
        maxLength: 255
        minLength: 0
        type: string
      stateAbbreviation:
        description: >-
          The two character abbreviation for the address state. Not used in
          international addresses.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      type:
        description: Indicates the address type.
        enum:
          - MAILING
          - PHYSICAL
        example: MAILING
        type: string
    required:
      - addressLine1
      - city
      - postalCode
      - type
    type: object
  AddressSuggestion:
    description: A corrected address suggestion.
    properties:
      addressComponents:
        $ref: '#/definitions/AddressComponents'
      addressLine1:
        description: The first address line (usually the street address).
        type: string
      addressLine2:
        description: The second address line (if needed).
        type: string
      addressLine3:
        description: The third address line (if needed).
        type: string
      addressLine4:
        description: The fourth address line (if needed).
        type: string
      addressee:
        description: The addressee.
        type: string
      hashCode:
        type: string
      lastLine:
        description: >-
          City, state, and ZIP Code combined. Not used in international
          addresses.
        type: string
      note:
        description: 'A note that can provide additional information '
        type: string
      valid:
        description: True if the address is acceptable as is.
        type: boolean
    required:
      - addressComponents
      - addressLine1
    type: object
  AddressValidation:
    description: An address validation response.
    properties:
      candidates:
        description: The list of address candidates.
        items:
          $ref: '#/definitions/AddressSuggestion'
        type: array
    required:
      - candidates
    type: object
  AddressValidationRequest:
    description: An address validation request.
    properties:
      address:
        $ref: '#/definitions/ValidateAddress'
      numSuggestions:
        default: 2
        description: >-
          The number of suggestions to return if the address is not valid. Not
          used in international addresses.
        format: int32
        type: integer
    required:
      - address
    type: object
  Amount:
    description: The balance of the Account
    properties:
      amount:
        description: The amount of money expressed as a String.
        example: '9999.99'
        pattern: '^-?[0-9]*(\.([0-9]{1,2}))?$'
        type: string
      currency:
        default: USD
        description: Indicates the `Currency` unit of the amount.
        enum:
          - USD
        type: string
    required:
      - amount
    type: object
  AnnualSchedule:
    description: Determines when `Payments` are made for the associated `PayeeAccount`.
    properties:
      dayOfYearToRepeat:
        description: The days of the year on which to make a `Payment`.
        format: int32
        type: integer
      repeatEveryXYears:
        description: >-
          The yearly frequency at which to make a `Payment`. If the user
          specifies the value 1 for `repeatEveryXYears`, a `Payment` is made
          every year.  If the user specifies 2 for `repeatEveryXYears` a
          `Payment` is made every other year.
        format: int32
        minimum: 1
        type: integer
    required:
      - dayOfYearToRepeat
      - repeatEveryXYears
    type: object
  ApiAccessDto:
    description: A generic list of data to return with the pagination information.
    properties:
      apiMethod:
        type: string
      clientId:
        type: string
      created:
        format: date-time
        type: string
      id:
        type: string
      partitionDate:
        format: date
        type: string
      payload:
        type: string
      source:
        enum:
          - CLIENT
          - WIDGET
          - ADMIN_PORTAL
        type: string
      updated:
        format: date-time
        type: string
      url:
        type: string
      userId:
        type: string
      username:
        type: string
    readOnly: true
    type: object
  ApiAccessPage:
    description: >-
      A Pageable object for returning server-side pagination information for API
      Accesses.
    properties:
      data:
        description: A generic list of data to return with the pagination information.
        items:
          $ref: '#/definitions/ApiAccessDto'
        readOnly: true
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    required:
      - data
      - page
    type: object
  ApiAccessRequest:
    description: Payload to retrieve ApiAccess objects
    properties:
      date:
        description: >-
          An required field for access endpoint to retrieve access information
          for a specific date.
        example: '2021-06-30'
        format: date
        type: string
      limit:
        default: 30
        description: The maximum number of `ApiAccess`s to return.
        example: 20
        format: int32
        maximum: 500
        minimum: 1
        type: integer
      offset:
        default: 0
        description: The offset for pagination.
        example: 0
        format: int32
        minimum: 0
        type: integer
      userId:
        description: >-
          An required field for access endpoint to retrieve access information
          by user ID for this `Access`.
        example: user_e732d873-39b6-4622-ad8f-cda27c1ce1bb
        type: string
    required:
      - date
      - userId
    type: object
  AuditLogReport:
    description: Contains the contract for the 'Audit Log Report'.
    properties:
      accountType:
        description: The account type denoting Business or Consumer
        type: string
      actionTaken:
        description: The action associated with the `Audit`
        type: string
      businessName:
        description: The company name associated with the audit transaction
        type: string
      creationDate:
        description: The updated date of the audit transaction
        format: date-time
        type: string
      requestedSource:
        description: The action modified by Customer or Admin User
        type: string
      uniqueId:
        description: The unique identifier of the partner
        type: string
      updatedValue:
        description: The action associated with the `Audit`
        type: string
      userFirstName:
        description: The first name of the user associated with the audit transaction
        type: string
      userLastName:
        description: The last name of the user associated with the audit transaction
        type: string
    type: object
  AuthorizedUser:
    description: >-
      Represents a user associated with a partner bank account or a funding
      `BankAccount`.
    properties:
      addresses:
        description: The list of `Address` for the `AuthorizedUser`.
        items:
          $ref: '#/definitions/Address'
        type: array
      created:
        description: The timestamp when the `AuthorizedUser` was created.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `AuthorizedUser`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `AuthorizedUser`.
        example: auser_45fc183f900c4d9292610254b04c0089
        readOnly: true
        type: string
      name:
        $ref: '#/definitions/Name'
      status:
        description: Indicates the status of the `AuthorizedUser`.
        enum:
          - ACTIVE
          - ARCHIVED
        type: string
      updated:
        description: The timestamp when the `AuthorizedUser` was last updated.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - addresses
      - name
      - status
    type: object
  BankAccount:
    description: >-
      Represents the `BankAccount` associated with a `FundingAccount` or
      `CustomerFundingAccount`.
    properties:
      accountNumber:
        description: The last 4 digits of the `BankAccount` account number.
        example: 0812
        type: string
      authorizedUsers:
        description: >-
          The list of `AuthorizedUsers` that are authorized users of the
          `BankAccount`.
        items:
          $ref: '#/definitions/AuthorizedUser'
        type: array
      created:
        description: The timestamp when the `BankAccount` was created.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `BankAccount`.
        example: ba_45fc183f900c4d9292610254b04c0089
        readOnly: true
        type: string
      routingNumber:
        description: The `BankAccount` routing number.
        example: '689340812'
        type: string
      subType:
        enum:
          - CHECKING
          - SAVINGS
        type: string
      type:
        description: Indicates the type of `BankAccount`.
        enum:
          - DDA
          - MMA
          - LOAN
        example: DDA
        type: string
      updated:
        description: The timestamp when the `BankAccount` was last updated.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - accountNumber
      - created
      - id
      - routingNumber
      - type
      - updated
    type: object
  BankAccountRequest:
    description: >-
      Represents the `BankAccount` to associate with a `FundingAccount` or
      `CustomerFundingAccount`.
    properties:
      accountNumber:
        description: The `BankAccount` account number.
        pattern: \d+
        type: string
      authorizedUsers:
        description: >-
          The list of `AuthorizedUsers` that are authorized for the
          `BankAccount`.
        items:
          $ref: '#/definitions/AuthorizedUser'
        type: array
      routingNumber:
        description: The `BankAccount` routing number.
        pattern: '[0-9]{9}'
        type: string
      subType:
        enum:
          - CHECKING
          - SAVINGS
        type: string
      type:
        description: Indicates the type of `BankAccount`.
        enum:
          - DDA
          - MMA
          - LOAN
        example: DDA
        type: string
    required:
      - accountNumber
      - routingNumber
      - type
    type: object
  BankAccountUpdate:
    description: >-
      Represents the `BankAccount` associated with a `FundingAccount` or
      `CustomerFundingAccount`.
    properties:
      accountNumber:
        description: The `BankAccount` account number.
        example: '109650812'
        pattern: \d+
        type: string
      authorizedUsers:
        description: >-
          The list of `AuthorizedUsers` that are authorized users of the
          `BankAccount`.
        items:
          $ref: '#/definitions/AuthorizedUser'
        type: array
    type: object
  Bill:
    description: Provides information about the `Bill` for the associated `PayeeAccount`.
    properties:
      amountDue:
        $ref: '#/definitions/Amount'
      amountScheduled:
        $ref: '#/definitions/Amount'
      created:
        description: The timestamp when the `Bill` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      dueDate:
        description: The date that the `Payment` is due.
        example: '2017-01-01'
        format: date
        readOnly: true
        type: string
      extendedStatus:
        description: Indicates the extended status of the `Bill`.
        enum:
          - NONE
          - AVAILABLE
          - NEAR_DUE
          - PAST_DUE
          - DUE
        example: DUE
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Bill`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The identifier for the `Bill`.
        example: bill_83ede6ae-a080-11ea-bb37-0242ac130002
        readOnly: true
        type: string
      invoiceDate:
        description: The invoice date.
        example: '2017-01-01'
        format: date
        readOnly: true
        type: string
      lastRefresh:
        description: The timestamp when the `Bill` was last refreshed.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      lastUpdated:
        description: When the `Bill` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      minimumDue:
        $ref: '#/definitions/Amount'
      name:
        description: The account name
        readOnly: true
        type: string
      nickName:
        description: The account name provided by the user.
        readOnly: true
        type: string
      notice:
        description: A message specific to the bill.
        readOnly: true
        type: string
      paidDate:
        description: The paid date.
        example: '2017-01-01'
        format: date
        readOnly: true
        type: string
      paidExternalDate:
        description: >-
          The date that the `Bill` was paid externally, where externally
          indicates that the payment was made outside of the application.
        example: '2017-01-01'
        format: date
        readOnly: true
        type: string
      pastDue:
        $ref: '#/definitions/Amount'
      payeeAccountLink:
        $ref: '#/definitions/Link'
      relatedDocumentIds:
        description: >-
          The related payee document IDs where a document can be associated with
          a bill. Also refer to the `latestDocumentId` field on the
          `PayeeAccount`
        items:
          description: >-
            The related payee document IDs where a document can be associated
            with a bill. Also refer to the `latestDocumentId` field on the
            `PayeeAccount`
          readOnly: true
          type: string
        readOnly: true
        type: array
      scheduledDate:
        description: The scheduled date.
        example: '2017-01-01'
        format: date
        readOnly: true
        type: string
      skippedDate:
        description: The date the bill was marked as being skipped.
        example: '2017-01-01'
        format: date
        readOnly: true
        type: string
      status:
        description: The bill status.
        enum:
          - UNPAID
          - SERVICE_SCHEDULED
          - SERVICE_AUTOMATIC
          - SCHEDULED
          - EMPTY
          - PAID
          - PAID_EXTERNAL
          - SKIPPED
          - NONE
          - ARCHIVED
        example: PAID
        readOnly: true
        type: string
      updated:
        description: The timestamp when the `Bill` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    required:
      - created
      - id
      - lastUpdated
      - name
      - payeeAccountLink
      - status
      - updated
    type: object
  BillBased:
    description: Returns the configuration details for a `BillBased` `RecurringSchedule`.
    properties:
      daysRelativeToDueDate:
        description: Determines when a payment is made for a `BillBased` schedule.
        enum:
          - DUE_DATE
          - ONE_BUSINESS_DAY_BEFORE
          - THREE_BUSINESS_DAYS_BEFORE
        example: DUE_DATE
        type: string
      fixedAmount:
        $ref: '#/definitions/Amount'
      payCurrentBill:
        default: false
        description: >-
          Indicates if the current `Bill` was paid when the `RecurringSchedule`
          was created.
        type: boolean
      paymentAmountConfig:
        description: >-
          Determines which amount is paid each billing period as classified by
          the merchant.
        enum:
          - MINIMUM_DUE
          - AMOUNT_DUE
          - BALANCE
          - FIXED_AMOUNT
        type: string
    required:
      - daysRelativeToDueDate
      - paymentAmountConfig
    type: object
  BillBasedRequest:
    description: >-
      Creates a `BillBased` schedule. The amount paid for each `Payment` is
      determined by the merchant unless the user indicates that they want to pay
      a `FIXED_AMOUNT`. In order to create a `BillBased` `RecurringSchedule` the
      `Payee` must be successfully linked.
    properties:
      daysRelativeToDueDate:
        description: Determines when a payment is made for a `BillBased` schedule.
        enum:
          - DUE_DATE
          - ONE_BUSINESS_DAY_BEFORE
          - THREE_BUSINESS_DAYS_BEFORE
        example: DUE_DATE
        type: string
      fixedAmount:
        $ref: '#/definitions/Amount'
      payCurrentBill:
        default: false
        description: >-
          Determines if the current `Bill` is paid at the start of the
          `RecurringSchedule`.
        type: boolean
      paymentAmountConfig:
        description: >-
          Determines which amount is paid each billing period as classified by
          the merchant.
        enum:
          - MINIMUM_DUE
          - AMOUNT_DUE
          - BALANCE
          - FIXED_AMOUNT
        type: string
    required:
      - daysRelativeToDueDate
      - paymentAmountConfig
    type: object
  BillBasedUpdate:
    description: Updates an existing `BillBased` `RecurringSchedule`.
    properties:
      daysRelativeToDueDate:
        description: Determines when a payment is made for a `BillBased` schedule.
        enum:
          - DUE_DATE
          - ONE_BUSINESS_DAY_BEFORE
          - THREE_BUSINESS_DAYS_BEFORE
        example: DUE_DATE
        type: string
      fixedAmount:
        $ref: '#/definitions/Amount'
      paymentAmountConfig:
        description: >-
          Determines which amount is paid each billing period as classified by
          the merchant.
        enum:
          - MINIMUM_DUE
          - AMOUNT_DUE
          - BALANCE
          - FIXED_AMOUNT
        type: string
    type: object
  BillList:
    description: >-
      Represents the list of `Bills` returned as the result of a retrieval
      request.
    properties:
      bills:
        items:
          $ref: '#/definitions/Bill'
        readOnly: true
        type: array
    required:
      - bills
    type: object
  BillPaySummaryReportDto:
    description: Contains the contract for the 'Bill Pay Summary Report'.
    properties:
      avgDollarAmountOfElectronicPaymentsPerCustomer:
        description: >-
          The average dollar amount of electronic payments processed per
          customer in the given date range
        type: string
      avgDollarAmountOfPaperPaymentsPerCustomer:
        description: >-
          The average dollar amount of paper payments processed per customer in
          the given date range
        type: string
      avgDollarAmountOfPaymentsPerCustomer:
        description: >-
          The average dollar amount of payments processed per customer in the
          given date range
        type: string
      avgNumOfElectronicPaymentsPerCustomer:
        description: >-
          The average number of electronic payments processed per customer in
          the given date range
        type: string
      avgNumOfPaperPaymentsPerCustomer:
        description: >-
          The average number of paper payments processed per customer in the
          given date range
        type: string
      avgNumOfPaymentsPerCustomer:
        description: >-
          The average number of payments processed per customer in the given
          date range
        type: string
      created:
        description: The creation date of the report
        format: date-time
        type: string
      numOfACHPaymentsProcessed:
        description: >-
          The aggregated total number of electronic (ACH) payments processed in
          the given date range
        type: string
      numOfActiveCustomersFirstRange:
        description: >-
          The aggregated total number of active customers within the first 1-30
          days of the given date
        type: string
      numOfActiveCustomersSecondRange:
        description: >-
          The aggregated total number of active customers within the last 31-60
          days of the given date
        type: string
      numOfActiveCustomersThirdRange:
        description: >-
          The aggregated total number of active customers within the last 61-90
          days of the given date
        type: string
      numOfActiveCustomersTotal:
        description: >-
          The aggregated total number of active customers within the last 1-90
          days of the given date
        type: string
      numOfClosedCustomerAccounts:
        description: >-
          The aggregated total number of customer accounts that were closed
          (disabled/archived) in the given date range
        type: string
      numOfEBNPaymentsProcessed:
        description: >-
          The aggregated total number of electronic (EBN) payments processed in
          the given date range
        type: string
      numOfNewCustomerAccounts:
        description: >-
          The aggregated total number of customer accounts that were opened
          (new) in the given date range
        type: string
      numOfUnCheckPaymentsProcessed:
        description: >-
          The aggregated total number of electronic (Uncheck) payments processed
          in the given date range
        type: string
      numOfVCPaymentsProcessed:
        description: >-
          The aggregated total number of electronic (Virtual Card) payments
          processed in the given date range
        type: string
      percentOfClosedCustomerAccounts:
        description: >-
          The percent of customer accounts that were closed (disabled/archived)
          in the given date range
        type: string
      percentOfElectronicPaymentsProcessed:
        description: The percent of electronic payments processed in the given date range
        type: string
      percentOfNewCustomerAccounts:
        description: >-
          The percent of customer accounts that were opened (new) in the given
          date range
        type: string
      percentOfPaperPaymentsProcessed:
        description: The percent of paper payments processed in the given date range
        type: string
      totalDollarAmountOfElectronicPaymentsProcessed:
        description: >-
          The aggregated total dollar amount of electronic payments processed in
          the given date range
        type: string
      totalDollarAmountOfPaperPaymentsProcessed:
        description: >-
          The aggregated total dollar amount of paper payments processed in the
          given date range
        type: string
      totalDollarAmountOfPaymentsProcessed:
        description: >-
          The aggregated total dollar amount of payments processed in the given
          date range
        type: string
      totalEnrolledBillPayCustomers:
        description: >-
          The aggregated total amount (unfiltered) of enrolled bill pay
          customers 
        type: string
      totalNumOfCustomersScheduledPayment:
        description: >-
          The aggregated total number of customers within the given date range
          that have scheduled a payment
        type: string
      totalNumOfElectronicPaymentsProcessed:
        description: >-
          The aggregated total number of electronic payments processed in the
          given date range
        type: string
      totalNumOfPaperPaymentsProcessed:
        description: >-
          The aggregated total number of paper payments processed in the given
          date range
        type: string
      totalNumOfPaymentsProcessed:
        description: >-
          The aggregated total number of payments processed in the given date
          range
        type: string
    type: object
  CalendarBased:
    description: >-
      Returns the configuration details for a `CalendarBased`
      `RecurringSchedule`.
    properties:
      annualSchedule:
        $ref: '#/definitions/AnnualSchedule'
      memo:
        description: >-
          An optional message associated with a `Payment` to indicate what the
          `Payment` is for. The `memo` is printed on the check if the `Payment`
          is made using a check.
        type: string
      monthlySchedule:
        $ref: '#/definitions/MonthlySchedule'
      nextDate:
        description: The date of the next `Payment`.
        format: date
        type: string
      paymentAmount:
        $ref: '#/definitions/Amount'
      paymentDates:
        description: >-
          The set of future dates on which a `Payment` is scheduled to be made.
          Useful for presenting to the user in a calendar widget. The default
          limit for the number of payment dates returned is 30. The maximum
          limit for the number of payment dates returned is configurable and has
          a maximum limit of 999 dates.
        items:
          description: >-
            The set of future dates on which a `Payment` is scheduled to be
            made. Useful for presenting to the user in a calendar widget. The
            default limit for the number of payment dates returned is 30. The
            maximum limit for the number of payment dates returned is
            configurable and has a maximum limit of 999 dates.
          format: date
          type: string
        type: array
      startDate:
        description: The staring date of the `RecurringSchedule`.
        format: date
        type: string
      type:
        description: >-
          Indicates which of `weeklySchedule`, `monthlySchedule` or
          `annualSchedule` is provided.
        enum:
          - WEEKLY
          - MONTHLY
          - ANNUALLY
        example: MONTHLY
        type: string
      weeklySchedule:
        $ref: '#/definitions/WeeklySchedule'
    required:
      - paymentAmount
      - paymentDates
      - startDate
      - type
    type: object
  CalendarBasedRequest:
    description: >-
      Creates a `CalendarBased` schedule. `CalendarBased` schedules also provide
      additional payment options to the user. `CalendarBased` schedules have
      three possible schedule types; `WeeklySchedule`, `MonthlySchedule`, and
      `AnnualSchedule`. Only one of these schedule types can be used in each
      `CalendarBased` schedule.
    properties:
      annualSchedule:
        $ref: '#/definitions/AnnualSchedule'
      memo:
        description: >-
          An optional user provided message to associate with a `Payment` to
          indicate what the `Payment` is for. The `memo` is printed on the check
          if the `Payment` is made using a check.
        type: string
      monthlySchedule:
        $ref: '#/definitions/MonthlySchedule'
      paymentAmount:
        $ref: '#/definitions/Amount'
      startDate:
        description: The date the `RecurringSchedule` should begin scheduling `Payments`.
        format: date
        type: string
      type:
        description: >-
          Indicates which of `weeklySchedule`, `monthlySchedule` or
          `annualSchedule` is provided.
        enum:
          - WEEKLY
          - MONTHLY
          - ANNUALLY
        example: MONTHLY
        type: string
      weeklySchedule:
        $ref: '#/definitions/WeeklySchedule'
    required:
      - paymentAmount
      - startDate
      - type
    type: object
  CalendarBasedUpdate:
    description: Updates an existing `CalendarBased` `RecurringSchedule`.
    properties:
      annualSchedule:
        $ref: '#/definitions/AnnualSchedule'
      memo:
        description: >-
          An optional message to associate with a `Payment` to indicate what the
          `Payment` is for. The `memo` is printed on the check if the `Payment`
          is made using a check.
        type: string
      monthlySchedule:
        $ref: '#/definitions/MonthlySchedule'
      paymentAmount:
        $ref: '#/definitions/Amount'
      type:
        description: >-
          Indicates which of `weeklySchedule`, `monthlySchedule` or
          `annualSchedule` is provided.
        enum:
          - WEEKLY
          - MONTHLY
          - ANNUALLY
        example: MONTHLY
        type: string
      weeklySchedule:
        $ref: '#/definitions/WeeklySchedule'
    type: object
  Card:
    description: Represents the `Card` to use for a `CustomerFundingAccount`.
    properties:
      billingAddress:
        $ref: '#/definitions/Address'
      brand:
        description: Indicates the network of the `Card`.
        enum:
          - VISA
          - MASTERCARD
          - DISCOVER
          - AMEX
          - DINERS_CLUB
          - JCB
          - UNKNOWN
        example: AMEX
        type: string
      created:
        description: The timestamp when the `Card` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      expirationDate:
        description: The date the `Card` expires.
        example: '2021-01-01'
        format: date
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Card`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The identifier for the `Card`
        example: c_83ede6ae-a080-11ea-bb37-0242ac130002
        readOnly: true
        type: string
      nameOnCard:
        description: The name of the card holder as printed on the `Card`.
        example: Able N. Dwelling
        readOnly: true
        type: string
      number:
        description: The card number.
        example: '3333'
        pattern: '[#0-9]{12,}[0-9]{4}'
        readOnly: true
        type: string
      token:
        description: >-
          For improved security, instead of providing a card number, a token can
          be provided that BillGO will use to lookup the `Card` details.
        type: string
      type:
        enum:
          - CREDIT
          - DEBIT
        type: string
      updated:
        description: The timestamp when the `Card` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - billingAddress
      - brand
      - created
      - expirationDate
      - id
      - nameOnCard
      - type
      - updated
    type: object
  CardRequest:
    description: Represents the `Card` to use for a `CustomerFundingAccount`.
    properties:
      billingAddress:
        $ref: '#/definitions/AddressRequest'
      brand:
        description: Indicates the network of the `Card`.
        enum:
          - VISA
          - MASTERCARD
          - DISCOVER
          - AMEX
          - DINERS_CLUB
          - JCB
          - UNKNOWN
        example: AMEX
        type: string
      expirationDate:
        description: The date the `Card` expires. Must be a date in the future.
        example: '2021-01-01'
        format: date
        type: string
      nameOnCard:
        description: The name of the card holder as printed on the `Card`.
        example: Able N. Dwelling
        type: string
      number:
        description: The card number.
        example: 0812555544443333
        pattern: '[0-9]{16}'
        type: string
      token:
        description: >-
          For improved security, instead of providing a card number, a token can
          be provided that BillGO will use to lookup the `Card` details.
        type: string
      type:
        enum:
          - CREDIT
          - DEBIT
        type: string
    required:
      - billingAddress
      - brand
      - expirationDate
      - nameOnCard
      - type
    type: object
  Check:
    description: >-
      Represents the `Check` that was used to make the `Payment`. Provides
      resource links for retrieving front and back images of the `Check`.
    properties:
      backImageHash:
        description: The SHA-1 hash of the back of the `Check`.
        type: string
      backImageLink:
        $ref: '#/definitions/ResourceLink'
      backImageSize:
        description: The size of the back of the `Check` image in bytes.
        format: int32
        type: integer
      contentType:
        description: The MIME content type of the `Check` image.
        type: string
      created:
        description: The timestamp when the `Check` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Check`.'
        example: Qyh1JwU2t4JA
        type: string
      fboAccountNumber:
        description: The fbo account number on the check.
        type: string
      fboRoutingNumber:
        description: The fbo routing number on the check.
        type: string
      frontImageHash:
        description: The SHA-1 hash of the front of the `Check`.
        type: string
      frontImageLink:
        $ref: '#/definitions/ResourceLink'
      frontImageSize:
        description: The size of the front of the `Check` image in bytes.
        format: int32
        type: integer
      id:
        description: The unique identifier for the `Check`.
        type: string
      memo:
        description: >-
          The user provided message associated with the `Payment`. The `memo`
          will be found on the `Check` image.
        type: string
      partnerId:
        description: An optional field for partners to add a partner ID for this `Check`.
        type: string
      sequenceNumber:
        description: The sequence number on the check.
        type: string
      validCheck:
        type: boolean
    required:
      - created
      - id
    type: object
  CustomerConsent:
    description: User's consent for making payments with virtual cards.
    properties:
      billPayAcceptTimestamp:
        description: >-
          The timestamp when the `User` accepted the bill pay customer consent
          terms and conditions.
        example: '2019-10-14T16:22:00Z'
        format: date-time
        type: string
      billPayTermsId:
        description: The bill pay customer consent `Terms` identifier for the `User`.
        pattern: '([0-9a-zA-Z_@\.-]+)'
        type: string
      virtCardAcceptTimestamp:
        description: >-
          The timestamp when the `User` accepted the virtual card customer
          consent terms and conditions.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      virtCardTermsId:
        description: The virtual card customer consent `Terms` identifier for the `User`.
        pattern: '([0-9a-zA-Z_@\.-]+)'
        type: string
    type: object
  CustomerConsentTermsResponse:
    description: Terms for customer consent
    properties:
      terms:
        description: Terms for customer consent
        items:
          $ref: '#/definitions/Terms'
        type: array
    type: object
  CustomerConsentUpdate:
    description: Customer's consent for making payments with virtual cards.
    properties:
      billPayAcceptTimestamp:
        description: >-
          The timestamp when the `User` accepted the bill pay customer consent
          terms and conditions.
        example: '2019-10-14T16:22:00Z'
        format: date-time
        type: string
      billPayTermsId:
        description: The bill pay customer consent `Terms` identifier for the `User`.
        pattern: '([0-9a-zA-Z_@\.-]+)'
        type: string
      removeVirtualCardConsent:
        description: >-
          Removes Virtual Card consent. Setting this to true may update the
          delivery date for pending payments.
        type: boolean
      virtCardAcceptTimestamp:
        description: >-
          The timestamp when the `User` accepted the virtual card customer
          consent terms and conditions. Setting this may update the delivery
          date for pending payments.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      virtCardTermsId:
        description: >-
          The virtual card customer consent `Terms` identifier for the `User`.
          Setting this may update the delivery date for pending payments.
        pattern: '([0-9a-zA-Z_@\.-]+)'
        type: string
    type: object
  CustomerFundingAccount:
    description: >-
      Represents the `CustomerFundingAccount` for making `Payment`s.
      `CustomerFundingAccount` can be one of two types: `Card` or `BankAccount`.
      Only one of the two types can be used per `CustomerFundingAccount`
      instance.
    properties:
      bankAccount:
        $ref: '#/definitions/ExternalBankAccount'
      card:
        $ref: '#/definitions/Card'
      created:
        description: When the `CustomerFundingAccount` was created.
        example: '2018-03-15T18:20:01Z'
        format: date-time
        type: string
      externalId:
        description: >-
          The unique, shortened (12 chars) identifier for the
          `CustomerFundingAccount`.
        example: Qyh1JwU2t4JA
        type: string
      id:
        description: The unique identifier for the `CustomerFundingAccount`.
        example: cfa_b8ef29c894cc4ecca9446d00b0a1e838
        type: string
      nickname:
        description: User supplied name for this account
        type: string
      partnerId:
        description: >-
          An optional field for partners to add a partner ID for this
          `CustomerFundingAccount`.
        example: f5a1859358dc4c44bf27c7fb73d29c03
        type: string
      status:
        description: The status of the `CustomerFundingAccount`.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: Indicates the type of the `CustomerFundingAccountType`.
        enum:
          - CARD
          - BANK_ACCOUNT
        example: CARD
        type: string
      updated:
        description: When the `CustomerFundingAccount` was last updated.
        example: '2018-03-15T18:20:01Z'
        format: date-time
        type: string
      userLink:
        $ref: '#/definitions/Link'
    required:
      - created
      - id
      - status
      - type
      - updated
      - userLink
    type: object
  CustomerFundingAccountPage:
    description: >-
      A Pageable object for returning server-side pagination information for
      customer funding accounts.
    properties:
      data:
        description: A generic list of data to return with the pagination information.
        items:
          $ref: '#/definitions/CustomerFundingAccount'
        readOnly: true
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    required:
      - data
      - page
    type: object
  CustomerFundingAccountRequest:
    description: Indicates the `CustomerFundingAccount` for the associated `PayeeAccount`.
    properties:
      bankAccount:
        $ref: '#/definitions/ExternalBankAccountRequest'
      card:
        $ref: '#/definitions/CardRequest'
      nickname:
        description: User supplied name for this account
        type: string
      partnerId:
        description: >-
          An optional field for partners to add a partner ID for this
          `CustomerFundingAccount`.
        example: f5a1859358dc4c44bf27c7fb73d29c03
        type: string
      type:
        description: Indicates the type of the `CustomerFundingAccountType`.
        enum:
          - CARD
          - BANK_ACCOUNT
        example: CARD
        type: string
    required:
      - type
    type: object
  CustomerFundingAccountUpdate:
    description: Holds the changes that can be made to a `CustomerFundingAccount`.
    properties:
      nickname:
        description: User supplied name for this account
        type: string
    type: object
  Datum:
    description: >-
      When linking a `Merchant`, this information is needed for account access
      and payment processing.
    properties:
      choices:
        description: >-
          The set of designated choices for the `Datum`. The choices are an
          array of options that should be presented to the user. Choices are
          specific to the Choice and QuestionAnswerChoice `Datum` types.
        items:
          description: One of the designated choices for the `Datum`.
          example: '"Hometown, USA"'
          readOnly: true
          type: string
        readOnly: true
        type: array
      description:
        description: >-
          The human readable description. The description is the text that
          should be shown to the user for the `Datum`. In practice, this will
          use biller-specific terminology (e.g. 'Passcode' may be shown for a
          biller's Password prompt.).
        example: Where were you born?
        readOnly: true
        type: string
      displayOrder:
        description: >-
          The order in which to display the datums to a user if an order is
          provided.
        example: 0
        format: int32
        readOnly: true
        type: integer
      examples:
        description: >-
          The example values for the `Datum`. These examples can be presented to
          the user if they have difficulty in providing the value for the
          `Datum`.
        items:
          description: One of the example values for the `Datum`.
          example: '"New York, NY"'
          readOnly: true
          type: string
        readOnly: true
        type: array
      id:
        description: The identifier of the `Datum`.
        example: d_de26aae6b6cb40959bd924c1c54323dc
        readOnly: true
        type: string
      oAuthAuthenticationUrl:
        type: string
      oauthAuthenticationUrl:
        type: string
      optional:
        description: Whether or not the `Datum` is optional.
        example: false
        readOnly: true
        type: boolean
      pattern:
        description: >-
          The pattern is an optional regular expression that should be used to
          validate the `Datum` value specified by the user. When a pattern is
          specified, an array of examples is also provided.
        example: '[0-9]{5}'
        readOnly: true
        type: string
      sensitiveField:
        description: >-
          Whether or not the `Datum` is considered sensitive. If `true`, it's
          recommended that the `Datum` value is treated like a password in the
          UI.
        example: false
        readOnly: true
        type: boolean
      status:
        description: >-
          Indicates the status of a particular piece of information. The status
          of `Datum` can be inspected to determine whether it has been verified
          or is invalid or missing.
        enum:
          - MISSING
          - UNVERIFIED
          - INVALID
          - VALID
        example: UNVERIFIED
        type: string
      trait:
        description: Proof traits can assist in the display of proof fields to end users.
        enum:
          - NONE
          - NUMERIC
          - EMAIL
          - PHONE
        example: PHONE
        type: string
      type:
        description: Indicates the type of the `Datum`.
        enum:
          - USERNAME
          - PASSWORD
          - DATE
          - CHOICE
          - TEXT
          - TEXT2
          - TEXT3
          - TEXT4
          - QUESTION_ANSWER
          - QUESTION_ANSWER_CHOICE
          - ACCOUNT_NUMBER
          - MERCHANT_REMITTANCE_ADDRESS
          - OAUTH
          - CITY
          - CONTROL_DATE
          - CUSTOMER_NUMBER
          - DATE_OF_BIRTH
          - EMAIL
          - FIRST_NAME
          - HOUSE_NUMBER
          - LAST_NAME
          - ORGANIZATION_NAME
          - PHONE_NUMBER
          - PIN_NUMBER
          - POLICY_NUMBER
          - STATE_ABBREVIATION
          - STREET_ADDRESS
          - ZIP_CODE
        example: QUESTION_ANSWER
        type: string
    required:
      - description
      - id
      - optional
      - sensitiveField
      - type
    type: object
  Device:
    description: Information about the device used by the user to create the payment.
    properties:
      anonymizerInUse:
        description: Is an anonymizer in use on the device
        type: boolean
      areaCode:
        description: The telephone area code the device is in
        type: string
      browser:
        description: The browser used to create the payment
        type: string
      city:
        description: The city where the device is
        type: string
      clientTimeZone:
        description: The time zone the device is in
        type: string
      continentCode:
        description: The continent where the device is
        type: string
      countryCode:
        description: The country where the device is
        type: string
      deviceId:
        description: The device ID captured when the customer initiated the transaction.
        type: string
      deviceOs:
        description: The device's operating system
        type: string
      flashData:
        description: Any flash data from the device
        type: string
      httpRequestHeaders:
        additionalProperties:
          description: Any HTTP request headers on the payment creation request
          type: string
        description: Any HTTP request headers on the payment creation request
        type: object
      installedFlashFonts:
        description: The flash fonts installed on the device
        items:
          description: The flash fonts installed on the device
          type: string
        type: array
      installedJsFonts:
        description: Any javascript fonts installed on the device
        items:
          description: Any javascript fonts installed on the device
          type: string
        type: array
      installedPlugins:
        description: Plugins installed in the user's browser
        items:
          description: Plugins installed in the user's browser
          type: string
        type: array
      ipAddress:
        description: The IP address of the device
        type: string
      latitude:
        description: The location of the device
        type: string
      longitude:
        description: The location of the device
        type: string
      metroCode:
        description: The metropolitan code where the device is
        type: string
      mimeTypes:
        description: MIME types specified
        items:
          description: MIME types specified
          type: string
        type: array
      mobileNumber:
        description: The mobile number of the device used to create the payment.
        type: string
      navigator:
        description: Any screen navigator in use by the user
        type: string
      networkCarrier:
        description: The network carrier the device is connected to
        type: string
      postalCode:
        description: The postal code of the device's location
        type: string
      proxyDescription:
        description: The description of any proxy in use
        type: string
      proxyType:
        description: The type of any proxy in use
        type: string
      region:
        description: The region the device is in
        type: string
      screenResolutionX:
        description: The screen width in pixels
        format: int32
        type: integer
      screenResolutionY:
        description: The screen height in pixels
        format: int32
        type: integer
      silverlightData:
        description: Any silverlight data from the device
        type: string
      speedOfInteraction:
        description: The speed of the device's connection
        type: string
      tpDeviceScore:
        description: >-
          Third party Risk score (InAuth, biocatch…etc). Can be used for systems
          like SOCURE passing a device authorization score.
        format: int32
        type: integer
      tpDeviceScoreReason:
        description: 'Third party Risk score Reason Code (InAuth, biocatch…etc)'
        type: string
      type:
        description: 'The type of device: mobile or PC'
        enum:
          - MOBILE
          - PC
        type: string
      userAgent:
        description: Any software agent in use at the time
        type: string
    type: object
  Document:
    description: >-
      Represents a document the `Merchant` has made available to the user. Most
      often this is an invoice or bill.
    properties:
      contentType:
        description: The MIME content type of the `Document`.
        readOnly: true
        type: string
      created:
        description: The timestamp when the `Document` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      documentCreated:
        description: The timestamp when the `Document` was created for the payee account.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      hash:
        description: The SHA-1 hash of the `Document`.
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Document`.
        example: d_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      lastRefresh:
        description: The timestamp when the `Document` was last refreshed.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      name:
        description: The name of the `Document`.
        readOnly: true
        type: string
      payeeAccountLink:
        $ref: '#/definitions/Link'
      size:
        description: The size of the `Document` in bytes.
        format: int32
        readOnly: true
        type: integer
      status:
        description: Indicates the status of the `Document`.
        enum:
          - ACTIVE
          - ARCHIVED
        type: string
      updated:
        description: The timestamp when the `Document` was updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    required:
      - contentType
      - created
      - documentCreated
      - hash
      - id
      - name
      - payeeAccountLink
      - size
      - updated
    type: object
  DocumentLink:
    description: >-
      Provides the `Document` retrieval information for the `Document`
      associated with the `User's` `PayeeAccount`.
    properties:
      expiration:
        description: >-
          Indicates when the `Document` at the `resourceUrl` is no longer
          available for retrieval.
        format: date-time
        readOnly: true
        type: string
      resourceUrl:
        description: Indicates the URL to retrieve the `Document` from.
        readOnly: true
        type: string
    required:
      - expiration
      - resourceUrl
    type: object
  DocumentList:
    description: >-
      Represents the list of `Documents` returned as the result of a retrieval
      request.
    properties:
      documents:
        items:
          $ref: '#/definitions/Document'
        readOnly: true
        type: array
    required:
      - documents
    type: object
  EbnAccountNumberMask:
    description: EBN account number mask for the `Merchant`.
    properties:
      mask:
        description: >-
          The account number mask is a combination of account number
          placeholders containing numbers, letters, and special characters. 

          Masks consist of the following characters: 

          ! - matches special character

          * - alphabetic

          # - numeric

          @ - alphanumeric
        example: 000#########
        type: string
      maskLength:
        description: the number of characters in account number mask.
        example: 12
        format: int32
        type: integer
    required:
      - mask
      - maskLength
    type: object
  Error:
    description: Represents an error response from an API request.
    properties:
      code:
        description: The HTTP response code.
        example: 404
        format: int32
        readOnly: true
        type: integer
      details:
        description: The details of the error message.
        example: User with supplied identifier not found.
        readOnly: true
        type: string
      message:
        description: The HTTP response code message.
        example: Not Found
        readOnly: true
        type: string
    type: object
  ExtendedStatus:
    description: >
      ### Overview:

      The following table lists the possible values for `extendedStatus` for the
      `railConstraints` with in 

      `paymentConstraints`. A `railConstraints'` `status` can either be `NEEDS`
      or `UNAVAILABLE`.

      A `railConstraints` `status` of `UNAVAILABLE` cannot be resolved by the
      end user. A `railConstraints`

      `status` of `NEEDS` indicates that there is an action that can be taken to
      resolve the reason for the 

      reported `railConstraints` `status`. If there is an action that the end
      user can take to resolve the 

      reason for the `railConstraints'` `status`, then the `Explanation` column
      indicates the action that the end 

      user should take. If the suggested action can be performed when making a
      payment, then the 

      `canBeProvidedWithPaymentRequest` attribute will be `true`. Explanations
      in the `Explanation` column that 
       contain `${<attribute_name>}` will have the attribute name replaced with the attribute value.



      <table>

      <col style="width:65%">

      <col style="width:35%">

      <thead>

      <tr><th>Code</th><th>Explanation</th></tr>

      </thead>

      <tbody>

      <tr><td><code>ACCESS_RESTRICTED</code></td><td>Cannot link: access
      restricted</td></tr>

      <tr><td><code>ACCOUNT_ACTIVATION</code></td><td>Cannot link: account not
      active</td></tr>

      <tr><td><code>ACCOUNTS_ADDED</code></td><td>Contact merchant to add
      accounts</td></tr>

      <tr><td><code>ACCOUNT_TRANSFERRED</code></td><td>Cannot link: account
      transferred</td></tr>

      <tr><td><code>ACCOUNT_UPDATE</code></td><td>Cannot link: info needed for
      access</td></tr>

      <tr><td><code>ACCOUNT_VERIFICATION</code></td><td>Cannot link: verify
      account</td></tr>

      <tr><td><code>ACTIVATION</code></td><td>Cannot link: activate
      account</td></tr>

      <tr><td><code>ADDITIONAL_LINKING_DATUMS</code></td><td>Please provide the
      missing datums required to link your account.</td></tr>

      <tr><td><code>BILL_CHARGED_TO_PAYMENT_ACCOUNT</code></td><td>Payments for
      the user's payee_name payee account are being charged to a payment
      account. We are not able to accept a payment at this time.</td></tr>

      <tr><td><code>BILLING_DETAILS_UNAVAILABLE</code></td><td>Cannot link: no
      billing details</td></tr>

      <tr><td><code>BILL_PAY_CONSENT</code></td><td>Ask the user to accept the
      bill pay consent terms.</td></tr>

      <tr><td><code>CARD_REGISTRATION</code></td><td>Cannot link: register
      payment card</td></tr>

      <tr><td><code>CUSTOM_PAYMENT_DISABLED</code></td><td>The ${payee_name}
      payee has indicated that custom payments are disabled for associated
      accounts. We are not able to accept a payment at this time.</td></tr>

      <tr><td><code>DELIVER_BY_DATE_BEFORE_TODAY</code></td><td>The payment
      delverByDate: ${deliver_by_date}cannot be before today:
      ${today}.</td></tr>

      <tr><td><code>DELIVER_BY_DATE_MISSING</code></td><td>The deliver by date
      must be provided.</td></tr>

      <tr><td><code>DIRECT_PAYMENT_IS_NOT_SUPPORTED</code></td><td>This payment
      rail does not support direct payments using an external funding account or
      credit card.</td></tr>

      <tr><td><code>EBN_PAYMENT_RAIL_IS_NOT_SUPPORTED</code></td><td>The
      merchant does not support EBN payments.</td></tr>

      <tr><td><code>EMAIL_VALIDATION</code></td><td>Cannot link: set up
      automatic alerts</td></tr>

      <tr><td><code>FIRST_BILL_NOT_READY</code></td><td>Bill not avail: will
      appear when ready</td></tr>

      <tr><td><code>FREE_TRIAL_ONLY</code></td><td>Free account: no bills to
      show</td></tr>

      <tr><td><code>FUNDING_ACCOUNT</code></td><td>Ask the user to create a
      default funding account or to provide the funding account details with the
      payment request.</td></tr>

      <tr><td><code>HOLIDAY_DELIVER_BY_DATE</code></td><td>Payment cannot be
      delivered on bank holidays.</td></tr>

      <tr><td><code>HOLIDAY_SEND_ON_DATE</code></td><td>Payment cannot be sent
      on bank holidays.</td></tr>

      <tr><td><code>IN_COLLECTIONS</code></td><td>Cannot link: contact
      merchant</td></tr>

      <tr><td><code>LINKED_PAYEE</code></td><td>Ask the user to correct the
      linking datums and attempt to link the payee again.</td></tr>

      <tr><td><code>LINKING_DATUMS</code></td><td>Ask the user to provide
      linking datums for the payee.</td></tr>

      <tr><td><code>LINKING</code></td><td>The merchant account is in the
      process of being linked and payments are not available at the
      moment.</td></tr>

      <tr><td><code>MAILING_ADDRESS_UPDATE</code></td><td>Cannot link: update
      mailing address</td></tr>

      <tr><td><code>MANUAL_DATUMS</code></td><td>Ask the user to provide manual
      datums for the payee account.</td></tr>

      <tr><td><code>MATCHING_LINKING_DATUMS</code></td><td>The provided linking
      datums do not match any payment rails.</td></tr>

      <tr><td><code>MATCHING_MANUAL_DATUMS</code></td><td>The provided manual
      datums do not match any payment rails.  Ask the user to provide an updated
      set of manual datums.</td></tr>

      <tr><td><code>MERCHANT_HAS_FEE</code></td><td>Merchant has a
      fee.</td></tr>

      <tr><td><code>MERCHANT_ID</code></td><td>Ask the user to add a merchantId
      to the payee.</td></tr>

      <tr><td><code>MERCHANT_NOT_IN_DIRECTORY</code></td><td>The merchant is not
      found in the directory.</td></tr>

      <tr><td><code>MERCHANT_NOT_LINKABLE</code></td><td>Can't support biller:
      add manually</td></tr>

      <tr><td><code>MERCHANT_PAYMENT_HEALTH</code></td><td>Merchant payment
      health is below the required threshold.</td></tr>

      <tr><td><code>MISSING_BILL</code></td><td>Payee account does not have a
      bill.</td></tr>

      <tr><td><code>MISSING_REASON</code></td><td>Failed to identify the
      specific reason.</td></tr>

      <tr><td><code>CODE_GENERATOR_NOT_SUPPORTED</code></td><td>Cannot link:
      change code method</td></tr>

      <tr><td><code>NEW_DATUMS</code></td><td>Cannot link: needs new
      username/password</td></tr>

      <tr><td><code>NON_US_ACCOUNTS_UNSUPPORTED</code></td><td>Cannot link:
      non-US account</td></tr>

      <tr><td><code>NOT_ACCOUNT_OWNER</code></td><td>Cannot link: access
      issues</td></tr>

      <tr><td><code>NO_BILLS_AVAILABLE</code></td><td>No bills available at this
      time</td></tr>

      <tr><td><code>NOT_ACCESSIBLE_ONLINE</code></td><td>Cannot link: activate
      online access</td></tr>

      <tr><td><code>OUT_OF_BAND_PAYMENT_DISABLED</code></td><td>The user's bill
      has already been paid and the ${payee_name} payee does not accept extra
      payments. We are not able to accept additional payments at this
      time</td></tr>

      <tr><td><code>PAPERLESS_ENROLLMENT</code></td><td>Cannot get bill: enroll
      in paperless</td></tr>

      <tr><td><code>PASSWORD_RESET</code></td><td>Cannot link: reset
      username/password</td></tr>

      <tr><td><code>PAYEE_ACCOUNT_HOLDER_NAME</code></td><td>Ask the user to
      provide the payer name for the payee account</td></tr>

      <tr><td><code>PAYEE_ACCOUNT_NUMBER</code></td><td>Ask the user to provide
      the remittance account number for the payee account.</td></tr>

      <tr><td><code>PAYEE_ACCOUNT_REMITTANCE_ACCOUNT</code></td><td>Ask the user
      to provide the payee account remittance account.</td></tr>

      <tr><td><code>PAYEE_ACCOUNT_REMITTANCE_ADDRESS</code></td><td>Ask the user
      to provide the remittance address for the payee account.</td></tr>

      <tr><td><code>PAYEE_ACCOUNT_PAYER_ADDRESS</code></td><td>Ask the user to
      provide the payer address.</td></tr>

      <tr><td><code>PAYMENTS_DISABLED_FOR_PAYEE</code></td><td>The ${payee_name}
      payee has indicated that payments are disabled for all associated
      accounts. We are not able to accept a payment at this time.</td></tr>

      <tr><td><code>PAYMENT_ALREADY_SCHEDULED</code></td><td>A payment for the
      user's payee_nameis already scheduled. We are not able to accept
      additional payments at this time.</td></tr>

      <tr><td><code>PAYMENT_INSTRUMENTS_ARE_NOT_SUPPORTED</code></td><td>Payments
      cannot be made for the merchant account with the provided payment
      instruments.</td></tr>

      <tr><td><code>PAYMENT_IS_PROCESSING</code></td><td>A payment is currently
      being processed for the user's ${payee_name} payee account. We are not
      able to accept additional payments at this time</td></tr>

      <tr><td><code>PAYMENT_UPDATE</code></td><td>Cannot link: update payment
      info</td></tr>

      <tr><td><code>PHONE_NUMBER_UPDATE</code></td><td>Cannot link: update phone
      number</td></tr>

      <tr><td><code>REACTIVATION</code></td><td>Cannot link: reactivate
      account</td></tr>

      <tr><td><code>REALTIME_PAYEE_LINKING_ERROR</code></td><td>The payee is not
      linked correctly. Retry linking process.</td></tr>

      <tr><td><code>REALTIME_PAYMENT_IS_NOT_SUPPORTED</code></td><td>The
      merchant does not support virtual bank accounts or virtual cards.
      Alternatively, enable virtual bank accounts or virtual cards in the client
      configuration.</td></tr>

      <tr><td><code>REALTIME_PAYMENT_RAIL_IS_NOT_SUPPORTED</code></td><td>The
      merchant does not support real time payments.</td></tr>

      <tr><td><code>SECURITY_IMAGE</code></td><td>Cannot link: create security
      image</td></tr>

      <tr><td><code>SECURITY_PHRASE</code></td><td>Cannot link: set up security
      phrase</td></tr>

      <tr><td><code>SECURITY_QUESTIONS</code></td><td>Cannot link: add security
      questions</td></tr>

      <tr><td><code>SECURITY_UPDATE</code></td><td>Cannot link: set up automatic
      alerts</td></tr>

      <tr><td><code>SEND_ON_DATE_BEFORE_TODAY</code></td><td>The payment
      sendOnDate: ${send_on_date}cannot be before today: ${today}.</td></tr>

      <tr><td><code>SEND_ON_DATE_MISSING</code></td><td>The send on date must be
      provided.</td></tr>

      <tr><td><code>SERVICE_AUTOMATIC_AT_BANK</code></td><td>The user's
      ${payee_name}payee account is set up to be paid automatically through the
      user's bank. We are not able to accept a payment at this time</td></tr>

      <tr><td><code>SERVICE_AUTOMATIC</code></td><td>Autopay is configured for
      the account at the ${payee_name} payee.</td></tr>

      <tr><td><code>SITE_DECOMMISSIONED</code></td><td>The online merchant
      payment portal is not longer available.</td></tr>

      <tr><td><code>SUBSCRIPTION_BASED_MERCHANT</code></td><td>Payments to
      subscription based merchants are not supported.</td></tr>

      <tr><td><code>SUPERSEDED_BY_MUTUALLY_EXCLUSIVE_RAIL</code></td><td>This
      payment rail is superseded by a mutually exclusive payment rail.</td></tr>

      <tr><td><code>TEMPORARILY_DISABLED</code></td><td>Account briefly
      disabled. Try again later.</td></tr>

      <tr><td><code>TURNED_OFF</code></td><td>Enable the payment rail in the
      client configuration.</td></tr>

      <tr><td><code>UNAUTHORIZED</code></td><td>Cannot link:
      unauthorized</td></tr>

      <tr><td><code>USERNAME_UPDATE</code></td><td>Cannot link: update phone
      number</td></tr>

      <tr><td><code>VALID_EBN_PAYEE_ACCOUNT_NUMBER</code></td><td>Ask the user
      to verify that the account number on the payee account remittance is
      correct.</td></tr>

      <tr><td><code>VALID_LINKING_DATUMS</code></td><td>Ask the user to correct
      the provided datums associated with the payee.</td></tr>

      <tr><td><code>VIRTUAL_CARD_CONSENT</code></td><td>Ask the user to accept
      the virtual card consent terms.</td></tr>

      <tr><td><code>WEEKEND_DELIVER_BY_DATE</code></td><td>Payment cannot be
      delivered on weekends.</td></tr>

      <tr><td><code>WEEKEND_SEND_ON_DATE</code></td><td>Payment cannot be sent
      on weekends.</td></tr>

      </tbody>

      </table>
    properties:
      canBeProvidedWithPaymentRequest:
        description: >-
          Indicates that the required information can be provided when making a
          payment.
        readOnly: true
        type: boolean
      explanation:
        description: >-
          The `explanation` indicates the reason that the payment rail status is
          `NEEDS` or `UNAVAILABLE`.
        readOnly: true
        type: string
      reason:
        readOnly: true
        type: string
    readOnly: true
    type: object
  ExternalBankAccount:
    description: >-
      Represents the `BankAccount` associated with a `FundingAccount` or
      `CustomerFundingAccount`.
    properties:
      accountNumber:
        description: The last 4 digits of the `BankAccount` account number.
        example: 0812
        type: string
      authorizedUsers:
        description: >-
          The list of `AuthorizedUsers` that are authorized users of the
          `BankAccount`.
        items:
          $ref: '#/definitions/AuthorizedUser'
        type: array
      bankName:
        description: The name of the bank the `BankAccount` belongs to.
        example: Hero Bank
        type: string
      created:
        description: The timestamp when the `BankAccount` was created.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `BankAccount`.
        example: ba_45fc183f900c4d9292610254b04c0089
        readOnly: true
        type: string
      routingNumber:
        description: The `BankAccount` routing number.
        example: '134570812'
        type: string
      subType:
        enum:
          - CHECKING
          - SAVINGS
        type: string
      type:
        description: Indicates the type of `BankAccount`.
        enum:
          - DDA
          - MMA
          - LOAN
        example: DDA
        type: string
      updated:
        description: The timestamp when the `BankAccount` was last updated.
        example: '2017-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - bankName
      - created
      - id
      - type
      - updated
    type: object
  ExternalBankAccountRequest:
    description: >-
      Represents the `BankAccount` to associate with a `FundingAccount` or
      `CustomerFundingAccount`.
    properties:
      accountNumber:
        description: The `BankAccount` account number.
        pattern: \d+
        type: string
      authorizedUsers:
        description: >-
          The list of `AuthorizedUsers` that are authorized for the
          `BankAccount`.
        items:
          $ref: '#/definitions/AuthorizedUser'
        type: array
      bankName:
        description: The name of the bank this account belongs to.
        example: Hero Bank
        type: string
      routingNumber:
        description: The `BankAccount` routing number.
        pattern: '[0-9]{9}'
        type: string
      subType:
        enum:
          - CHECKING
          - SAVINGS
        type: string
      type:
        description: Indicates the type of `BankAccount`.
        enum:
          - DDA
          - MMA
          - LOAN
        example: DDA
        type: string
    required:
      - accountNumber
      - bankName
      - routingNumber
      - type
    type: object
  FundingAccount:
    description: >-
      This is the account to fund the `Payment` from and it is a bank account at
      the partner bank.
    properties:
      bankAccount:
        $ref: '#/definitions/BankAccount'
      created:
        description: The timestamp the `FundingAccount` was created.
        example: '2018-03-15T18:20:01Z'
        format: date-time
        type: string
      defaultFundingAccount:
        description: Indicates if the `FundingAccount` is the default for the `User`.
        example: true
        type: boolean
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `FundingAccount`.'
        example: Qyh1JwU2t4JA
        type: string
      id:
        description: The unique identifier for the `FundingAccount`.
        example: fa_b8ef29c894cc4ecca9446d00b0a1e838
        type: string
      nickname:
        description: A nickname to use when displaying the `FundingAccount`.
        example: Joint Checking
        type: string
      partnerId:
        description: >-
          The identifier to use when referencing the `FundingAccount` with the
          partner.
        example: 6fec849a4fee406a955c59a7557c1e21
        type: string
      status:
        description: The status of the `FundingAccount`.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: >-
          If `FOREIGN_KEY`, then `partnerId` must be set. If `ACCOUNT_DETAILS`,
          then the `BankAccount` must be supplied and `partnerId` is optional.
        enum:
          - FOREIGN_KEY
          - ACCOUNT_DETAILS
        example: ACCOUNT_DETAILS
        type: string
      updated:
        description: The timestamp the `FundingAccount` was last updated.
        example: '2018-03-15T18:20:01Z'
        format: date-time
        type: string
    required:
      - created
      - defaultFundingAccount
      - id
      - status
      - type
      - updated
    type: object
  FundingAccountPage:
    description: >-
      A Pageable object for returning server-side pagination information for
      funding accounts.
    properties:
      data:
        description: A generic list of data to return with the pagination information.
        items:
          $ref: '#/definitions/FundingAccount'
        readOnly: true
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    required:
      - data
      - page
    type: object
  FundingAccountRequest:
    properties:
      bankAccount:
        $ref: '#/definitions/BankAccountRequest'
      defaultFundingAccount:
        default: false
        description: >-
          If set to `true`, this account will be used as the default
          `FundingAccount` for this `User`. This will not override any `Payment`
          or `Schedule` setting.
        example: true
        type: boolean
      nickname:
        description: A nickname to use when displaying the `FundingAccount`.
        example: Joint Checking
        type: string
      partnerId:
        description: >-
          An optional field for partners to add a partner ID for this
          `FundingAccount`.
        example: f5a1859358dc4c44bf27c7fb73d29c03
        type: string
    type: object
  FundingAccountUpdate:
    properties:
      bankAccount:
        $ref: '#/definitions/BankAccountUpdate'
      defaultFundingAccount:
        description: >-
          The `defaultFundingAccount` is optional, when provided its value must
          be `true`. This will not override any `Payment` or `Schedule` setting.
        example: true
        type: boolean
      nickname:
        description: A nickname to use when displaying the `FundingAccount`.
        example: Joint Checking
        type: string
      status:
        description: The status of the `FundingAccount`.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      validFundingAccountUpdateRequest:
        type: boolean
      validFundingDefaultFundingAccount:
        type: boolean
    type: object
  HolidayDto:
    description: Represents a holiday.
    properties:
      date:
        description: The date on which the holiday is observed.
        example: '2022-01-01'
        format: date
        type: string
      name:
        description: The name of the holiday.
        example: New Year's Day
        type: string
    required:
      - name
    type: object
  JwtVerificationRequest:
    description: Verify the JWT was issued by this API.
    properties:
      jwt:
        description: The JWT to verify
        type: string
    required:
      - jwt
    type: object
  Link:
    description: Provides a relative uri to a related API resource.
    properties:
      rel:
        description: The type of the relationship with the related API resource.
        readOnly: true
        type: string
      uri:
        description: The relative `URI` to use to retrieve the related API resource.
        readOnly: true
        type: string
    required:
      - rel
      - uri
    type: object
  LinkData:
    description: >-
      Provides information about the linking status of the `Merchant` added by
      the user.
    properties:
      datums:
        items:
          $ref: '#/definitions/Datum'
        type: array
      documentEnrollmentStatus:
        description: >-
          Indicates the `Document` enrollment status for a `Payee` or for a
          `PayeeAccount`.
        enum:
          - NONE
          - NOT_ENROLLED
          - ENROLLING
          - ENROLLED
        example: ENROLLED
        type: string
      extendedLinkStatus:
        description: Indicates the extended linking status of the `Payee`.
        enum:
          - NONE
          - IDENTIFICATION_CODE_REQUIRED
          - DATUMS_NEEDED
          - PROFILE_UPDATE_REQUIRED
        example: IDENTIFICATION_CODE_REQUIRED
        type: string
      isDocumentSyncingEnabled:
        description: Indicates if document synchronization is enabled.
        type: boolean
      lastDocumentSync:
        description: The timestamp when the documents were last synchronized.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      lastSync:
        description: >-
          The timestamp when the `Payee` data was last pulled/synchronized from
          the `Merchant` for the `User`. This includes new and/or updated `Payee
          Account`s and `Bill`s.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      linkClosedCode:
        description: The code for why the `Payee` is closed.
        enum:
          - NONE
          - ACCOUNT_INACTIVE
          - FIRST_BILL_NOT_READY
          - FREE_TRIAL_ONLY
          - NO_ACCOUNTS_ADDED
          - NO_BILLS_AVAILABLE
          - NO_US_ACCOUNTS_UNSUPPORTED
          - ACCOUNTS_NOT_VERIFIED
          - PAPERLESS_ENROLLMENT_REQUIRED
          - ACCOUNT_TRANSFERRED
          - BILLING_DETAILS_UNAVAILABLE
          - SITE_DECOMMISSIONED
        example: ACCOUNT_INACTIVE
        readOnly: true
        type: string
      linkLockedCode:
        description: Link code for why the `Payee` is locked
        enum:
          - NONE
          - ACTIVATION_REQUIRED
          - NO_ACCESSIBLE_ONLINE
          - ACCESS_RESTRICTED
          - CODE_GENERATOR_NOT_SUPPORTED
          - UPDATE_REQUIRED
          - CREATE_SECURITY_PHRASE
          - CREATE_SECURITY_QUESTIONS
          - TEMPORARILY_DISABLED
          - PASSWORD_RESET_REQUIRED
          - PASSWORD_EXPIRED
          - NEW_PROOFS_REQUIRED
          - SECURITY_UPDATE_REQUIRED
          - PAYMENT_UPDATE_REQUIRED
          - IN_COLLECTIONS
          - CARD_REGISTRATION_REQUIRED
          - UPDATE_EMAIL_ADDRESS
          - UPDATE_PHONE_NUMBER
          - UPDATE_USERNAME
          - EMAIL_VALIDATION_REQUIRED
          - UNAUTHORIZED
          - REACTIVATION_REQUIRED
          - CREATE_SECURITY_IMAGE
          - NOT_ACCOUNT_OWNER
        example: ACTIVATION_REQUIRED
        readOnly: true
        type: string
    required:
      - datums
    type: object
  LinkDatumResponse:
    description: 'The value, provided by the user, of the required `Datum`.'
    properties:
      datumId:
        description: The id of the `Datum` provided from the list of required datums.
        type: string
      responseToken:
        description: The value provided by the user for the `Datum`.
        type: string
    required:
      - datumId
      - responseToken
    type: object
  LinkingInstructions:
    description: >-
      Provides the information needed to present to the user when the user
      selects to enable linking a `Merchant`
    properties:
      integrationId:
        description: The merchant directory integration id for the linking instructions.
        example: h-600855151
        readOnly: true
        type: string
      requiredDatums:
        description: The list of required `Datums` needed to link the `Merchant`.
        items:
          $ref: '#/definitions/Datum'
        readOnly: true
        type: array
      status:
        description: Indicates if a `Merchant` can be linked or not.
        enum:
          - NOT_SUPPORTED
          - ONLINE
          - OFFLINE
        example: ONLINE
        readOnly: true
        type: string
      urls:
        $ref: '#/definitions/Urls'
    required:
      - requiredDatums
      - status
    type: object
  LocalDateParam:
    description: 'The end date, exclusive, of the report to run.'
    example: '`2020-12-15`'
    type: object
  ManualDatumResponse:
    description: 'The value, provided by the user, of the required `Datum`.'
    properties:
      datumId:
        description: >-
          The identifier that uniquely identifies a `ManualDatumResponse` within
          a set of `ManualDatumResponses`.
        type: string
      responseToken:
        description: >-
          The value that was provided by the user as `ManualDatumResponse's`
          value.
        example: dr_AR234LJAERAW...
        type: string
    required:
      - datumId
      - responseToken
    type: object
  ManualInstructions:
    description: >-
      Provides the information needed to present to the user when the user
      selects a `Merchant` to add to their account.
    properties:
      integrationId:
        description: The merchant directory integration id for the manual instructions.
        example: h-600855151
        readOnly: true
        type: string
      requiredDatums:
        description: The list of required `Datums` needed to pay the `Merchant`.
        items:
          $ref: '#/definitions/Datum'
        readOnly: true
        type: array
    required:
      - requiredDatums
    type: object
  Merchant:
    description: >-
      The `Merchant` provides information that is required for the `User` to add
      the `Merchant` to their bill pay profile.
    properties:
      accountNumberAvailable:
        default: false
        description: >-
          The account number is expected to be provided by the merchant and
          available via `Payee Accounts`.
        example: false
        readOnly: true
        type: boolean
      addresses:
        items:
          $ref: '#/definitions/MerchantAddress'
        readOnly: true
        type: array
      categories:
        items:
          description: >-
            The category that is used to classify a `Merchant` or `PayeeAccount`
            in the BillGO network.
          enum:
            - AUTOLOAN
            - BANK
            - CABLE
            - CLUB
            - COLLECTIONS
            - CREDIT
            - ELECTRIC
            - GAS
            - GIFT
            - HOME
            - INSURANCE
            - INTERNET
            - LICENSE
            - LOAN
            - MEDIA
            - MEDICAL
            - MORTGAGE
            - PARKING
            - PHONE
            - PREPAID
            - RENT
            - SECURITY
            - STORAGE
            - STUDENTLOAN
            - UTILITY
            - WASTE
            - WATER
            - OTHER
          example: CABLE
          readOnly: true
          type: string
        readOnly: true
        type: array
      confidenceScore:
        description: >-
          The confidence level that the `User` has an account with the
          `Merchant`. (0.00-1.00)
        example: 0.98
        format: double
        readOnly: true
        type: number
      created:
        description: The date the `Merchant` was added into the BillGO network.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      ebnAccountNumberMasks:
        items:
          $ref: '#/definitions/EbnAccountNumberMask'
        type: array
      id:
        description: The unique identifier for the `Merchant`.
        example: att_ncp
        readOnly: true
        type: string
      linkingInstructions:
        items:
          $ref: '#/definitions/LinkingInstructions'
        type: array
      logoId:
        description: The identifier of the merchant logo.
        example: 3d2b1db8e49535078f3f2e7ca0jf8469
        readOnly: true
        type: string
      manualInstructions:
        items:
          $ref: '#/definitions/ManualInstructions'
        type: array
      naicsType:
        description: >-
          The North American Industry Classification System Code for the
          `Merchant`
        readOnly: true
        type: string
      name:
        description: The name of the `Merchant` to display to users.
        example: My Cable Company
        readOnly: true
        type: string
      phoneNumber:
        description: The phone number of the merchant.
        example: '18008618390'
        readOnly: true
        type: string
      remitAddressAvailable:
        default: false
        description: >-
          The remittance address is expected to be provided by the merchant and
          available via `Payee Accounts`.
        example: false
        readOnly: true
        type: boolean
      status:
        $ref: '#/definitions/MerchantStatus'
      styling:
        $ref: '#/definitions/Style'
      testBiller:
        default: false
        description: >-
          Indicates if the `Merchant` is a test merchant. Test `Merchants` will
          only show in the sandbox.
        example: false
        readOnly: true
        type: boolean
      updated:
        description: The date the `Merchant` was last updated in the BillGO network.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      websiteUrl:
        description: >-
          The URL for the 'Merchant'. May be used to help identify a 'Merchant'
          to the user.
        example: 'https://www.billgo.com/'
        readOnly: true
        type: string
    required:
      - categories
      - confidenceScore
      - created
      - ebnAccountNumberMasks
      - id
      - linkingInstructions
      - manualInstructions
      - name
      - testBiller
      - updated
      - websiteUrl
    type: object
  MerchantAddress:
    description: >-
      Provides the `PayeeAccount` remittance address for making a payment using
      an EBN or for paying by Check.
    properties:
      addressLine1:
        description: The first line of the address.
        example: 123 Main St.
        maxLength: 255
        minLength: 0
        type: string
      addressLine2:
        description: The second line of the address if applicable.
        example: PO Box 101
        maxLength: 255
        minLength: 0
        type: string
      addressLine3:
        description: The third line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      addressLine4:
        description: The fourth line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      city:
        description: The address city.
        example: New Brunswick
        maxLength: 255
        minLength: 0
        type: string
      countryCode:
        default: US
        description: >-
          The two or three character country code from ISO-3166. If the client
          is designated as OFX, three letter country code from ISO-3166 is
          provided.
        maxLength: 3
        minLength: 2
        type: string
      created:
        description: The timestamp when the `Address` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      defaultAddress:
        default: false
        description: Is this the default address.
        readOnly: true
        type: boolean
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Address`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Address`
        example: u_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      locationId:
        description: >-
          The unique identifier for the remittance address selected by the
          user.  The `locationId` should be used for the merchantLocationId in
          the `PayeeRequest` instead providing the `merchantAddress`. The
          `locationId` should also be used for the
          `merchantRemittanceLocationId` in the `PayeeAccountRemittanceRequest`
          instead of providing the `remittanceAddress` details.
        type: string
      postalCode:
        description: >-
          The postal code for this address. Supports international postal codes
          as well.
        example: '10001'
        type: string
      province:
        description: The province for international addresses
        maxLength: 255
        minLength: 0
        type: string
      stateAbbreviation:
        description: >-
          The two character abbreviation for the address state. Not used in
          international addresses.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      status:
        default: ACTIVE
        description: Indicates the address status.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: Indicates the address type.
        enum:
          - MAILING
          - PHYSICAL
        example: MAILING
        type: string
      updated:
        description: The timestamp when the `Address` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      verified:
        default: false
        description: Has the address been verified for KYC compliance.
        readOnly: true
        type: boolean
    readOnly: true
    required:
      - addressLine1
      - city
      - locationId
      - postalCode
      - type
    type: object
  MerchantCategories:
    description: Provides the list of available `MerchantCategory`.
    example:
      - AUTO_LOAN
      - ELECTRIC
    properties:
      categories:
        items:
          readOnly: true
          type: string
        readOnly: true
        type: array
    required:
      - categories
    type: object
  MerchantLogo:
    description: >-
      Optional payload to customize `Merchant` suggestions. One or all of the
      object values can be populated.
    properties:
      fallback:
        default: true
        description: >-
          Request to get a category logo back if the `Merchant` logo does not
          exist. Defaults true.
        type: boolean
      imageType:
        description: The style of Logo associated with a Merchant
        enum:
          - ACCENT
          - ACCENTONPRIMARY
          - DARKONWHITE
          - ICON
          - DEFAULT
          - LEGACY
        example: ACCENT
        type: string
      keepAspectRatio:
        description: >-
          Resizes to match the images original aspect ratio if it does not match
          the bound dimension aspect ratio requested. Defaults to true. If set
          to false, the image may stretch to match both bounds. If set to true,
          the image may resize a dimension smaller than the requested bound
        type: boolean
      logoBoundHeight:
        description: >-
          Resizes the image height to the requested height if the requested
          height is smaller  than the original image size.
        format: int32
        maximum: 2000
        type: integer
      logoBoundWidth:
        description: >-
          Resizes the image width to the requested width if the requested width
          is smaller than the original image size.
        format: int32
        maximum: 2000
        type: integer
      resizingRequested:
        type: boolean
    type: object
  MerchantStatus:
    description: >-
      The `MerchantStatus` provides the most recent integration status for the
      `Merchant`.
    properties:
      link:
        description: The status for first time integration with this `Merchant`.
        enum:
          - HEALTHY
          - CONCERN
          - UNHEALTHY
        example: HEALTHY
        readOnly: true
        type: string
      sync:
        description: >-
          The status for ongoing synchronization for this `Merchant`
          integration.
        enum:
          - HEALTHY
          - CONCERN
          - UNHEALTHY
        example: HEALTHY
        readOnly: true
        type: string
    readOnly: true
    type: object
  MerchantSuggestion:
    description: >-
      `MerchantSuggestion` provides information about a merchant that is then
      used to determine if the `Merchant` should be presented to the `User`.
    properties:
      accountNumberAvailable:
        default: false
        description: >-
          The account number is expected to be provided by the merchant and
          available via `Payee Accounts`.
        example: false
        readOnly: true
        type: boolean
      addresses:
        items:
          $ref: '#/definitions/MerchantAddress'
        readOnly: true
        type: array
      categories:
        items:
          description: >-
            The category that is used to classify a `Merchant` or `PayeeAccount`
            in the BillGO network.
          enum:
            - AUTOLOAN
            - BANK
            - CABLE
            - CLUB
            - COLLECTIONS
            - CREDIT
            - ELECTRIC
            - GAS
            - GIFT
            - HOME
            - INSURANCE
            - INTERNET
            - LICENSE
            - LOAN
            - MEDIA
            - MEDICAL
            - MORTGAGE
            - PARKING
            - PHONE
            - PREPAID
            - RENT
            - SECURITY
            - STORAGE
            - STUDENTLOAN
            - UTILITY
            - WASTE
            - WATER
            - OTHER
          example: CABLE
          readOnly: true
          type: string
        readOnly: true
        type: array
      confidenceScore:
        description: >-
          The confidence level that the `User` has an account with the
          `Merchant`. (0.00-1.00)
        example: 0.98
        format: double
        readOnly: true
        type: number
      created:
        description: The date the `Merchant` was added into the BillGO network.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Merchant`.
        example: att_ncp
        readOnly: true
        type: string
      logoId:
        description: The identifier of the merchant logo.
        example: 3d2b1db8e49535078f3f2e7ca0jf8469
        readOnly: true
        type: string
      naicsType:
        description: >-
          The North American Industry Classification System Code for the
          `Merchant`
        readOnly: true
        type: string
      name:
        description: The name of the `Merchant` to display to users.
        example: My Cable Company
        readOnly: true
        type: string
      phoneNumber:
        description: The phone number of the merchant.
        example: '18008618390'
        readOnly: true
        type: string
      remitAddressAvailable:
        default: false
        description: >-
          The remittance address is expected to be provided by the merchant and
          available via `Payee Accounts`.
        example: false
        readOnly: true
        type: boolean
      status:
        $ref: '#/definitions/MerchantStatus'
      styling:
        $ref: '#/definitions/Style'
      testBiller:
        default: false
        description: >-
          Indicates if the `Merchant` is a test merchant. Test `Merchants` will
          only show in the sandbox.
        example: false
        readOnly: true
        type: boolean
      updated:
        description: The date the `Merchant` was last updated in the BillGO network.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      websiteUrl:
        description: >-
          The URL for the 'Merchant'. May be used to help identify a 'Merchant'
          to the user.
        example: 'https://www.billgo.com/'
        readOnly: true
        type: string
    readOnly: true
    required:
      - categories
      - confidenceScore
      - created
      - id
      - name
      - testBiller
      - updated
      - websiteUrl
    type: object
  MerchantSuggestions:
    description: >-
      The set of `MerchantSuggestion`s returned from a merchant search or
      merchant suggestions request.
    properties:
      merchants:
        items:
          $ref: '#/definitions/MerchantSuggestion'
        readOnly: true
        type: array
    required:
      - merchants
    type: object
  MonthlySchedule:
    description: Determines when `Payments` are made for the associated `PayeeAccount`.
    properties:
      daysOfMonthToRepeat:
        description: >-
          If a `Payment` is to be made bi-monthly, the user provides the first
          day of the month. The client application determines second day of the
          month by adding 15 days to the first day of the month. If a `Payment`
          is to be made on the last day of the month the user should provide
          `[31]`. If the scheduled month does not contain that day of the month,
          the payment will be scheduled for the last day of the month. For
          example if the user selects the 29th day of the month, payments made
          in the month of February will be made on the 28th unless the year is a
          leap year.
        items:
          description: >-
            If a `Payment` is to be made bi-monthly, the user provides the first
            day of the month. The client application determines second day of
            the month by adding 15 days to the first day of the month. If a
            `Payment` is to be made on the last day of the month the user should
            provide `[31]`. If the scheduled month does not contain that day of
            the month, the payment will be scheduled for the last day of the
            month. For example if the user selects the 29th day of the month,
            payments made in the month of February will be made on the 28th
            unless the year is a leap year.
          format: int32
          type: integer
        type: array
      repeatEveryXMonths:
        description: >-
          The monthly frequency at which to make a `Payment`. If the user
          specifies the value 1 for `repeatEveryXMonths`, a `Payment` is made
          every month.  If the user specifies 2 for `repeatEveryXMonths` a
          `Payment` is made every other month.
        format: int32
        minimum: 1
        type: integer
    required:
      - daysOfMonthToRepeat
      - repeatEveryXMonths
    type: object
  Name:
    description: Represents a name within the API.
    properties:
      businessName:
        description: The name of the business the account belongs to.
        example: 'Downtown Electric, Inc.'
        maxLength: 255
        minLength: 1
        type: string
      firstName:
        description: The user's first name.
        example: Joe
        maxLength: 255
        minLength: 0
        type: string
      lastName:
        description: The user's last name.
        example: Doe
        maxLength: 255
        minLength: 0
        type: string
      middleNameOrInitial:
        description: The user's middle name or initial.
        example: R.
        maxLength: 255
        minLength: 0
        type: string
      openFormNameField:
        description: >-
          If the user's name cannot be broken into parts, a single line for the
          user's name can be set here.
        example: Joe R. Doe Jr.
        maxLength: 255
        minLength: 1
        type: string
      suffix:
        description: The user's suffix if applicable.
        example: Jr.
        maxLength: 255
        minLength: 0
        type: string
      type:
        description: Indicates the name type.
        enum:
          - INDIVIDUAL
          - BUSINESS
        example: INDIVIDUAL
        type: string
    required:
      - type
    type: object
  NotificationList:
    description: >-
      The list of `Notifications` returned as the response to an update or
      retrieval request.
    properties:
      notifications:
        items:
          $ref: '#/definitions/UserNotification'
        readOnly: true
        type: array
    required:
      - notifications
    type: object
  PageInfo:
    description: A object for holding page information and counts.
    properties:
      limit:
        description: The amount of rows being returned in each request.
        example: 10
        format: int32
        type: integer
      offset:
        description: The current page offset being returned in each request.
        example: 20
        format: int32
        type: integer
      sortField:
        description: An optional field indicate what column the data is sorted on.
        example: name
        type: string
      sortOrder:
        description: >-
          An optional sort direction to indicate what direction the data is
          sorted.
        enum:
          - ASC
          - DESC
        example: ASC
        type: string
      totalCount:
        description: The total count of the data returned (after any filtering operations).
        example: 125
        format: int32
        type: integer
    required:
      - limit
      - offset
      - totalCount
    type: object
  Payee:
    description: >-
      `Users` can have more than one `Payee`. A payee represents a merchant that
      the user has configured for payment. A `PayeeAccount` represents the
      billing account at the `Merchant` that the `User` has linked. It is
      possible for a `Payee` to have more than one `PayeeAccount`. A common
      example is credit card companies. If a user links the `CapitalOne`
      merchant, there may be multiple credit card accounts associated with that
      `Payee`.
    properties:
      accounts:
        items:
          $ref: '#/definitions/PayeeAccount'
        readOnly: true
        type: array
      created:
        description: The timestamp when the `Payee` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      email:
        description: The email address of the `Payee` provided by the user.
        readOnly: true
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Payee`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Payee`.
        example: p_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      integrationId:
        description: >-
          The `integrationId` for the `LinkingInstructions` selected by the
          user.
        readOnly: true
        type: string
      isNew:
        type: boolean
      lastRefresh:
        description: >-
          The timestamp when the `Payee` was last refreshed with data from the
          linking service. This timestamp will be updated every time the linking
          service is checked for new `Payee`, `Payee Account`, and `Bill` data
          regardless of whether or not new data was discovered. For the
          timestamp when the `Payee`, Payee Account`, and `Bill` were updated
          from the `Merchant` see the `Payee` `LinkData`.`LastSync`
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      linkData:
        $ref: '#/definitions/LinkData'
      linkStatus:
        description: >-
          Indicates the linking status of the `Payee`. `LINKABLE` indicates the
          `Payee` can be linked, but there is currently no attempt to link the
          `Payee`. `NOT_LINKABLE` indicates the `Payee` does not support
          linking. `LINKED` indicates the `Payee` has been linked. Other
          statuses are indicators of the status of an in progress link attempt.
          Please see the documentation on linking `Payee`s for further
          information.
        enum:
          - LINKING
          - LINKING_DATUMS_VERIFIED
          - DATUMS_INVALID
          - DATUMS_MISSING
          - LOCKED
          - CLOSED
          - LINKED
          - OUTAGE
          - PENDING
          - DATUMS_VALID
          - LINKABLE
          - NOT_LINKABLE
          - DEPRECATED
          - NONE
        example: DATUMS_VALID
        type: string
      merchantAddress:
        $ref: '#/definitions/Address'
      merchantDirectoryId:
        description: The identifier of the `Merchant` associated with the `Payee`.
        readOnly: true
        type: string
      merchantLink:
        $ref: '#/definitions/Link'
      merchantLocationId:
        description: >-
          The `Merchant`'s location that the `Payee` should be associated with.
          Location ids are retrieved from the merchant directory.
        type: string
      merchantPhoneNumber:
        readOnly: true
        type: string
      migratedMerchantId:
        description: >-
          The id that the existing merchant has been migrated to. The `Payee`
          that was associated with the previous merchant id is now deprecated
          and a new `Payee` should be created.
        readOnly: true
        type: string
      naicsCodes:
        description: >-
          The list of North American Industry Classification System codes for
          the `Merchant`
        items:
          description: >-
            The list of North American Industry Classification System codes for
            the `Merchant`
          readOnly: true
          type: string
        readOnly: true
        type: array
      name:
        description: >-
          The name of the `Payee` provided by the user or the `Merchant` name if
          not provided by the user.
        readOnly: true
        type: string
      notice:
        description: A message providing additional information about the `Payee`.
        readOnly: true
        type: string
      payerAddress:
        $ref: '#/definitions/Address'
      shortNotice:
        description: A short message providing additional information about the `Payee`.
        readOnly: true
        type: string
      status:
        description: >-
          Represents the status of the `Payee`. `ACTIVE` is a `Payee` in good
          standing. `PENDING` payees are in the process of being set up.
          `ARCHIVED` payees should not be shown to the user.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ARCHIVED
        readOnly: true
        type: string
      trusted:
        description: Is the `Payee` trusted.
        type: boolean
      updated:
        description: The timestamp when the `Payee` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    required:
      - created
      - id
      - linkStatus
      - name
      - status
      - updated
    type: object
  PayeeAccount:
    description: Provides information about the `PayeeAccount` associated with the `Payee`.
    properties:
      accountOrigin:
        description: >-
          Indicates the origin of the account. If the account was created as a
          part of the `Payee` being linked, the status will be `LINKED`. If the
          account was created manually, the status will be `MANUAL`
        enum:
          - LINKED
          - MANUAL
        example: LINKED
        type: string
      accountRemittanceInfo:
        $ref: '#/definitions/PayeeAccountRemittance'
      accountToAccountPayeeInfo:
        $ref: '#/definitions/AccountPayeeRemittanceAccount'
      apr:
        description: APR associated with the balance.
        example: '17.84'
        readOnly: true
        type: string
      base64PayeeLogo:
        description: The Base64 encoded string representation of a `Payee` logo.
        readOnly: true
        type: string
      billCategory:
        description: >-
          The category that is used to classify a `Merchant` or `PayeeAccount`
          in the BillGO network.
        enum:
          - AUTOLOAN
          - BANK
          - CABLE
          - CLUB
          - COLLECTIONS
          - CREDIT
          - ELECTRIC
          - GAS
          - GIFT
          - HOME
          - INSURANCE
          - INTERNET
          - LICENSE
          - LOAN
          - MEDIA
          - MEDICAL
          - MORTGAGE
          - PARKING
          - PHONE
          - PREPAID
          - RENT
          - SECURITY
          - STORAGE
          - STUDENTLOAN
          - UTILITY
          - WASTE
          - WATER
          - OTHER
        example: CABLE
        readOnly: true
        type: string
      billStatus:
        enum:
          - UNPAID
          - SERVICE_SCHEDULED
          - SERVICE_AUTOMATIC
          - SCHEDULED
          - EMPTY
          - PAID
          - PAID_EXTERNAL
          - SKIPPED
          - NONE
          - ARCHIVED
        type: string
      created:
        description: The timestamp when the `PayeeAccount` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      creditLimit:
        $ref: '#/definitions/Amount'
      customerFundingAccount:
        $ref: '#/definitions/CustomerFundingAccount'
      documentEnrollmentStatus:
        description: >-
          Indicates the `Document` enrollment status for a `Payee` or for a
          `PayeeAccount`.
        enum:
          - NONE
          - NOT_ENROLLED
          - ENROLLING
          - ENROLLED
        example: ENROLLED
        readOnly: true
        type: string
      established:
        description: >-
          The timestamp when the `PayeeAccount` was established. Indicates when
          a converged accountwas originally created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `PayeeAccount`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      fundingAccount:
        $ref: '#/definitions/FundingAccount'
      hidden:
        description: Indicates if the user wants the `PayeeAccount` displayed in the UI.
        type: boolean
      id:
        description: The identifier for the `PayeeAccount`.
        example: pacct_83ede6ae-a080-11ea-bb37-0242ac130002
        readOnly: true
        type: string
      integrationId:
        description: The `integrationId` for the `ManualInstructions` selected by the user.
        readOnly: true
        type: string
      isNew:
        type: boolean
      lastRefresh:
        description: The timestamp when the `PayeeAccount` was last refreshed.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      latestBill:
        $ref: '#/definitions/Bill'
      latestDocumentId:
        description: The unique identifier for the latest document when available.
        readOnly: true
        type: string
      latestPayment:
        $ref: '#/definitions/Payment'
      name:
        description: The name that identifies the `PayeeAccount` within the `Payee`.
        example: Ford F150 Insurance
        readOnly: true
        type: string
      nextPayment:
        $ref: '#/definitions/Payment'
      notice:
        description: An informational message to the user about the `PayeeAccount`.
        readOnly: true
        type: string
      ofxToken:
        description: OFX token
        example: R1EOD39I5V
        readOnly: true
        type: string
      owedBalance:
        $ref: '#/definitions/Amount'
      payeeInfo:
        $ref: '#/definitions/PayeeInfo'
      payeeLink:
        $ref: '#/definitions/Link'
      payerAddress:
        $ref: '#/definitions/Address'
      paymentConstraints:
        $ref: '#/definitions/PaymentConstraints'
      schedules:
        items:
          $ref: '#/definitions/RecurringSchedule'
        readOnly: true
        type: array
      status:
        description: >-
          When a `Payee` is successfully linked, a `PayeeAccount` is created for
          each account associated with the linked `Payee`. Before the user
          supplies the required payment details for a `PayeeAccount`, the
          `PayeeAccount` status is `PENDING`.  After the user supplies the
          required payment details for a `PayeeAccount`, the `PayeeAccount's`
          status is `ACTIVE`. `PayeeAccounts` with a status of `ARCHIVED`
          should  not be presented to the user.
        enum:
          - PENDING
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        readOnly: true
        type: string
      updated:
        description: The timestamp when the `PayeeAccount` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      version:
        format: int64
        type: integer
    readOnly: true
    required:
      - accountOrigin
      - created
      - documentEnrollmentStatus
      - established
      - hidden
      - id
      - name
      - payeeInfo
      - payeeLink
      - status
      - updated
    type: object
  PayeeAccountNotificationData:
    description: >-
      References the `PayeeAccount` that the `UserNotification` is associated
      with.
    properties:
      isPayeeAccountHidden:
        description: Indicates if the `PayeeAccount` is hidden.
        type: boolean
      payeeAccountId:
        description: The identifier for the `PayeeAccount`.
        type: string
    required:
      - isPayeeAccountHidden
      - payeeAccountId
    type: object
  PayeeAccountPage:
    description: >-
      A Pageable object for returning server-side pagination information for
      payee accounts.
    properties:
      data:
        description: A generic list of data to return with the pagination information.
        items:
          $ref: '#/definitions/PayeeAccount'
        readOnly: true
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    required:
      - data
      - page
    type: object
  PayeeAccountRemittance:
    description: >-
      Contains the remittance information required to make a payment for the
      `PayeeAccount`.
    properties:
      accountNumber:
        description: >-
          The last 4 of the `accountNumber` for the `PayeeAccount`. For security
          reasons, the full `accountNumber` will never be returned from the API.
        readOnly: true
        type: string
      accountNumberOrigin:
        description: Indicates the source of the `AccountNumber`.
        enum:
          - USER_PROVIDED
          - SYSTEM_PROVIDED
          - CSR_PROVIDED
        example: USER_PROVIDED
        type: string
      created:
        description: The timestamp when the `PayeeAccountRemittance` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `PayeeAccountRemittance`.
        example: raddr_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      merchantPhoneNumber:
        type: string
      merchantRemittanceLocationId:
        description: >-
          The `Merchant`'s remittance location that the `PayeeAccount` should be
          associated with. Location ids are retrieved from the merchant
          directory. A `merchantRemittanceLocationId` or a `remittanceAddress`
          can be provided, not both.
        type: string
      nameOnAccount:
        $ref: '#/definitions/Name'
      remittanceAddress:
        $ref: '#/definitions/RemittanceAddress'
      updated:
        description: The timestamp when the `PayeeAccountRemittance` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - created
      - id
      - updated
    type: object
  PayeeAccountRemittanceAccountRequest:
    description: >-
      Account Payee is used to provide data required for account to account
      payments.
    properties:
      bankAccountNumber:
        description: The account to account payee account number.
        pattern: \d+
        type: string
      merchantPhoneNumber:
        description: >-
          The merchant phone number formatted according to ITU-T E.164 and E.123
          (without '~') standards.
        example: +1 415 123 1234
        pattern: '^\+(?:[0-9] ?){6,14}[0-9]$'
        type: string
      merchantRemittanceLocationId:
        description: >-
          The `Merchant`'s location that the `PayeeAccount` should be associated
          with. Location ids are retrieved from the merchant directory. For non
          OFX client, a `remittanceAddress` or a `merchantRemittanceLocationId`
          should be provided, not both. For OFX client, both could be provided.
        type: string
      payeeAccountType:
        description: The bank account type.
        enum:
          - CHECKING
          - SAVINGS
          - LOAN
        type: string
      remittanceAddress:
        $ref: '#/definitions/RemittanceAddressRequest'
      routingNumber:
        description: The account to account payee routing number.
        pattern: '[0-9]{9}'
        type: string
    required:
      - bankAccountNumber
      - payeeAccountType
      - routingNumber
    type: object
  PayeeAccountRemittanceAccountUpdate:
    description: Updates data for account to account payments.
    properties:
      bankAccountNumber:
        description: The account to account payee account number.
        pattern: \d+
        type: string
      merchantPhoneNumber:
        description: >-
          The merchant phone number formatted according to ITU-T E.164 and E.123
          (without '~') standards.
        example: +1 415 123 1234
        pattern: '^\+(?:[0-9] ?){6,14}[0-9]$'
        type: string
      merchantRemittanceLocationId:
        description: >-
          The `Merchant`'s location that the `PayeeAccount` should be associated
          with. Location ids are retrieved from the merchant directory. A
          `remittanceAddress` or a `merchantRemittanceLocationId` should be
          provided, not both.
        type: string
      payeeAccountType:
        description: The bank account type.
        enum:
          - CHECKING
          - SAVINGS
          - LOAN
        type: string
      remittanceAddress:
        $ref: '#/definitions/RemittanceAddressRequest'
      routingNumber:
        description: The account to account payee routing number.
        pattern: '[0-9]{9}'
        type: string
    type: object
  PayeeAccountRemittanceRequest:
    description: >-
      Provides the remittance information needed to make the `Payment` for the
      `PayeeAccount`. If the request is for a check only payee, only the
      remittanceAddress or merchantRemittanceLocationId and the nameOnAccount
      fields are required. Manual and linked payees require nameOnAccount,
      manualDatumResponses, accountNumber, and either the
      merchantRemittanceLocationid or remittanceAddress fields.
    properties:
      accountNumber:
        type: string
      merchantPhoneNumber:
        description: >-
          The merchant phone number formatted according to ITU-T E.164 and E.123
          (without '~') standards.
        example: +1 415 123 1234
        pattern: '^\+(?:[0-9] ?){6,14}[0-9]$'
        type: string
      merchantRemittanceLocationId:
        description: >-
          The `Merchant`'s location that the `PayeeAccount` should be associated
          with. Location ids are retrieved from the merchant directory. For non
          OFX client, a `remittanceAddress` or a `merchantRemittanceLocationId`
          should be provided, not both. For OFX client, both could be provided.
        type: string
      nameOnAccount:
        $ref: '#/definitions/Name'
      remittanceAddress:
        $ref: '#/definitions/RemittanceAddressRequest'
    type: object
  PayeeAccountRemittanceUpdate:
    description: Represents a request to update a `PayeeAccountRemittance`.
    properties:
      accountNumber:
        type: string
      accountNumberOrigin:
        description: Indicates the source of the `AccountNumber`.
        enum:
          - USER_PROVIDED
          - SYSTEM_PROVIDED
          - CSR_PROVIDED
        example: USER_PROVIDED
        type: string
      merchantPhoneNumber:
        description: >-
          The merchant phone number formatted according to ITU-T E.164 and E.123
          (without '~') standards.
        example: +1 415 123 1234
        pattern: '^\+(?:[0-9] ?){6,14}[0-9]$'
        type: string
      merchantRemittanceLocationId:
        description: >-
          The `Merchant`'s location that the `PayeeAccount` should be associated
          with. Location ids are retrieved from the merchant directory. A
          `remittanceAddress` or a `merchantRemittanceLocationId` should be
          provided, not both.
        type: string
      nameOnAccount:
        $ref: '#/definitions/Name'
      remittanceAddress:
        $ref: '#/definitions/RemittanceAddressRequest'
    type: object
  PayeeAccountRequest:
    description: Represents a request to add and associate a `PayeeAccount` with a `Payee`.
    properties:
      accountRemittanceRequest:
        $ref: '#/definitions/PayeeAccountRemittanceRequest'
      accountToAccountPayeeRequest:
        $ref: '#/definitions/PayeeAccountRemittanceAccountRequest'
      bestAvailableOnly:
        description: >-
          After the `PayeeAccount` is created return only the best available
          `PaymentConstraint`.
        type: boolean
        x-deprecated: true
      established:
        description: >-
          The timestamp when the `PayeeAccount` was established. Indicates when
          a converged `PayeeAccount` was originally created. If the
          `established` property is not provided then the `established` property
          receives the current timestamp.
        example: '2018-10-14T16:21:00Z'
        format: date-time
        type: string
      integrationId:
        description: The `integrationId` for the `ManualInstructions` selected by the user.
        type: string
      latestPayment:
        description: >-
          After the `PayeeAccount` is created return the latest payment instead
          of the latest successful payment.
        type: boolean
        x-deprecated: true
      manualDatumResponses:
        items:
          $ref: '#/definitions/ManualDatumResponse'
        type: array
      name:
        description: The `PayeeAccount` name.
        example: Ford F150 Insurance
        type: string
      payeeId:
        description: >-
          The identifier of the `Payee` to associate the newly created
          `PayeeAccount` with.
        type: string
      payerAddressId:
        description: >-
          Id of an address from the `User`'s profile that should match the
          address on file for the `User`'s account with the `Payee`.
        type: string
      paymentInfoRequest:
        $ref: '#/definitions/PaymentInfoRequest'
    required:
      - name
      - payeeId
    type: object
  PayeeAccountSummary:
    description: >-
      Returns summary information about the `PayeeAccount` associated with the
      `RecurringSchedule`.
    properties:
      accountNumber:
        description: The account number for the `PayeeAccountRemittance`.
        type: string
      accountRemittanceAccountNumber:
        description: The account number for the `PayeeAccountRemittanceAccount`.
        type: string
      customerFundingAccount:
        $ref: '#/definitions/CustomerFundingAccount'
      fundingAccount:
        $ref: '#/definitions/FundingAccount'
      name:
        description: The name for the `PayeeAccount`.
        type: string
    type: object
  PayeeAccountUpdate:
    description: Represents a request to update a `PayeeAccount`.
    properties:
      bestAvailableOnly:
        description: >-
          After the `PayeeAccount` is updated return only the best available
          `PaymentConstraint`.
        type: boolean
        x-deprecated: true
      billStatus:
        enum:
          - UNPAID
          - PAID_EXTERNAL
          - SKIPPED
        type: string
      hidden:
        description: Indicates if the user wants the `PayeeAccount` displayed in the UI.
        type: boolean
      integrationId:
        description: The `integrationId` for the `ManualInstructions` selected by the user.
        type: string
      latestPayment:
        description: >-
          After the `PayeeAccount` is updated return the latest payment instead
          of the latest successful payment.
        type: boolean
        x-deprecated: true
      manualDatumResponses:
        items:
          $ref: '#/definitions/ManualDatumResponse'
        type: array
      name:
        description: The `PayeeAccount` name.
        example: State Farm
        type: string
      payeeAccountRemittance:
        $ref: '#/definitions/PayeeAccountRemittanceUpdate'
      payeeAccountRemittanceAccount:
        $ref: '#/definitions/PayeeAccountRemittanceAccountUpdate'
      payerAddressId:
        description: >-
          Id of an address from the `User`'s profile that should match the
          address on file for the `User`'s account with the `Payee`.
        type: string
      paymentInfo:
        $ref: '#/definitions/PaymentInfoRequest'
    type: object
  PayeeInfo:
    description: Information about a `Payee` intended to be returned with a `PayeeAccount`.
    properties:
      created:
        description: The timestamp when the `Payee` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      email:
        description: The email address of the `Payee` provided by the user.
        readOnly: true
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Payee`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Payee`.
        example: p_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      linkData:
        $ref: '#/definitions/LinkData'
      linkStatus:
        description: >-
          Indicates the linking status of the `Payee`. `LINKABLE` indicates the
          `Payee` can be linked, but there is currently no attempt to link the
          `Payee`. `NOT_LINKABLE` indicates the `Payee` does not support
          linking. `LINKED` indicates the `Payee` has been linked. Other
          statuses are indicators of the status of an in progress link attempt.
          Please see the documentation on linking `Payee`s for further
          information.
        enum:
          - LINKING
          - LINKING_DATUMS_VERIFIED
          - DATUMS_INVALID
          - DATUMS_MISSING
          - LOCKED
          - CLOSED
          - LINKED
          - OUTAGE
          - PENDING
          - DATUMS_VALID
          - LINKABLE
          - NOT_LINKABLE
          - DEPRECATED
          - NONE
        example: DATUMS_VALID
        type: string
      merchantAddress:
        $ref: '#/definitions/Address'
      merchantId:
        description: The identifier of the `Merchant` associated with the `Payee`.
        readOnly: true
        type: string
      merchantLink:
        $ref: '#/definitions/Link'
      merchantLocationId:
        description: >-
          The `Merchant`'s location that the `Payee` should be associated with.
          Location ids are retrieved from the merchant directory.
        type: string
      merchantPhoneNumber:
        readOnly: true
        type: string
      naicsCodes:
        description: >-
          The list of North American Industry Classification System codes for
          the `Merchant`
        items:
          description: >-
            The list of North American Industry Classification System codes for
            the `Merchant`
          readOnly: true
          type: string
        readOnly: true
        type: array
      name:
        description: >-
          The name of the `Payee` provided by the user or the `Merchant` name if
          not provided by the user.
        readOnly: true
        type: string
      notice:
        description: A message providing additional information about the `Payee`.
        readOnly: true
        type: string
      payerAddress:
        $ref: '#/definitions/Address'
      status:
        description: >-
          Represents the status of the `Payee`. `ACTIVE` is a `Payee` in good
          standing. `PENDING` payees are in the process of being set up.
          `ARCHIVED` payees should not be shown to the user.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ARCHIVED
        readOnly: true
        type: string
      trusted:
        description: Is the `Payee` trusted.
        type: boolean
      updated:
        description: The timestamp when the `Payee` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    required:
      - created
      - id
      - linkStatus
      - name
      - status
      - updated
    type: object
  PayeePage:
    description: >-
      A Pageable object for returning server-side pagination information for
      payees.
    properties:
      data:
        description: A generic list of data to return with the pagination information.
        items:
          $ref: '#/definitions/Payee'
        readOnly: true
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    required:
      - data
      - page
    type: object
  PayeeRequest:
    description: >-
      Provides information needed to add and associate the `Payee` with the
      `User`.
    properties:
      bestAvailableOnly:
        description: >-
          After the `Payee` is created return only the best available
          `PaymentConstraint` for each associated `PayeeAccount`.
        type: boolean
        x-deprecated: true
      email:
        description: The email address of the `Payee` provided by the user.
        readOnly: true
        type: string
      integrationId:
        description: >-
          The `integrationId` for the `LinkingInstructions` selected by the
          user.
        type: string
      linkDatumResponses:
        description: >-
          Provides the set of values for the set of required `Datums` needed to
          link the `Merchant` selected by the `User`. The set of required
          `Datums` is provided by the `LinkingInstructions` in the `Merchant`.
        items:
          $ref: '#/definitions/LinkDatumResponse'
        type: array
      merchantAddress:
        $ref: '#/definitions/Address'
      merchantId:
        description: The unique identifier of the `Merchant` selected by the user.
        type: string
      merchantLocationId:
        description: >-
          The `Merchant`'s location that the `Payee` should be associated with.
          Location ids are retrieved from the merchant directory. A
          `merchantLocationId` or a `merchantAddress` can be provided, but not
          both.
        type: string
      merchantPhoneNumber:
        pattern: '^\+(?:[0-9] ?){6,14}[0-9]$'
        type: string
      name:
        description: >-
          The name of the `Payee` provided by the `User`, if not provided then
          the `Merchant` name.
        type: string
      payerAddressId:
        description: >-
          Id of an address from the `User`'s profile that should match the
          address on file for the `User`'s account with the `Payee`.
        type: string
    required:
      - name
    type: object
  PayeeSummary:
    description: Contains summary information about the `Payee`.
    properties:
      accountNumber:
        description: >-
          The last 4 of the `accountNumber` for the `PayeeAccount`. For security
          reasons, the full `accountNumber` will never be returned from the API.
        type: string
      linkStatus:
        description: >-
          Indicates the linking status of the `Payee`. `LINKABLE` indicates the
          `Payee` can be linked, but there is currently no attempt to link the
          `Payee`. `NOT_LINKABLE` indicates the `Payee` does not support
          linking. `LINKED` indicates the `Payee` has been linked. Other
          statuses are indicators of the status of an in progress link attempt.
          Please see the documentation on linking `Payee`s for further
          information.
        enum:
          - LINKING
          - LINKING_DATUMS_VERIFIED
          - DATUMS_INVALID
          - DATUMS_MISSING
          - LOCKED
          - CLOSED
          - LINKED
          - OUTAGE
          - PENDING
          - DATUMS_VALID
          - LINKABLE
          - NOT_LINKABLE
          - DEPRECATED
          - NONE
        example: DATUMS_VALID
        type: string
      merchantId:
        description: The identifier of the `Merchant` associated with the `Payee`.
        type: string
      payeeAccountName:
        description: The name that identifies the `PayeeAccount` within the `Payee`.
        type: string
      payeeEmail:
        description: The email address of the `Payee` provided by the user.
        type: string
      payeeName:
        description: >-
          The name of the `Payee` provided by the user or the `Merchant` name if
          not provided by the user.
        type: string
      status:
        description: >-
          Represents the status of the `Payee`. `ACTIVE` is a `Payee` in good
          standing. `PENDING` payees are in the process of being set up.
          `ARCHIVED` payees should not be shown to the user.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ARCHIVED
        type: string
    type: object
  PayeeUpdateRequest:
    description: >-
      Provides information needed to add and associate the `Payee` with the
      `User`.
    properties:
      bestAvailableOnly:
        description: >-
          After the `Payee` is updated return only the best available
          `PaymentConstraint` for each associated `PayeeAccount`.
        type: boolean
        x-deprecated: true
      integrationId:
        description: >-
          The `integrationId` for the `LinkingInstructions` selected by the
          user.
        type: string
      latestPayment:
        description: >-
          After the `Payee` is updated return the latest payment instead of the
          latest successful payment for each `PayeeAccount`.
        type: boolean
        x-deprecated: true
      linkDatumResponses:
        description: >-
          Provides the set of values for the set of required `Datums` needed to
          link the `Merchant` selected by the `User`. The set of required
          `Datums` is provided by the `LinkingInstructions` in the `Merchant`.
        items:
          $ref: '#/definitions/LinkDatumResponse'
        type: array
      merchantAddress:
        $ref: '#/definitions/Address'
      merchantLocationId:
        description: >-
          The `Merchant`'s location that the `Payee` should be associated with.
          Location ids are retrieved from the merchant directory. A
          `merchantLocationId` or a `merchantAddress` should be provided, not
          both.
        type: string
      merchantPhoneNumber:
        pattern: '^\+(?:[0-9] ?){6,14}[0-9]$'
        type: string
      name:
        description: >-
          The name of the `Payee` provided by the `User`, if not provided then
          the `Merchant` name.
        type: string
      payerAddressId:
        description: >-
          Id of an address from the `User`'s profile that should match the
          address on file for the `User`'s account with the `Payee`.
        type: string
      unlinkPayee:
        description: >-
          If true, the `Payee` will be unlinked. This will also disable bill
          syncing.
        type: boolean
    type: object
  Payment:
    description: Contains information about the `Payment`.
    properties:
      attributes:
        items:
          $ref: '#/definitions/PaymentAttribute'
        type: array
        uniqueItems: true
      created:
        description: The timestamp when the `Payment` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      customerFundingAccount:
        $ref: '#/definitions/CustomerFundingAccount'
      deliverByDate:
        description: The date the payment will be delivered to the merchant.
        example: '2020-01-01'
        format: date
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Payment`.'
        example: Qyh1JwU2t4JA
        type: string
      feeAllowance:
        $ref: '#/definitions/Amount'
      fraudStatus:
        description: >-
          Indicates if a fraud review has been requested, or if requested and a
          response was received, what the result was.
        enum:
          - NOT_REQUESTED
          - REQUESTED
          - RE_REQUESTED
          - NEEDS_REVIEW
          - APPROVED
          - DENIED
        type: string
      fraudUpdated:
        description: The last time the fraud status was changed.
        format: int64
        type: integer
      fundingAccount:
        $ref: '#/definitions/FundingAccount'
      id:
        description: The identifier for the `Payment`.
        example: p_83ede6ae-a080-11ea-bb37-0242ac130002
        type: string
      memo:
        description: >-
          An optional user provided message to associate with the `Payment`. The
          `memo` will be added to the check if the `Payment` is made with a
          check.
        type: string
      ofxToken:
        description: OFX token
        example: R1EOD39I5V
        type: string
      originationType:
        description: >-
          Indicates how the `Payment` was generated. This has implications on
          the mutability of the `Payment`.
        enum:
          - RECURRENCE_SCHEDULE_PAYMENT
          - ONE_TIME_PAYMENT
        example: ONE_TIME_PAYMENT
        type: string
      partnerId:
        description: >-
          The unique client idempotency identifier associated with the `Payment`
          to ensure that the `Payment` is not made more than once.
        type: string
      payNow:
        description: >-
          This directs the system to prioritize the `Payment` when set to true.
          Additionally, the feeAllowance field should be left empty.
        type: boolean
      payeeAccountLink:
        $ref: '#/definitions/Link'
      payeeSummary:
        $ref: '#/definitions/PayeeSummary'
      paymentAmount:
        $ref: '#/definitions/Amount'
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
      paymentResult:
        $ref: '#/definitions/PaymentResult'
      paymentResults:
        description: >-
          Only populated if returnAllPaymentResults flag is set to true on the
          Get Payment by id call
        items:
          $ref: '#/definitions/PaymentResult'
        readOnly: true
        type: array
        uniqueItems: true
      recurrenceScheduleId:
        description: >-
          Only populated if the `Payment` was generated from the
          `RecurrenceSchedule`.
        type: string
      refundAmount:
        type: string
      sendOnDate:
        description: The date the payment will be sent to the merchant.
        example: '2017-01-01'
        format: date
        type: string
      status:
        description: Indicates the current status of the `Payment`.
        enum:
          - PENDING
          - PENDING_DEBITED
          - CANCELLED
          - FAILURE
          - INFORMATION_NEEDED
          - PROCESSING
          - SUBMITTED
          - SUCCESS
          - SUCCESS_RETURN
          - SUCCESS_PARTIAL_RETURN
        example: PROCESSING
        type: string
      statusCode:
        description: Indicates additional details for the current status of the `Payment`.
        enum:
          - BILL_NOT_FOUND
          - CARD_SECURITY_CODE_INCORRECT
          - DEPRECATED
          - LOCKED
          - OUTAGE
          - PAYMENT_DISABLED
          - SUBSUMED
          - BANK_ONLY
          - CARD_EXPIRED
          - CARD_ONLY
          - CREATE_SECURITY_QUESTIONS
          - DECLINED
          - EXTERNAL_NOT_ALLOWED
          - EXTERNAL_NOT_VALIDATED
          - VIRTUAL_PAYMENT_ALLOCATION
          - ZIP_CODE_INCORRECT
          - LESS_THAN_AMOUNT_DISALLOWED
          - LESS_THAN_OWED_DISALLOWED
          - NEW_LARGER_AMOUNT_DUE
          - IDENTIFICATION_CODE_REQUIRED
          - DATUMS_INVALID
          - DATUMS_MISSING
          - COMPLIANCE_DECLINED
          - EXPIRATION_TIME_EXCEEDED
          - CANCELLED_CSR
          - CANCELLED_CUSTOMER
          - CANCELLED_NSF
          - CANCELLED_FRAUD
          - PROCESSING_ERROR
          - NEEDS_FRAUD_REVIEW
          - FRAUD_REVIEW_HOLD
        example: BILL_NOT_FOUND
        type: string
      updated:
        description: The timestamp when the `Payment` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
    readOnly: true
    required:
      - created
      - id
      - originationType
      - payeeAccountLink
      - sendOnDate
      - status
      - updated
    type: object
  PaymentAttribute:
    description: >-
      User defined attributes of the `Payment`. The attribute field is free form
      for the user to associate key/value pairs of information with the payment
      that are meaningful to the user. There is no validation of the key/value
      pair. The key and value are alphanumeric strings limited to 255
      characters.
    properties:
      key:
        description: The given name of the `PaymentAttribute` on the `Payment`.
        pattern: '^([0-9a-zA-Z_@\.-]+){1,255}$'
        type: string
      value:
        description: The value of the `PaymentAttribute` on the `Payment`.
        pattern: '^([0-9a-zA-Z_@\.-]+){1,255}$'
        type: string
    required:
      - key
      - value
    type: object
  PaymentConstraints:
    description: Contains the list of rails available for making a payment.
    properties:
      bankHolidays:
        items:
          $ref: '#/definitions/HolidayDto'
        type: array
      railConstraints:
        items:
          $ref: '#/definitions/RailConstraints'
        type: array
    readOnly: true
    type: object
  PaymentDetailReportDto:
    description: Contains the contract for the 'Payment Detail Report'.
    properties:
      addressCity:
        description: The city name
        type: string
      addressLine1:
        description: The first line of the address
        type: string
      addressLine2:
        description: The second line of the address
        type: string
      addressPostalCode:
        description: The postal code. Supports international postal codes as well
        type: string
      addressState:
        description: The two character abbreviation for the address state
        type: string
      billerConfirmationNumber:
        description: The biller confirmation number associated with the `Payment`
        type: string
      billgoTransactionId:
        description: The unique identifier of the `Payment`
        type: string
      businessName:
        description: The company name associated with the `Payment`
        type: string
      clientTransactionId:
        description: The partner_id of the associated `Payment`
        type: string
      fundingAccountId:
        description: The BillGO ID of the funding account used make the `Payment`
        type: string
      fundingAccountPartnerId:
        description: The partner's ID of the funding account used make the `Payment`
        type: string
      paymentInstrumentLast4:
        description: >-
          The last 4 digits of the payment instrument associated with the
          `Payment`
        type: string
      paymentInstrumentType:
        description: The payment type used to make the `Payment`
        type: string
      paymentReferenceNumber:
        description: The `Payment` reference number
        type: string
      paymentType:
        description: The rail type of the `Payment`
        type: string
      transactionAmount:
        description: The transaction amount of the `Payment`
        type: string
      transactionDate:
        description: The effective date of the `Payment`
        format: date
        type: string
      uniqueId:
        description: The unique identifier of the partner
        type: string
      userFirstName:
        description: The first name of the user associated with the `Payment`
        type: string
      userLastName:
        description: The last name of the user associated with the `Payment`
        type: string
    type: object
  PaymentDeviceInfo:
    description: Information about the device the user used to setup the payment.
    properties:
      counterpartyRiskScore:
        description: Counterparty fraud risk score
        type: string
      currentBalance:
        $ref: '#/definitions/AccountBalance'
      customerRiskDecision:
        description: >-
          Risk decision from legacy fraud monitoring system: valid values
          include PASSED, REVIEW, REJECT, and AUTO_RELEASE. If this field is set
          to REJECT, then the payment will automatically be denied.
        type: string
      customerRiskScore:
        description: Customer fraud risk score
        type: string
      device:
        $ref: '#/definitions/Device'
    type: object
  PaymentDispute:
    description: Presents information about a payment dispute.
    properties:
      created:
        description: The timestamp when the dispute was initiated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      externalId:
        description: 'An optional, external identifier of the dispute.'
        example: Salesforce1
        type: string
      id:
        description: The unique identifier of the dispute.
        example: pd_83ede6ae-a080-11ea-bb37-0242ac13000
        readOnly: true
        type: string
      initiatedByUserId:
        description: The unique identifier of the user initiating the payment dispute.
        type: string
      paymentId:
        description: The identifier of the payment the dispute is associated with.
        example: pymt_83ede6ae-a080-11ea-bb37-0242ac130002
        readOnly: true
        type: string
      status:
        description: Indicates the status of a payment dispute.
        enum:
          - DISPUTED
          - REJECTED
          - RESOLVED
        type: string
      updated:
        description: The timestamp when the dispute was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - initiatedByUserId
    type: object
  PaymentDisputeUpdate:
    description: Used to update a payment dispute.
    properties:
      initiatedByUserId:
        description: The unique identifier of the user initiating the payment dispute.
        type: string
      status:
        description: Indicates the status of a payment dispute.
        enum:
          - DISPUTED
          - REJECTED
          - RESOLVED
        type: string
    type: object
  PaymentInfoRequest:
    description: >-
      Information about when to make the `Payment` and whether or not to use the
      supplied `FundingAccount` or the supplied `CustomerFundingAccount` or the
      default `FundingAccount`.
    properties:
      customerFundingAccountId:
        description: >-
          The identifier of the `CustomerFundingAccount` from which the user
          wants to fund the `Payment`. If neither `fundingAccountId` or
          `customerFundingAccountId` are specified, then the `fundingAccountId`
          of the currently designated default `FundingAccount` is used.
        type: string
      customerFundingAccountRequest:
        $ref: '#/definitions/CustomerFundingAccountRequest'
      fundingAccountId:
        description: >-
          The identifier of the `FundingAccount` from which the user wants to
          fund the `Payment`. When neither `fundingAccountId` nor
          `customerFundingAccountId` is specified, then the `fundingAccountId`
          of the currently designated default `FundingAccount` is used.
        type: string
      fundingAccountRequest:
        $ref: '#/definitions/FundingAccountRequest'
      partnerFundingAccountId:
        description: >-
          The identifier to use when referencing the `FundingAccount` with the
          partner.
        type: string
    type: object
  PaymentPage:
    description: >-
      A Pageable object for returning server-side pagination information for
      payments.
    properties:
      data:
        description: A generic list of data to return with the pagination information.
        items:
          $ref: '#/definitions/Payment'
        readOnly: true
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    required:
      - data
      - page
    type: object
  PaymentRail:
    description: Represents the method that was used to make the payment.
    properties:
      paymentType:
        description: >-
          The method used to fund the payment. Deprecated and replaced with
          PaymentResult PaymentInstrumentType
        enum:
          - DDA
          - MMA
          - VIRTUAL_CARD
          - VIRTUAL_ACCOUNT
          - CONSUMER_CARD
        example: VIRTUAL_CARD
        type: string
        x-deprecated: true
      railName:
        description: The name of the method used to process the payment.
        enum:
          - PARTNER_API
          - SPECTRUM
          - VOICE_PAY
          - RPPS_MC_DIRECT
          - RPPS_ALLIED
          - CHECK_CASS
          - PIE_ALLIED_EFT
          - CHECK_FIS
          - CHECK_HBN
          - CHECK_HNB
          - HISTORICAL_CHECK
          - HISTORICAL_CARD
          - HISTORICAL_RPPS
          - ONUS
          - ACH
        example: PARTNER_API
        type: string
      railPaymentId:
        description: The identifier of the payment returned by the Payment Rail.
        type: string
      railType:
        description: The general method used to process the payment.
        enum:
          - REALTIME
          - EBN
          - CHECK
          - ACH
        example: REALTIME
        type: string
    type: object
  PaymentRejectsReportDto:
    description: Contains the contract for the 'Payments Rejects Report'.
    properties:
      billgoTransactionId:
        description: The unique identifier of the `Payment`
        type: string
      businessName:
        description: The company name associated with the `Payment`
        type: string
      clientTransactionId:
        description: The partner_id of the associated `Payment`
        type: string
      fundingAccountId:
        description: The BillGO ID of the funding account used make the `Payment`
        type: string
      fundingAccountPartnerId:
        description: The partner's ID of the funding account used make the `Payment`
        type: string
      rejectReason:
        description: The reason that the `Payment` was rejected
        type: string
      transactionAmount:
        description: The transaction amount of the `Payment`
        type: string
      transactionDate:
        description: The effective date of the `Payment`
        format: date
        type: string
      uniqueId:
        description: The unique identifier of the partner
        type: string
      userFirstName:
        description: The first name of the user associated with the `Payment`
        type: string
      userLastName:
        description: The last name of the user associated with the `Payment`
        type: string
      userStatus:
        description: The status of the user
        type: object
    type: object
  PaymentRequest:
    description: >-
      Provides information to the application for making a payment for the
      `PayeeAccount`.
    properties:
      attributes:
        description: Additional attributes of the `Payment`
        items:
          $ref: '#/definitions/PaymentAttribute'
        type: array
        uniqueItems: true
      feeAllowance:
        $ref: '#/definitions/Amount'
      memo:
        description: >-
          A note provided by the user describing what the `Payment` is for. The
          `memo` will be added to the check if the `Payment` is made with a
          check.
        maxLength: 50
        minLength: 0
        type: string
      partnerId:
        description: >-
          The unique client identifier associated with the `Payment` to ensure
          that the `Payment` is not made more than once.
        type: string
      payNow:
        description: >-
          Prioritize the `Payment` when set to true. Either `payNow` or
          `sendOnDate` should be provided. Additionally, the `feeAllowance`
          field should be left empty.
        type: boolean
      payeeAccountId:
        description: The `PayeeAccount` identifier that the `Payment` is for.
        type: string
      paymentAmount:
        $ref: '#/definitions/Amount'
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
      paymentInfoRequest:
        $ref: '#/definitions/PaymentInfoRequest'
      sendOnDate:
        description: >-
          The date the `Payment` will be sent to the merchant. Either
          `sendOnDate` or `payNow` should be provided.
        example: '2017-01-01'
        format: date
        type: string
    required:
      - payeeAccountId
      - paymentAmount
    type: object
  PaymentResult:
    description: Indicates the final result of the `Payment`.
    properties:
      amountPaid:
        $ref: '#/definitions/Amount'
      cancelled:
        description: The timestamp when the `PaymentResult` was cancelled.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      cancelledMessage:
        description: The reason the payment was `CANCELLED`.
        type: string
      check:
        $ref: '#/definitions/Check'
      created:
        description: The timestamp when the `PaymentResult` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      effectiveDate:
        description: The effective date the `Payment` was actually made.
        format: date
        type: string
      errorMessage:
        description: The error returned by the merchant when the payment `FAILED`.
        type: string
      extendedStatus:
        description: Provides additional information on the status of the `Payment`.
        enum:
          - NONE
          - DATUMS_NEEDED
          - PAYEE_ACTION_REQUIRED
          - PAYMENT_AMOUNT_DECLINED
          - PAYMENT_ACCOUNT_DECLINED
          - OUTAGE
          - DISPUTED
        example: PAYMENT_AMOUNT_DECLINED
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `PaymentResult`.'
        example: Qyh1JwU2t4JA
        type: string
      feesPaid:
        $ref: '#/definitions/Amount'
      id:
        description: The identifier for the `PaymentResult`.
        example: pr_83ede6ae-a080-11ea-bb37-0242ac130002
        type: string
      merchantConfirmationNumber:
        description: >-
          The payment confirmation number returned by the merchant when the
          payment is `PAID`. The `merchantConfirmationNumber` may not be
          provided if the payment is made through a network or with a check.
        type: string
      paymentInstrumentLast4:
        description: >-
          The last four digits of the payment instrument used to make the
          payment.
        pattern: '[0-9]{4}'
        type: string
      paymentInstrumentType:
        description: The payment instrument used to make the payment.
        enum:
          - EXTERNAL_MMA
          - EXTERNAL_DDA
          - EXTERNAL_CARD
          - VIRTUAL_BANK_ACCOUNT
          - VIRTUAL_CARD
        type: string
      paymentRail:
        $ref: '#/definitions/PaymentRail'
      referenceNumber:
        description: >-
          The `referenceNumber` for the `Payment` when the payment is made
          through a network or with a check.
        type: string
      refundReason:
        description: The reason the payment was `REFUNDED`.
        type: string
      sentOnDate:
        description: The date the `Payment` was sent to the merchant.
        format: date
        type: string
      status:
        description: Indicates the final status of the `Payment`.
        enum:
          - SCHEDULED
          - SENT
          - PAID
          - REFUNDED
          - CANCELLED
          - FAILED
          - PARTIALLY_REFUNDED
        example: PAID
        type: string
      updated:
        description: The timestamp when the `PaymentResult` was updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      virtualCardLast4:
        description: >-
          The last four digits of the virtual card if the payment was made with
          a virtual card.
        pattern: '[0-9]{4}'
        type: string
    readOnly: true
    required:
      - created
      - id
      - status
      - updated
    type: object
  PaymentReview:
    description: Indicates what data the `Payment` will contain if it is created.
    properties:
      attributes:
        items:
          $ref: '#/definitions/PaymentAttribute'
        type: array
        uniqueItems: true
      customerFundingAccount:
        $ref: '#/definitions/CustomerFundingAccount'
      deliverByDate:
        description: The estimated date that the merchant will receive the payment.
        example: '2020-01-01'
        format: date
        type: string
      feeAllowance:
        $ref: '#/definitions/Amount'
      fundingAccount:
        $ref: '#/definitions/FundingAccount'
      memo:
        description: >-
          An optional user provided message to associate with the `Payment`. The
          `memo` will be added to the check if the `Payment` is made with a
          check.
        type: string
      ofxToken:
        description: OFX token
        example: R1EOD39I5V
        type: string
      originationType:
        description: >-
          Indicates how the `Payment` was generated. This has implications on
          the mutability of the `Payment`.
        enum:
          - RECURRENCE_SCHEDULE_PAYMENT
          - ONE_TIME_PAYMENT
        example: ONE_TIME_PAYMENT
        type: string
      partnerId:
        description: >-
          The unique client idempotency identifier associated with the `Payment`
          to ensure that the `Payment` is not made more than once.
        type: string
      payNow:
        description: >-
          This directs the system to prioritize the `Payment` when set to true.
          Additionally, the feeAllowance field should be left empty.
        type: boolean
      payeeAccountLink:
        $ref: '#/definitions/Link'
      payeeSummary:
        $ref: '#/definitions/PayeeSummary'
      paymentAmount:
        $ref: '#/definitions/Amount'
      recurrenceScheduleId:
        description: >-
          Only populated if the `Payment` was generated from the
          `RecurrenceSchedule`.
        type: string
      refundAmount:
        type: string
      sendOnDate:
        description: >-
          The date of the credit authorization and the date the payment will be
          sent to the merchant.
        example: '2017-01-01'
        format: date
        type: string
    required:
      - originationType
      - payeeAccountLink
      - sendOnDate
    type: object
  PaymentStatusReportDto:
    description: >-
      Contains the contract for the 'Payment Status Report based on send on
      date'.
    properties:
      numberOfPayments:
        description: The number of payments
        format: int32
        type: integer
      railName:
        description: The rail name of the `Payment`
        type: string
      railType:
        description: The rail type of the `Payment`
        type: string
      sendOnDate:
        description: The send on date of the 'Payment'
        example: '2020-12-31'
        format: date
        type: string
      status:
        description: The status of the 'Payment'
        type: string
    type: object
  PaymentStatusSummaryReportDto:
    description: >-
      Contains the contract for the 'Payments Status Summary Report based on
      send on date and status'.
    properties:
      data:
        description: The columns data of the `Payment`
        items:
          description: The columns data of the `Payment`
          type: object
        type: array
      sendOnDate:
        description: The send on date of the 'Payment'
        example: '2020-12-31'
        format: date
        type: string
      status:
        description: The status of the 'Payment'
        type: string
    type: object
  PaymentUpdate:
    description: >-
      Provides updated information about the `Payment` and can be used to cancel
      the `Payment`.
    properties:
      attributes:
        description: Additional attributes of the `Payment`
        items:
          $ref: '#/definitions/PaymentAttribute'
        type: array
        uniqueItems: true
      clearAttributes:
        description: Clears `attributes` when true.
        type: boolean
      clearFeeAllowance:
        description: Clears `feeAllowance` when true.
        type: boolean
      clearPaymentDeviceInfo:
        description: Clears `paymentDeviceInfo` when true.
        type: boolean
      feeAllowance:
        $ref: '#/definitions/Amount'
      memo:
        description: >-
          A note provided by the user describing what the `Payment` is for. The
          `memo` will be added to the check if the `Payment` is made with a
          check.
        type: string
      payNow:
        description: >-
          Prioritize the `Payment` when set to true. The field is optional. When
          specified, either `payNow` or `sendOnDate` should be provided.
          Additionally, the `feeAllowance` field should be left empty.
        type: boolean
      payeeAccountId:
        description: The `PayeeAccount` identifier that the `Payment` is for.
        type: string
      paymentAmount:
        $ref: '#/definitions/Amount'
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
      paymentInfoRequest:
        $ref: '#/definitions/PaymentInfoRequest'
      sendOnDate:
        description: >-
          The date the `Payment` will be sent to the merchant. The field is
          optional. When specified, either `sendOnDate` or `payNow` should be
          provided.
        example: '2017-01-01'
        format: date
        type: string
      status:
        description: Set to `CANCELLED` to cancel the `Payment`.
        enum:
          - CANCELLED
        type: string
    type: object
  PaymentsCanceledReportDto:
    description: Contains the contract for the 'Payments Canceled Report'.
    properties:
      billgoTransactionId:
        description: The unique identifier of the `Payment`
        type: string
      businessName:
        description: The company name associated with the `Payment`
        type: string
      canceledReason:
        description: The reason for cancelling the `Payment`
        type: string
      clientTransactionId:
        description: The partner_id of the associated `Payment`
        type: string
      fundingAccountId:
        description: The BillGO ID of the funding account used make the `Payment`
        type: string
      fundingAccountPartnerId:
        description: The partner's ID of the funding account used make the `Payment`
        type: string
      paymentType:
        description: The rail type of the `Payment`
        type: string
      transactionAmount:
        description: The transaction amount of the `Payment`
        type: string
      transactionDate:
        description: The effective date of the `Payment`
        format: date
        type: string
      uniqueId:
        description: The unique identifier of the partner
        type: string
      userFirstName:
        description: The first name of the user associated with the `Payment`
        type: string
      userLastName:
        description: The last name of the user associated with the `Payment`
        type: string
      userStatus:
        description: The status of the user
        type: object
    type: object
  PhoneNumber:
    description: Represents a phone number.
    properties:
      extension:
        description: The phone number extension.
        example: '00234'
        type: string
      phoneNumber:
        description: >-
          The phone number ideally formatted according to ITU-T E.164 and E.123
          (without '~') standards.
        example: +1 415 123 1234
        type: string
      type:
        description: Indicates the phone number type.
        enum:
          - LANDLINE
          - MOBILE
        example: MOBILE
        type: string
      verified:
        default: false
        description: Has the phone number been verified for KYC compliance.
        type: boolean
      verifiedTimestamp:
        description: The timestamp in UTC when the phone number was last verified
        example: '2022-03-04T04:45:42Z'
        format: date-time
        type: string
    required:
      - type
    type: object
  Profile:
    description: Represents the profile information for the `User`
    properties:
      accountHolderName:
        $ref: '#/definitions/Name'
      accountSubType:
        description: Further classification of the account.
        enum:
          - PRIVATE_CLIENT
          - VIP
        type: string
      addresses:
        description: The list of `UserAddress` for the account holder.
        items:
          $ref: '#/definitions/UserAddress'
        type: array
      bankAccountEnrollmentDate:
        description: When the user first opened an account with the financial institution.
        format: date
        type: string
      billPaySinceDate:
        description: The date the user was enrolled in bill pay.
        format: date
        type: string
      businessProprietor:
        $ref: '#/definitions/Name'
      customerConsent:
        $ref: '#/definitions/CustomerConsent'
      customerRelationshipStartDate:
        description: When customer relationship began.
        format: date
        type: string
      dateOfBirth:
        description: The birth date of the user.
        example: '2020-06-04'
        format: date
        type: string
      emailAddress:
        description: The email address of the user.
        type: string
      emailLastUpdated:
        description: The timestamp when the `Email` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      emailVerified:
        default: false
        description: Has the email been verified for KYC compliance.
        type: boolean
      emailVerifiedTimestamp:
        description: The timestamp in UTC when the `Email` was last verified.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      enrollmentSource:
        description: How the user was initially engaged with the financial institution.
        enum:
          - ONLINE
          - MOBILE
          - BRANCH
          - PHONE_BANK
        type: string
      olbStartDate:
        description: When user started online banking.
        format: date
        type: string
      primaryPhone:
        $ref: '#/definitions/PhoneNumber'
      secondaryPhone:
        $ref: '#/definitions/PhoneNumber'
      taxId:
        pattern: '(^[0-9]{2}-[0-9]{7}$)|(^[0-9]{3}-[0-9]{2}-[0-9]{4}$)|(^[#]*[0-9]{4}$)'
        type: string
      tertiaryPhone:
        $ref: '#/definitions/PhoneNumber'
      type:
        description: An `AccountType`.
        enum:
          - PERSONAL
          - JOINT
          - BUSINESS
        example: PERSONAL
        type: string
    required:
      - accountHolderName
      - addresses
      - type
    type: object
  RailConstraints:
    description: >-
      Contains information indicating when the `Payment` for a specific payment
      rail.
    properties:
      businessDaysNeededToDeliverPayment:
        description: >-
          An integer representation of the business days needed to deliver the
          `Payment`. 0 indexed.
        format: int32
        readOnly: true
        type: integer
      deliverByDate:
        description: The date that the payment funds will be received by the payee.
        format: date
        readOnly: true
        type: string
      extendedStatus:
        description: >
          ### Overview:

          The following table lists the possible values for `extendedStatus` for
          the `railConstraints` with in 

          `paymentConstraints`. A `railConstraints'` `status` can either be
          `NEEDS` or `UNAVAILABLE`.

          A `railConstraints` `status` of `UNAVAILABLE` cannot be resolved by
          the end user. A `railConstraints`

          `status` of `NEEDS` indicates that there is an action that can be
          taken to resolve the reason for the 

          reported `railConstraints` `status`. If there is an action that the
          end user can take to resolve the 

          reason for the `railConstraints'` `status`, then the `Explanation`
          column indicates the action that the end 

          user should take. If the suggested action can be performed when making
          a payment, then the 

          `canBeProvidedWithPaymentRequest` attribute will be `true`.
          Explanations in the `Explanation` column that 
           contain `${<attribute_name>}` will have the attribute name replaced with the attribute value.



          <table>

          <col style="width:65%">

          <col style="width:35%">

          <thead>

          <tr><th>Code</th><th>Explanation</th></tr>

          </thead>

          <tbody>

          <tr><td><code>ACCESS_RESTRICTED</code></td><td>Cannot link: access
          restricted</td></tr>

          <tr><td><code>ACCOUNT_ACTIVATION</code></td><td>Cannot link: account
          not active</td></tr>

          <tr><td><code>ACCOUNTS_ADDED</code></td><td>Contact merchant to add
          accounts</td></tr>

          <tr><td><code>ACCOUNT_TRANSFERRED</code></td><td>Cannot link: account
          transferred</td></tr>

          <tr><td><code>ACCOUNT_UPDATE</code></td><td>Cannot link: info needed
          for access</td></tr>

          <tr><td><code>ACCOUNT_VERIFICATION</code></td><td>Cannot link: verify
          account</td></tr>

          <tr><td><code>ACTIVATION</code></td><td>Cannot link: activate
          account</td></tr>

          <tr><td><code>ADDITIONAL_LINKING_DATUMS</code></td><td>Please provide
          the missing datums required to link your account.</td></tr>

          <tr><td><code>BILL_CHARGED_TO_PAYMENT_ACCOUNT</code></td><td>Payments
          for the user's payee_name payee account are being charged to a payment
          account. We are not able to accept a payment at this time.</td></tr>

          <tr><td><code>BILLING_DETAILS_UNAVAILABLE</code></td><td>Cannot link:
          no billing details</td></tr>

          <tr><td><code>BILL_PAY_CONSENT</code></td><td>Ask the user to accept
          the bill pay consent terms.</td></tr>

          <tr><td><code>CARD_REGISTRATION</code></td><td>Cannot link: register
          payment card</td></tr>

          <tr><td><code>CUSTOM_PAYMENT_DISABLED</code></td><td>The ${payee_name}
          payee has indicated that custom payments are disabled for associated
          accounts. We are not able to accept a payment at this time.</td></tr>

          <tr><td><code>DELIVER_BY_DATE_BEFORE_TODAY</code></td><td>The payment
          delverByDate: ${deliver_by_date}cannot be before today:
          ${today}.</td></tr>

          <tr><td><code>DELIVER_BY_DATE_MISSING</code></td><td>The deliver by
          date must be provided.</td></tr>

          <tr><td><code>DIRECT_PAYMENT_IS_NOT_SUPPORTED</code></td><td>This
          payment rail does not support direct payments using an external
          funding account or credit card.</td></tr>

          <tr><td><code>EBN_PAYMENT_RAIL_IS_NOT_SUPPORTED</code></td><td>The
          merchant does not support EBN payments.</td></tr>

          <tr><td><code>EMAIL_VALIDATION</code></td><td>Cannot link: set up
          automatic alerts</td></tr>

          <tr><td><code>FIRST_BILL_NOT_READY</code></td><td>Bill not avail: will
          appear when ready</td></tr>

          <tr><td><code>FREE_TRIAL_ONLY</code></td><td>Free account: no bills to
          show</td></tr>

          <tr><td><code>FUNDING_ACCOUNT</code></td><td>Ask the user to create a
          default funding account or to provide the funding account details with
          the payment request.</td></tr>

          <tr><td><code>HOLIDAY_DELIVER_BY_DATE</code></td><td>Payment cannot be
          delivered on bank holidays.</td></tr>

          <tr><td><code>HOLIDAY_SEND_ON_DATE</code></td><td>Payment cannot be
          sent on bank holidays.</td></tr>

          <tr><td><code>IN_COLLECTIONS</code></td><td>Cannot link: contact
          merchant</td></tr>

          <tr><td><code>LINKED_PAYEE</code></td><td>Ask the user to correct the
          linking datums and attempt to link the payee again.</td></tr>

          <tr><td><code>LINKING_DATUMS</code></td><td>Ask the user to provide
          linking datums for the payee.</td></tr>

          <tr><td><code>LINKING</code></td><td>The merchant account is in the
          process of being linked and payments are not available at the
          moment.</td></tr>

          <tr><td><code>MAILING_ADDRESS_UPDATE</code></td><td>Cannot link:
          update mailing address</td></tr>

          <tr><td><code>MANUAL_DATUMS</code></td><td>Ask the user to provide
          manual datums for the payee account.</td></tr>

          <tr><td><code>MATCHING_LINKING_DATUMS</code></td><td>The provided
          linking datums do not match any payment rails.</td></tr>

          <tr><td><code>MATCHING_MANUAL_DATUMS</code></td><td>The provided
          manual datums do not match any payment rails.  Ask the user to provide
          an updated set of manual datums.</td></tr>

          <tr><td><code>MERCHANT_HAS_FEE</code></td><td>Merchant has a
          fee.</td></tr>

          <tr><td><code>MERCHANT_ID</code></td><td>Ask the user to add a
          merchantId to the payee.</td></tr>

          <tr><td><code>MERCHANT_NOT_IN_DIRECTORY</code></td><td>The merchant is
          not found in the directory.</td></tr>

          <tr><td><code>MERCHANT_NOT_LINKABLE</code></td><td>Can't support
          biller: add manually</td></tr>

          <tr><td><code>MERCHANT_PAYMENT_HEALTH</code></td><td>Merchant payment
          health is below the required threshold.</td></tr>

          <tr><td><code>MISSING_BILL</code></td><td>Payee account does not have
          a bill.</td></tr>

          <tr><td><code>MISSING_REASON</code></td><td>Failed to identify the
          specific reason.</td></tr>

          <tr><td><code>CODE_GENERATOR_NOT_SUPPORTED</code></td><td>Cannot link:
          change code method</td></tr>

          <tr><td><code>NEW_DATUMS</code></td><td>Cannot link: needs new
          username/password</td></tr>

          <tr><td><code>NON_US_ACCOUNTS_UNSUPPORTED</code></td><td>Cannot link:
          non-US account</td></tr>

          <tr><td><code>NOT_ACCOUNT_OWNER</code></td><td>Cannot link: access
          issues</td></tr>

          <tr><td><code>NO_BILLS_AVAILABLE</code></td><td>No bills available at
          this time</td></tr>

          <tr><td><code>NOT_ACCESSIBLE_ONLINE</code></td><td>Cannot link:
          activate online access</td></tr>

          <tr><td><code>OUT_OF_BAND_PAYMENT_DISABLED</code></td><td>The user's
          bill has already been paid and the ${payee_name} payee does not accept
          extra payments. We are not able to accept additional payments at this
          time</td></tr>

          <tr><td><code>PAPERLESS_ENROLLMENT</code></td><td>Cannot get bill:
          enroll in paperless</td></tr>

          <tr><td><code>PASSWORD_RESET</code></td><td>Cannot link: reset
          username/password</td></tr>

          <tr><td><code>PAYEE_ACCOUNT_HOLDER_NAME</code></td><td>Ask the user to
          provide the payer name for the payee account</td></tr>

          <tr><td><code>PAYEE_ACCOUNT_NUMBER</code></td><td>Ask the user to
          provide the remittance account number for the payee account.</td></tr>

          <tr><td><code>PAYEE_ACCOUNT_REMITTANCE_ACCOUNT</code></td><td>Ask the
          user to provide the payee account remittance account.</td></tr>

          <tr><td><code>PAYEE_ACCOUNT_REMITTANCE_ADDRESS</code></td><td>Ask the
          user to provide the remittance address for the payee
          account.</td></tr>

          <tr><td><code>PAYEE_ACCOUNT_PAYER_ADDRESS</code></td><td>Ask the user
          to provide the payer address.</td></tr>

          <tr><td><code>PAYMENTS_DISABLED_FOR_PAYEE</code></td><td>The
          ${payee_name} payee has indicated that payments are disabled for all
          associated accounts. We are not able to accept a payment at this
          time.</td></tr>

          <tr><td><code>PAYMENT_ALREADY_SCHEDULED</code></td><td>A payment for
          the user's payee_nameis already scheduled. We are not able to accept
          additional payments at this time.</td></tr>

          <tr><td><code>PAYMENT_INSTRUMENTS_ARE_NOT_SUPPORTED</code></td><td>Payments
          cannot be made for the merchant account with the provided payment
          instruments.</td></tr>

          <tr><td><code>PAYMENT_IS_PROCESSING</code></td><td>A payment is
          currently being processed for the user's ${payee_name} payee account.
          We are not able to accept additional payments at this time</td></tr>

          <tr><td><code>PAYMENT_UPDATE</code></td><td>Cannot link: update
          payment info</td></tr>

          <tr><td><code>PHONE_NUMBER_UPDATE</code></td><td>Cannot link: update
          phone number</td></tr>

          <tr><td><code>REACTIVATION</code></td><td>Cannot link: reactivate
          account</td></tr>

          <tr><td><code>REALTIME_PAYEE_LINKING_ERROR</code></td><td>The payee is
          not linked correctly. Retry linking process.</td></tr>

          <tr><td><code>REALTIME_PAYMENT_IS_NOT_SUPPORTED</code></td><td>The
          merchant does not support virtual bank accounts or virtual cards.
          Alternatively, enable virtual bank accounts or virtual cards in the
          client configuration.</td></tr>

          <tr><td><code>REALTIME_PAYMENT_RAIL_IS_NOT_SUPPORTED</code></td><td>The
          merchant does not support real time payments.</td></tr>

          <tr><td><code>SECURITY_IMAGE</code></td><td>Cannot link: create
          security image</td></tr>

          <tr><td><code>SECURITY_PHRASE</code></td><td>Cannot link: set up
          security phrase</td></tr>

          <tr><td><code>SECURITY_QUESTIONS</code></td><td>Cannot link: add
          security questions</td></tr>

          <tr><td><code>SECURITY_UPDATE</code></td><td>Cannot link: set up
          automatic alerts</td></tr>

          <tr><td><code>SEND_ON_DATE_BEFORE_TODAY</code></td><td>The payment
          sendOnDate: ${send_on_date}cannot be before today: ${today}.</td></tr>

          <tr><td><code>SEND_ON_DATE_MISSING</code></td><td>The send on date
          must be provided.</td></tr>

          <tr><td><code>SERVICE_AUTOMATIC_AT_BANK</code></td><td>The user's
          ${payee_name}payee account is set up to be paid automatically through
          the user's bank. We are not able to accept a payment at this
          time</td></tr>

          <tr><td><code>SERVICE_AUTOMATIC</code></td><td>Autopay is configured
          for the account at the ${payee_name} payee.</td></tr>

          <tr><td><code>SITE_DECOMMISSIONED</code></td><td>The online merchant
          payment portal is not longer available.</td></tr>

          <tr><td><code>SUBSCRIPTION_BASED_MERCHANT</code></td><td>Payments to
          subscription based merchants are not supported.</td></tr>

          <tr><td><code>SUPERSEDED_BY_MUTUALLY_EXCLUSIVE_RAIL</code></td><td>This
          payment rail is superseded by a mutually exclusive payment
          rail.</td></tr>

          <tr><td><code>TEMPORARILY_DISABLED</code></td><td>Account briefly
          disabled. Try again later.</td></tr>

          <tr><td><code>TURNED_OFF</code></td><td>Enable the payment rail in the
          client configuration.</td></tr>

          <tr><td><code>UNAUTHORIZED</code></td><td>Cannot link:
          unauthorized</td></tr>

          <tr><td><code>USERNAME_UPDATE</code></td><td>Cannot link: update phone
          number</td></tr>

          <tr><td><code>VALID_EBN_PAYEE_ACCOUNT_NUMBER</code></td><td>Ask the
          user to verify that the account number on the payee account remittance
          is correct.</td></tr>

          <tr><td><code>VALID_LINKING_DATUMS</code></td><td>Ask the user to
          correct the provided datums associated with the payee.</td></tr>

          <tr><td><code>VIRTUAL_CARD_CONSENT</code></td><td>Ask the user to
          accept the virtual card consent terms.</td></tr>

          <tr><td><code>WEEKEND_DELIVER_BY_DATE</code></td><td>Payment cannot be
          delivered on weekends.</td></tr>

          <tr><td><code>WEEKEND_SEND_ON_DATE</code></td><td>Payment cannot be
          sent on weekends.</td></tr>

          </tbody>

          </table>
        items:
          $ref: '#/definitions/ExtendedStatus'
        readOnly: true
        type: array
      flatFee:
        $ref: '#/definitions/Amount'
      nextCutoffForPayment:
        description: >-
          The UTC timestamp that a payment has to be submitted by to be
          processed within that day's batch. If the timestamp represents a
          future date, count `businessDaysNeededToDeliveryPayment` from that
          date. For example, if today is Saturday, October 12, 2019 and the
          `nextCutoffForPayment` is Monday, October 14, 2019 at 4pm ET, if
          `businessDaysNeededToDeliveryPayment` is 2, then the payment will be
          delivered to the merchant on Wednesday, October 16, 2019 if it is
          submitted prior to the `nextCutoffForPayment`.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      percentageFee:
        description: >-
          The percentage value of the payment amount that will be charged as a
          payment fee.
        type: string
      sendOnDate:
        description: >-
          The date that the payment funds will be deducted from the payer's
          account.
        format: date
        readOnly: true
        type: string
      status:
        description: Indicates whether or not a payment can be made using the rail.
        enum:
          - AVAILABLE
          - NEEDS
          - UNAVAILABLE
        readOnly: true
        type: string
      supportsNonBusinessDays:
        description: >-
          This will be `true` if the account is able to be submitted for a
          payment during non-business days. In order for the account to be
          eligible, the `Payee` must support Realtime payments and the
          `PayeeAccount` must include `PayeeAccountRemittance` details. The
          `PayeeAccountRemittance` details are required so that given a scenario
          in which the payment is unable to be processed via a Realtime rail the
          payment can be attempted  through other rails which require the
          `PayeeAccountRemittance` details.
        readOnly: true
        type: boolean
      supportsPayNow:
        description: >-
          This will be `true` if the account is able to be submitted for a
          realtime payment. In order for the account to be eligible, the
          merchant must be in the BillGO network, support realtime payments, be
          in a healthy state, and the user must opt-in to virtual card payments.
        readOnly: true
        type: boolean
      type:
        description: The general method used to process the payment.
        enum:
          - REALTIME
          - EBN
          - CHECK
          - ACH
        example: REALTIME
        type: string
      userPaymentMethodAllowed:
        description: >-
          Signals if users can pick one of their payment methods to pay with.
          Eligible user payment methods are: cards and bank accounts. These are
          payment methods outside of bank accounts with the bank that is
          integrated with BillGO.
        readOnly: true
        type: boolean
    required:
      - businessDaysNeededToDeliverPayment
      - deliverByDate
      - nextCutoffForPayment
      - sendOnDate
      - supportsNonBusinessDays
      - supportsPayNow
      - type
      - userPaymentMethodAllowed
    type: object
  RecurringSchedule:
    description: Returns the configuration details for a `RecurringSchedule`.
    properties:
      billBased:
        $ref: '#/definitions/BillBased'
      calendarBased:
        $ref: '#/definitions/CalendarBased'
      created:
        description: The timestamp when the `RecurringSchedule` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      endingSetting:
        $ref: '#/definitions/ScheduleEnding'
      externalId:
        description: >-
          The unique, shortened (12 chars) identifier for the
          `RecurringSchedule`.
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      holidaySchedulingStrategy:
        default: PAY_EARLY
        description: >-
          In the event that a `Bill` due date or the next date in a
          `RecurringSchedule` falls on a non-banking day, this property
          determines if the `Bill` is paid on the next soonest business day
          (`PAY_EARLY`) or if it is paid on the next business day after the
          intended date (`PAY_LATE`).
        enum:
          - PAY_EARLY
          - PAY_LATE
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `RecurringSchedule`.
        example: recsched_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      lastPayment:
        $ref: '#/definitions/Payment'
      nextPayment:
        $ref: '#/definitions/Payment'
      notifications:
        $ref: '#/definitions/ScheduleNotifications'
      ofxToken:
        description: OFX token
        example: R1EOD39I5V
        readOnly: true
        type: string
      partnerScheduleId:
        description: >-
          The partner identifier for a `RecurringSchedule` that allows a partner
          to retrieve the associated `RecurringSchedule`.
        type: string
      payeeAccountId:
        type: string
      payeeAccountLink:
        $ref: '#/definitions/Link'
      payeeAccountSummary:
        $ref: '#/definitions/PayeeAccountSummary'
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
      status:
        description: Indicates the status of a `RecurringSchedule`.
        enum:
          - ACTIVE
          - TERMINATED
          - COMPLETE
        example: ACTIVE
        type: string
      updated:
        description: The timestamp when the `RecurringSchedule` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    required:
      - created
      - holidaySchedulingStrategy
      - id
      - payeeAccountLink
      - updated
    type: object
  RecurringScheduleList:
    description: The list of `RecurringSchedules` associated with a `User`.
    properties:
      schedules:
        items:
          $ref: '#/definitions/RecurringSchedule'
        readOnly: true
        type: array
    required:
      - schedules
    type: object
  RecurringScheduleRequest:
    description: Represents a `RecurringSchedule`.
    properties:
      billBased:
        $ref: '#/definitions/BillBasedRequest'
      calendarBased:
        $ref: '#/definitions/CalendarBasedRequest'
      endingSetting:
        $ref: '#/definitions/ScheduleEndingRequest'
      holidaySchedulingStrategy:
        default: PAY_EARLY
        description: >-
          In the event that a `Bill` due date or the next date in a
          `RecurringSchedule` falls on a non-banking day, this property
          determines if the `Bill` is paid on the next soonest business day
          (`PAY_EARLY`) or if it is paid on the next business day after the
          intended date (`PAY_LATE`).
        enum:
          - PAY_EARLY
          - PAY_LATE
        type: string
      notifications:
        $ref: '#/definitions/ScheduleNotifications'
      partnerScheduleId:
        description: >-
          The partner identifier for the `RecurringSchedule` that allows the
          partner to retrieve the `RecurringSchedule`.
        type: string
      payeeAccountId:
        description: >-
          The identifier of the `PayeeAccount` to associate the
          `RecurringSchedule` with.
        type: string
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
      paymentInfoRequest:
        $ref: '#/definitions/PaymentInfoRequest'
    required:
      - payeeAccountId
    type: object
  RecurringScheduleReview:
    description: >-
      Returns the result of submitting a `RecurringScheduleRequest` to the
      review endpoint.
    properties:
      billBased:
        $ref: '#/definitions/BillBased'
      calendarBased:
        $ref: '#/definitions/CalendarBased'
      endingSetting:
        $ref: '#/definitions/ScheduleEnding'
      holidaySchedulingStrategy:
        default: PAY_EARLY
        description: >-
          In the event that a `Bill` due date or the next date in a
          `RecurringSchedule` falls on a non-banking day, this property
          determines if the `Bill` is paid on the next soonest business day
          (`PAY_EARLY`) or if it is paid on the next business day after the
          intended date (`PAY_LATE`).
        enum:
          - PAY_EARLY
          - PAY_LATE
        readOnly: true
        type: string
      nextPayment:
        $ref: '#/definitions/PaymentReview'
      notifications:
        $ref: '#/definitions/ScheduleNotifications'
      partnerScheduleId:
        description: >-
          The partner identifier for a `RecurringSchedule` that allows a partner
          to retrieve the associated `RecurringSchedule`.
        type: string
      payeeAccountId:
        type: string
      payeeAccountLink:
        $ref: '#/definitions/Link'
      payeeAccountSummary:
        $ref: '#/definitions/PayeeAccountSummary'
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
    required:
      - holidaySchedulingStrategy
      - payeeAccountLink
    type: object
  RecurringScheduleUpdate:
    description: Updates an existing `RecurringSchedule`.
    properties:
      billBasedUpdate:
        $ref: '#/definitions/BillBasedUpdate'
      calendarBasedUpdate:
        $ref: '#/definitions/CalendarBasedUpdate'
      endingSetting:
        $ref: '#/definitions/ScheduleEndingRequest'
      holidaySchedulingStrategy:
        default: PAY_EARLY
        description: >-
          In the event that a `Bill` due date or the next date in a
          `RecurringSchedule` falls on a non-banking day, this property
          determines if the `Bill` is paid on the next soonest business day
          (`PAY_EARLY`) or if it is paid on the next business day after the
          intended date (`PAY_LATE`).
        enum:
          - PAY_EARLY
          - PAY_LATE
        type: string
      notifications:
        $ref: '#/definitions/ScheduleNotifications'
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
      paymentInfoRequest:
        $ref: '#/definitions/PaymentInfoRequest'
    type: object
  RemittanceAddress:
    description: Contains the remittance information for the `PayeeAccount`.
    properties:
      addressLine1:
        description: The first line of the address.
        example: 123 Main St.
        maxLength: 255
        minLength: 0
        type: string
      addressLine2:
        description: The second line of the address if applicable.
        example: PO Box 101
        maxLength: 255
        minLength: 0
        type: string
      addressLine3:
        description: The third line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      addressLine4:
        description: The fourth line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      city:
        description: The address city.
        example: New Brunswick
        maxLength: 255
        minLength: 0
        type: string
      countryCode:
        default: US
        description: >-
          The two or three character country code from ISO-3166. If the client
          is designated as OFX, three letter country code from ISO-3166 is
          provided.
        maxLength: 3
        minLength: 2
        type: string
      created:
        description: The timestamp when the `Address` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      defaultAddress:
        default: false
        description: Is this the default address.
        readOnly: true
        type: boolean
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Address`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Address`
        example: u_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      origin:
        description: Indicates the source of the `RemittanceAddress`.
        enum:
          - USER_PROVIDED
          - USER_PROVIDED_VALIDATED
          - SYSTEM_PROVIDED
        example: SYSTEM_PROVIDED
        type: string
      postalCode:
        description: >-
          The postal code for this address. Supports international postal codes
          as well.
        example: '10001'
        type: string
      province:
        description: The province for international addresses
        maxLength: 255
        minLength: 0
        type: string
      stateAbbreviation:
        description: >-
          The two character abbreviation for the address state. Not used in
          international addresses.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      status:
        default: ACTIVE
        description: Indicates the address status.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: Indicates the address type.
        enum:
          - MAILING
          - PHYSICAL
        example: MAILING
        type: string
      updated:
        description: The timestamp when the `Address` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      verified:
        default: false
        description: Has the address been verified for KYC compliance.
        readOnly: true
        type: boolean
    required:
      - addressLine1
      - city
      - origin
      - postalCode
      - type
    type: object
  RemittanceAddressRequest:
    description: Contains the remittance address for a `PayeeAccount`.
    properties:
      addressLine1:
        description: The first line of the address.
        example: 123 Main St.
        maxLength: 255
        minLength: 0
        type: string
      addressLine2:
        description: The second line of the address if applicable.
        example: PO Box 101
        maxLength: 255
        minLength: 0
        type: string
      addressLine3:
        description: The third line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      addressLine4:
        description: The fourth line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      city:
        description: The address city.
        example: New Brunswick
        maxLength: 255
        minLength: 0
        type: string
      countryCode:
        default: US
        description: >-
          The two or three character country code from ISO-3166. If the client
          is designated as OFX, three letter country code from ISO-3166 is
          provided.
        maxLength: 3
        minLength: 2
        type: string
      postalCode:
        description: >-
          The postal code for this address. Supports international postal codes
          as well.
        example: '10001'
        type: string
      province:
        description: The province for international addresses
        maxLength: 255
        minLength: 0
        type: string
      stateAbbreviation:
        description: >-
          The two character abbreviation for the address state. Not used in
          international addresses.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      status:
        default: ACTIVE
        description: Indicates the address status.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: Indicates the address type.
        enum:
          - MAILING
          - PHYSICAL
        example: MAILING
        type: string
    required:
      - addressLine1
      - city
      - postalCode
      - type
    type: object
  ResourceLink:
    description: >-
      Provides resource retrieval information for resources available for
      download throughout the API.
    properties:
      expiration:
        description: Indicates when the resource is no longer available for retrieval.
        format: date-time
        readOnly: true
        type: string
      resourceUrl:
        description: Indicates the URL to retrieve the resource from.
        readOnly: true
        type: string
    required:
      - expiration
      - resourceUrl
    type: object
  ResourceNotificationsFilter:
    description: >-
      Represents the selection criteria the application is using to select the
      `Notifications` issued.
    properties:
      created:
        description: The timestamp of when the `ResourceNotificationsFilter` was created.
        example: '2018-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
      externalId:
        description: >-
          The unique, shortened (12 chars) identifier for the
          `ResourceNotificationsFilter`.
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `ResourceNotificationsFilter`.
        example: nr_fbd40f3f63b14400824b945635a63d52
        readOnly: true
        type: string
      operationTypes:
        items:
          description: 'Indicates if the resource was `CREATED`, `UPDATED`, or `REMOVED`.'
          enum:
            - CREATED
            - UPDATED
            - REMOVED
          example: CREATED
          type: string
        type: array
      resourceTypes:
        items:
          description: Indicates the type of the resource.
          enum:
            - USER
            - PAYEE
            - PAYEE_ACCOUNT
            - BILL
            - DOCUMENT
            - PAYMENT
            - SCHEDULE
            - USER_NOTIFICATION
            - USER_JWT
            - PKCE_JWT
          example: USER
          type: string
        type: array
      updated:
        description: The timestamp of when the `ResourceNotificationsFilter` was updated.
        example: '2018-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - created
      - id
      - updated
    type: object
  ResourceNotificationsFilterRequest:
    description: >-
      Provides selection criteria to the application for the `Notifications` to
      issue.
    properties:
      operationTypes:
        items:
          description: 'Indicates if the resource was `CREATED`, `UPDATED`, or `REMOVED`.'
          enum:
            - CREATED
            - UPDATED
            - REMOVED
          example: CREATED
          type: string
        type: array
      resourceTypes:
        items:
          description: Indicates the type of the resource.
          enum:
            - USER
            - PAYEE
            - PAYEE_ACCOUNT
            - BILL
            - DOCUMENT
            - PAYMENT
            - SCHEDULE
            - USER_NOTIFICATION
            - USER_JWT
            - PKCE_JWT
          example: USER
          type: string
        type: array
    required:
      - resourceTypes
    type: object
  ResourceNotificationsRequest:
    description: >-
      Provides selection criteria to the application for the `Notifications` to
      issue.
    properties:
      endtime:
        description: Send `Notifications` created before the `endtime`.
        format: date-time
        type: string
      limit:
        description: Indicates the maximum number of `Notifications` to issue.
        example: 100
        format: int32
        minimum: 1
        type: integer
      operationTypes:
        items:
          description: 'Indicates if the resource was `CREATED`, `UPDATED`, or `REMOVED`.'
          enum:
            - CREATED
            - UPDATED
            - REMOVED
          example: CREATED
          type: string
        type: array
      resourceTypes:
        items:
          description: Indicates the type of the resource.
          enum:
            - USER
            - PAYEE
            - PAYEE_ACCOUNT
            - BILL
            - DOCUMENT
            - PAYMENT
            - SCHEDULE
            - USER_NOTIFICATION
            - USER_JWT
            - PKCE_JWT
          example: USER
          type: string
        type: array
      starttime:
        description: Send `Notifications` created after the `starttime`.
        example: '2019-01-01T13:01:01Z'
        format: date-time
        type: string
    required:
      - limit
    type: object
  ReturnsReportDto:
    description: Contains the contract for the 'Returns Report'.
    properties:
      billerBusinessName:
        description: The company name associated with the `Payment`
        type: string
      fundingAccountId:
        description: The BillGO ID of the funding account used make the `Payment`
        type: string
      fundingAccountPartnerId:
        description: The partner's ID of the funding account used make the `Payment`
        type: string
      originalTransactionAmount:
        description: The original transaction amount of the `Payment`
        type: string
      refundAmount:
        description: The amount of the `Payment` that was credited/refunded
        type: string
      transactionDate:
        description: The effective date of the `Payment`
        format: date
        type: string
      transactionId:
        description: The id of the associated `Payment`
        type: string
      userFirstName:
        description: The first name of the user associated with the `Payment`
        type: string
      userLastName:
        description: The last name of the user associated with the `Payment`
        type: string
      userStatus:
        description: The status of the user
        type: object
    type: object
  ReviewPaymentRequest:
    description: Provides payment details to the application for review and validation.
    properties:
      attributes:
        description: Additional attributes of the `Payment`
        items:
          $ref: '#/definitions/PaymentAttribute'
        type: array
        uniqueItems: true
      memo:
        description: >-
          A note provided by the user describing what the `Payment` is for. The
          `memo` will be added to the check if the `Payment` is made with a
          check.
        type: string
      partnerId:
        description: >-
          The unique client identifier associated with the `Payment` to ensure
          that the `Payment` is not made more than once.
        type: string
      payNow:
        description: >-
          Prioritize the `Payment` when set to true. Either `payNow` or
          `sendOnDate` should be provided. Additionally, the `feeAllowance`
          field should be left empty.
        type: boolean
      payeeAccountId:
        description: The `PayeeAccount` identifier that the `Payment` is for.
        type: string
      paymentAmount:
        $ref: '#/definitions/Amount'
      paymentDeviceInfo:
        $ref: '#/definitions/PaymentDeviceInfo'
      paymentInfoRequest:
        $ref: '#/definitions/PaymentInfoRequest'
      sendOnDate:
        description: >-
          The date on which the user desires the `Payment` to be sent to the
          merchant. When provided the estimated deliverByDate is computed using
          the provided sendOnDate.
        example: '2017-01-01'
        format: date
        type: string
    required:
      - payeeAccountId
      - paymentAmount
    type: object
  ScheduleEnding:
    description: >-
      Determines when `Payments` associated with a `RecurringSchedule` should be
      stopped.
    properties:
      endDateInclusive:
        description: >-
          The date to stop making `Payments` for the `RecurringSchedule`.
          `Payments` will be made on this date, but not after.
        format: date
        type: string
      numberOfPayments:
        description: The maximum number of `Payments` to make for the `RecurringSchedule`.
        format: int32
        type: integer
      paymentsMade:
        description: >-
          The number of `Payments` made since the start of the
          `RecurringSchedule`.
        format: int32
        type: integer
      paymentsRemaining:
        description: The number of `Payments` remaining in the `RecurringSchedule`.
        format: int32
        type: integer
      type:
        description: The available types of `ScheduleEndings`.
        enum:
          - NUMBER
          - USER_STOPPED
          - END_DATE
          - NO_END_DATE
        example: END_DATE
        type: string
      userEndedTimestamp:
        description: The timestamp at which the user canceled the `RecurringSchedule`.
        format: date-time
        type: string
    required:
      - type
    type: object
  ScheduleEndingRequest:
    description: Determines when `Payments` for a `RecurringSchedule` should be stopped.
    properties:
      endDateInclusive:
        description: >-
          The date to stop making `Payments` for the associated
          `RecurringSchedule`. `Payments` can be made on this date, but not
          after. The specified can be today's date or a future date.
        example: '2021-12-25'
        format: date
        type: string
      numberOfPayments:
        description: >-
          The number of `Payments` to make for the associated
          `RecurringSchedule`.
        example: 10
        format: int32
        minimum: 1
        type: integer
      type:
        description: The allowed `ScheduleEndingTypes` for a `ScheduleEndingRequest`.
        enum:
          - NUMBER
          - END_DATE
          - NO_END_DATE
        example: END_DATE
        type: string
    required:
      - type
    type: object
  ScheduleNotifications:
    description: >-
      Determines what type of `Payment` notification events are sent to the
      user.
    properties:
      beforeSendingLastPayment:
        description: User is notified before the last `Payment` is sent.
        type: boolean
      paymentSent:
        description: User is notified when a `Payment` is sent.
        type: boolean
      pendingPayment:
        description: User is notified before a `Payment` is sent.
        type: boolean
    required:
      - beforeSendingLastPayment
      - paymentSent
      - pendingPayment
    type: object
  Style:
    description: UI styling properties for the `Merchant`.
    properties:
      accentColor:
        description: The accent hex color code of the `Merchant`.
        example: '#1e8ecd'
        readOnly: true
        type: string
      accentTextColor:
        description: The accent text hex color code of the `Merchant`.
        example: '#1e8ecd'
        readOnly: true
        type: string
      primaryColor:
        description: The primary hex color code of the `Merchant`.
        example: '#1e8ecd'
        readOnly: true
        type: string
    type: object
  Terms:
    description: Terms for customer consent
    properties:
      created:
        description: The timestamp when the `Terms` were created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Terms`.
        example: trms_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      invalid:
        type: boolean
      termsType:
        description: Indicates the type of the `CustomerConsent`.
        enum:
          - BILLPAY
          - VIRTUAL_CARD
        type: string
      termsUrl:
        description: URL where the full text of the terms can be found.
        type: string
      termsVersion:
        description: A version identifier for the terms
        type: string
      updated:
        description: The timestamp when the `Terms` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - created
      - id
      - termsType
      - termsUrl
      - termsVersion
      - updated
    type: object
  TermsRequest:
    description: Terms for customer consent
    properties:
      termsType:
        description: Indicates the type of the `CustomerConsent`.
        enum:
          - BILLPAY
          - VIRTUAL_CARD
        type: string
      termsUrl:
        description: >-
          URL where the full text of the terms can be found. Cannot be an empty
          string or whitespace.
        type: string
      termsVersion:
        description: >-
          A version identifier for the terms. Cannot be an empty string or
          whitespace.
        type: string
    required:
      - termsType
      - termsUrl
      - termsVersion
    type: object
  TermsUpdate:
    description: Allows the `Customer Consent` terms to be updated.
    properties:
      invalid:
        description: >-
          Determines whether or not the terms are valid.  Users who have
          accepted terms that have been marked invalid will no longer be able to
          access features controlled by the invalidated terms.
        type: boolean
      termsUrl:
        description: >-
          URL where the full text of the terms can be found. If provided, cannot
          be an empty string or whitespace.
        type: string
      termsVersion:
        description: >-
          A version identifier for the terms. If provided, cannot be an empty
          string or whitespace.
        type: string
    type: object
  TopBillerUsageDetailReport:
    description: Contains the contract for the 'Top Biller Usage Detail Report'.
    properties:
      addressCity:
        description: The city name
        type: string
      addressLine1:
        description: The first line of the address
        type: string
      addressLine2:
        description: The second line of the address
        type: string
      addressPostalCode:
        description: The postal code. Supports international postal codes as well
        type: string
      addressState:
        description: The two character abbreviation for the address state
        type: string
      billerConfirmationNumber:
        description: The biller confirmation number associated with the `Payment`
        type: string
      billgoTransactionId:
        description: The unique identifier of the `Payment`
        type: string
      businessName:
        description: The company name associated with the `Payment`
        type: string
      clientTransactionId:
        description: The partner_id of the associated `Payment`
        type: string
      paymentType:
        description: The rail type of the `Payment`
        type: string
      transactionAmount:
        description: The transaction amount of the `Payment`
        type: string
      transactionDate:
        description: The effective date of the `Payment`
        format: date
        type: string
      uniqueId:
        description: The unique identifier of the partner
        type: string
      userFirstName:
        description: The first name of the user associated with the `Payment`
        type: string
      userLastName:
        description: The last name of the user associated with the `Payment`
        type: string
    type: object
  TopBillersReport:
    description: Contains the contract for the 'Top Billers Report'.
    properties:
      aggregatePaymentAmount:
        description: The aggregated transaction amount for each biller
        format: double
        type: number
      merchantId:
        description: >-
          The merchant id from the top billers report list, aggregated on
          transaction amount 
        type: string
    type: object
  UpdateProfile:
    description: Provides the information required to update a user's `Profile`.
    properties:
      accountHolderName:
        $ref: '#/definitions/Name'
      addresses:
        description: The list of `Addresses` for the account holder.
        items:
          $ref: '#/definitions/UserAddressRequest'
        type: array
      clearDateOfBirth:
        description: Clears `dateOfBirth` when true.
        type: boolean
      clearPrimaryPhone:
        description: Clears `primaryPhone` when true.
        type: boolean
      clearSecondaryPhone:
        description: Clears `secondaryPhone` when true.
        type: boolean
      clearTertiaryPhone:
        description: Clears `tertiaryPhone` when true.
        type: boolean
      customerConsent:
        $ref: '#/definitions/CustomerConsentUpdate'
      dateOfBirth:
        description: The birth date of the user.
        example: '2020-06-04'
        format: date
        type: string
      dateOfBirthAsString:
        type: string
      emailAddress:
        description: The email address of the user.
        type: string
      emailLastUpdated:
        description: The timestamp when the `Email` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      emailVerifiedTimestamp:
        description: The timestamp in UTC when the `Email` was last verified.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        type: string
      enrollmentSource:
        description: How the user is engaged with the financial institution.
        enum:
          - ONLINE
          - MOBILE
          - BRANCH
          - PHONE_BANK
        type: string
      primaryPhone:
        $ref: '#/definitions/PhoneNumber'
      removeCustomerConsent:
        description: Removes Bill Pay consent and Virtual Card consent when true.
        type: boolean
      secondaryPhone:
        $ref: '#/definitions/PhoneNumber'
      taxId:
        pattern: '(^[0-9]{2}-[0-9]{7}$)|(^[0-9]{3}-[0-9]{2}-[0-9]{4}$)|(^$)'
        type: string
      tertiaryPhone:
        $ref: '#/definitions/PhoneNumber'
      type:
        description: An `AccountType`.
        enum:
          - PERSONAL
          - JOINT
          - BUSINESS
        example: BUSINESS
        type: string
      validUpdateProfile:
        type: boolean
    type: object
  UpdateResult:
    description: Represents the response to the update all `UserNotifications` request.
    properties:
      updateSuccessful:
        description: >-
          Indicates the success of the request to update all `UserNotifications`
          associated with the `User`.
        readOnly: true
        type: boolean
    required:
      - updateSuccessful
    type: object
  UpdateUserNotificationSet:
    description: >-
      Indicates to the application the set of `UserNotifications` that should be
      updated to the supplied notification state.
    properties:
      markAsDismissed:
        description: >-
          Indicates the `UserNotifications` should be marked as dismissed by the
          user.
        type: boolean
      markAsRead:
        description: >-
          Indicates the `UserNotifications` should be marked as read by the
          user.
        type: boolean
      markAsSeen:
        description: >-
          Indicates the `UserNotifications` should be marked as seen by the
          user.
        type: boolean
      notificationIds:
        description: The identifiers of the set of `UserNotifications` to update.
        items:
          description: The identifiers of the set of `UserNotifications` to update.
          type: string
        type: array
    required:
      - markAsDismissed
      - markAsRead
      - markAsSeen
      - notificationIds
    type: object
  UpdateUserNotifications:
    description: Indicates to the application the desired state of the `UserNotifications`.
    properties:
      markAsDismissed:
        description: >-
          Indicates the `UserNotification` should be marked as dismissed by the
          user.
        type: boolean
      markAsRead:
        description: Indicates the `UserNotification` should be marked as read by the user.
        type: boolean
      markAsSeen:
        description: Indicates the `UserNotification` should be marked as seen by the user.
        type: boolean
    required:
      - markAsDismissed
      - markAsRead
      - markAsSeen
    type: object
  Urls:
    description: >-
      A collection of URLs for the `Merchant` that can help the users provide
      the information in the `requiredDatums`.
    properties:
      createAccount:
        description: The URL to create an account at the `Merchant`.
        example: 'https://merchant.com/createAccount'
        readOnly: true
        type: string
      login:
        description: The URL to login to the `Merchant`.
        example: 'https://merchant.com/login'
        readOnly: true
        type: string
      resetPassword:
        description: The URL to reset your password at the `Merchant`.
        example: 'https://merchant.com/resetPassword'
        readOnly: true
        type: string
      website:
        description: The `Merchant` website URL.
        example: 'https://merchant.com'
        readOnly: true
        type: string
    readOnly: true
    type: object
  User:
    description: The `User` associated with a partner bank.
    properties:
      accountOrigin:
        description: Indicates if the `User` was `CONVERTED` from an another application.
        enum:
          - NEW
          - CONVERTED
        type: string
      created:
        description: The timestamp when the `User` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `User`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `User`.
        example: u_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      partnerUserId:
        description: >-
          The partner identifier for the `User` that allows the partner to
          access the BillGO `User` with their identifier.
        type: string
      payees:
        description: The list of `Payees` associated with the `User`.
        items:
          $ref: '#/definitions/Payee'
        readOnly: true
        type: array
      profile:
        $ref: '#/definitions/Profile'
      reasonForDisabling:
        type: string
      reasonForEnabling:
        type: string
      status:
        description: Indicates the status of the `User`.
        enum:
          - ACTIVE
          - LOCKED
          - ARCHIVED
          - DORMANT
        type: string
      test:
        description: A flag indicating that the `User` is a test `User`.
        type: boolean
        x-deprecated: true
      updated:
        description: The timestamp when the `User` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
    required:
      - accountOrigin
      - created
      - id
      - partnerUserId
      - profile
      - status
      - updated
    type: object
  UserAddress:
    description: Represents a user address within the API.
    properties:
      addressLine1:
        description: The first line of the address.
        example: 123 Main St.
        maxLength: 255
        minLength: 0
        type: string
      addressLine2:
        description: The second line of the address if applicable.
        example: PO Box 101
        maxLength: 255
        minLength: 0
        type: string
      addressLine3:
        description: The third line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      addressLine4:
        description: The fourth line of the address if applicable.
        maxLength: 255
        minLength: 0
        type: string
      city:
        description: The address city.
        example: New Brunswick
        maxLength: 255
        minLength: 0
        type: string
      countryCode:
        default: US
        description: >-
          The two or three character country code from ISO-3166. If the client
          is designated as OFX, three letter country code from ISO-3166 is
          provided.
        maxLength: 3
        minLength: 2
        type: string
      created:
        description: The timestamp when the `Address` was created.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      defaultAddress:
        description: Denotes whether this is the default address.
        type: boolean
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Address`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Address`
        example: u_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
      postalCode:
        description: >-
          The postal code for this address. Supports international postal codes
          as well.
        example: '10001'
        type: string
      province:
        description: The province for international addresses
        maxLength: 255
        minLength: 0
        type: string
      stateAbbreviation:
        description: >-
          The two character abbreviation for the address state. Not used in
          international addresses.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      status:
        default: ACTIVE
        description: Indicates the address status.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: Indicates the address type.
        enum:
          - MAILING
          - PHYSICAL
        example: MAILING
        type: string
      updated:
        description: The timestamp when the `Address` was last updated.
        example: '2019-10-14T16:21:00Z'
        format: date-time
        readOnly: true
        type: string
      verified:
        default: false
        description: Has the address been verified for KYC compliance.
        readOnly: true
        type: boolean
    required:
      - addressLine1
      - city
      - postalCode
      - type
    type: object
  UserAddressRequest:
    description: >-
      Provides the information required to add or update a `UserAddress`. If
      updating an address, the only fields that may be updated are the
      `defaultAddress`, and `status` fields. If no ID is provided, we will
      attempt to match to an existing address.
    properties:
      addressLine1:
        description: The first line of the address.
        example: 123 Main St.
        maxLength: 255
        minLength: 0
        type: string
      addressLine2:
        description: The second line of the address if applicable.
        example: PO Box 101
        maxLength: 255
        minLength: 0
        type: string
      addressLine3:
        description: >-
          The third line of the address if applicable. Only used in
          international addresses.
        maxLength: 255
        minLength: 0
        type: string
      addressLine4:
        description: >-
          The fourth line of the address if applicable. Only used in
          international addresses.
        maxLength: 255
        minLength: 0
        type: string
      city:
        description: The address city.
        example: New Brunswick
        maxLength: 255
        minLength: 0
        type: string
      countryCode:
        default: US
        description: The two character country code
        maxLength: 2
        minLength: 2
        type: string
      defaultAddress:
        description: Denotes whether this is the default address.
        type: boolean
      id:
        description: The id of the address to update.
        type: string
      postalCode:
        description: The postal code for this address.
        example: '10001'
        type: string
      province:
        description: >-
          The state or province name or abbreviation. Only used in international
          addresses.
        maxLength: 255
        minLength: 0
        type: string
      stateAbbreviation:
        description: The two character abbreviation for the address state.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      status:
        default: ACTIVE
        description: Indicates the address status.
        enum:
          - ACTIVE
          - ARCHIVED
        example: ACTIVE
        type: string
      type:
        description: Indicates the address type.
        enum:
          - MAILING
          - PHYSICAL
        example: MAILING
        type: string
    type: object
  UserNotification:
    description: >-
      Provides information that is of interest to the user of the partner bank
      account.
    properties:
      created:
        description: The timestamp of when the `Notification` was created.
        example: '2018-01-01T13:01:01Z'
        format: date-time
        readOnly: true
        type: string
      delivered:
        description: The timestamp of when the `Notification` was delivered.
        example: '2018-01-01T13:30:01Z'
        format: date-time
        readOnly: true
        type: string
      deliveryAttempts:
        description: The number of attempts made to deliver the `Notification`.
        example: 1
        format: int32
        readOnly: true
        type: integer
      deliveryStatus:
        description: Indicates the delivery status of the `Notification`.
        enum:
          - QUEUED
          - QUEUED_RETRY
          - DELIVERED
          - FAILED
        example: QUEUED
        readOnly: true
        type: string
      details:
        $ref: '#/definitions/UserNotificationDetails'
      externalId:
        description: 'The unique, shortened (12 chars) identifier for the `Notification`.'
        example: Qyh1JwU2t4JA
        readOnly: true
        type: string
      id:
        description: The unique identifier for the `Notification`.
        example: e_fbd40f3f63b14400824b945635a63d52
        readOnly: true
        type: string
      updated:
        description: The timestamp of when the `Notification` was updated.
        example: '2018-01-01T13:30:01Z'
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    required:
      - created
      - deliveryAttempts
      - deliveryStatus
      - id
      - updated
    type: object
  UserNotificationContent:
    description: >-
      Provides the content of the `UserNotification` to be displayed to the
      `User`.
    properties:
      content:
        description: Provides the optional `content` of the `UserNotification`.
        readOnly: true
        type: string
      subtitle:
        description: Provides the optional `subtitle` of the `UserNotification`.
        readOnly: true
        type: string
      title:
        description: Provides the `title` of the `UserNotification`.
        readOnly: true
        type: string
    required:
      - title
    type: object
  UserNotificationDetails:
    description: >-
      Provides information of interest to a user about the `Payees`,
      `PayeeAccounts`, and `Payments`.
    properties:
      content:
        $ref: '#/definitions/UserNotificationContent'
      extendedStatus:
        description: >-
          Indicates to the user that an action needs to be taken in response to
          the `Notification`.
        enum:
          - NONE
          - USER_INPUT_REQUIRED
          - AVAILABLE
          - NEAR_DUE
          - DUE
          - PAST_DUE
          - OUTAGE
          - DATUMS_NEEDED
          - PAYEE_ACCOUNT_DECLINED
          - PAYEE_ACTION_REQUIRED
          - PAYMENT_AMOUNT_DECLINED
          - IDENTIFICATION_CODE_REQUIRED
        type: string
      level:
        description: Indicates the importance of the `Notification`.
        enum:
          - NORMAL
          - WARNING
          - ERROR
        example: NORMAL
        readOnly: true
        type: string
      partnerUserId:
        description: >-
          The partner identifier for the `User` that allows the partner to
          access the BillGO `User` with their identifier.
        type: string
      payeeAccountIds:
        items:
          $ref: '#/definitions/PayeeAccountNotificationData'
        type: array
      referenceResource:
        type: string
      referenceResourceType:
        description: Indicates the type of the resource.
        enum:
          - USER
          - PAYEE
          - PAYEE_ACCOUNT
          - BILL
          - DOCUMENT
          - PAYMENT
          - SCHEDULE
          - USER_NOTIFICATION
          - USER_JWT
          - PKCE_JWT
        example: USER
        type: string
      referenceResourceUrl:
        type: string
      resourceType:
        description: Indicates the type of the resource.
        enum:
          - USER
          - PAYEE
          - PAYEE_ACCOUNT
          - BILL
          - DOCUMENT
          - PAYMENT
          - SCHEDULE
          - USER_NOTIFICATION
          - USER_JWT
          - PKCE_JWT
        example: USER
        readOnly: true
        type: string
      state:
        $ref: '#/definitions/UserNotificationState'
      status:
        description: >-
          Provides resource type status about the resource type event that
          triggered the `Notification`.
        type: string
      type:
        description: Indicates the resource type associated with the `Notification`.
        enum:
          - SYNC
          - PAYMENT
          - BILL
          - PAYEE
          - PAYEE_ACCOUNT
          - USER
        example: PAYMENT
        readOnly: true
        type: string
      userId:
        description: The unique identifier for the `User`.
        example: u_a60be9da-3316-42c1-a582-f41bea56470b
        readOnly: true
        type: string
    required:
      - content
      - level
      - partnerUserId
      - payeeAccountIds
      - resourceType
      - state
      - status
      - type
      - userId
    type: object
  UserNotificationState:
    description: Represents the state of the `UserNotification`.
    properties:
      dismissed:
        description: >-
          Indicates that the `UserNotification` has been dismissed by the user.
          Set the `dismissed` flag when the user indicates that the
          `UserNotification` has been dismissed.  For example, the
          `UserNotification` summary is presented to the user and the user
          presses the `Dismiss` button.  Once the `UserNotification` has been
          dismissed it is a good idea not to present the dismissed
          `UserNotification` to the user again unless the user requests to see
          the dismissed `UserNotifications`.
        readOnly: true
        type: boolean
      read:
        description: >-
          Indicates that the `UserNotification` has been read by the user. Set
          the `read` flag when the the `UserNotification's` `title`, `subtitle`,
          and `content` have been presented to the user. For example, the
          `UserNotification` content is displayed and the user presses the
          `Read` button. Once the `UserNotification` has been read by the user
          it is a good idea to visually indicate this state to the user.
        readOnly: true
        type: boolean
      seen:
        description: >-
          Indicates that the `UserNotification` has been seen by the user. Set
          the `seen` flag when the `UserNotification's` content has been
          presented to the user. For example, the `UserNotification's` content
          is presented to the user initially, but in subsequent sessions only
          the `UserNotification's` `title` is presented to the user.
        readOnly: true
        type: boolean
    required:
      - dismissed
      - read
      - seen
    type: object
  UserNotificationsFilter:
    description: Indicates to the application which `UserNotifications` to return.
    properties:
      afterTimestamp:
        description: >-
          Indicates that `UserNotifications` created after the supplied
          timestamp should be returned.
        format: date-time
        type: string
      dismissed:
        description: >-
          Indicates that `UserNotifications` matching dismissed should be
          returned.
        type: boolean
      read:
        description: Indicates that `UserNotifications` matching read should be returned.
        type: boolean
      seen:
        description: Indicates that `UserNotifications` matching seen should be returned.
        type: boolean
    type: object
  UserPage:
    description: >-
      A Pageable object for returning server-side pagination information for
      users.
    properties:
      data:
        description: A generic list of data to return with the pagination information.
        items:
          $ref: '#/definitions/User'
        readOnly: true
        type: array
      page:
        $ref: '#/definitions/PageInfo'
    required:
      - data
      - page
    type: object
  UserRequest:
    description: Represents the information required to create a partner bank `User`.
    properties:
      partnerUserId:
        description: >-
          The partner identifier for the `User` that allows the partner to
          access the BillGO `User` with their identifier.
        type: string
      profileInformation:
        $ref: '#/definitions/Profile'
      test:
        description: A flag indicating that the `User` is a test `User`.
        type: boolean
        x-deprecated: true
    required:
      - partnerUserId
      - profileInformation
    type: object
  UserUpdate:
    description: Represents the information to update a partner bank `User`.
    properties:
      isTest:
        description: A flag indicating that this is a test `User`.
        type: boolean
        x-deprecated: true
      profileInformation:
        $ref: '#/definitions/UpdateProfile'
      reasonForDisabling:
        type: string
      reasonForEnabling:
        type: string
      status:
        description: The new `UserStatus` to move the `User` to.
        enum:
          - ACTIVE
          - ARCHIVED
          - LOCKED
          - DORMANT
        type: string
    type: object
  ValidateAddress:
    description: An address to verify as USPS or International.
    properties:
      addressLine1:
        description: The first line of the address
        example: 123 Main St.
        type: string
      addressLine2:
        description: The second line of the address
        type: string
      addressLine3:
        description: The third line of the address. Only used in international addresses.
        type: string
      addressLine4:
        description: The fourth line of the address. Only used in international addresses.
        type: string
      addressee:
        description: The name of the person or company at this address.
        type: string
      city:
        description: The city name.
        type: string
      countryCode:
        description: The country code. Only used in international addresses.
        type: string
      postalCode:
        description: The postal code. Supports international postal codes as well.
        type: string
      province:
        description: >-
          The state or province name or abbreviation. Only used in international
          addresses.
        type: string
      stateAbbreviation:
        description: >-
          The two character abbreviation for the address state.  Not used in
          international addresses.
        example: NJ
        maxLength: 2
        minLength: 2
        type: string
      unitNumber:
        description: >-
          Apartment, suite, or office number. Not used in international
          addresses.
        example: '''Apt 52'' or simply ''52''; not ''Apt52''.'
        type: string
      urbanization:
        description: The neighborhood (only Puerto Rican addresses)
        type: string
    required:
      - addressLine1
      - city
    type: object
  WeeklySchedule:
    description: Determines when `Payments` are made for the associated `PayeeAccount`.
    properties:
      dayOfWeekToRecurOn:
        description: The days of the week on which a `Payment` is made.
        example: THURSDAY
        items:
          description: The days of the week on which a `Payment` is made.
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          example: THURSDAY
          type: string
        type: array
      repeatEveryXWeeks:
        description: >-
          The weekly frequency at which to make a `Payment`. If the user
          specifies the value 1 for `repeatEveryXWeeks`, the `Payment` is made
          every week.  If the user specifies 2 for `repeatEveryXWeeks` the
          `Payment` is made every other week.
        example: 2
        format: int32
        minimum: 1
        type: integer
    required:
      - dayOfWeekToRecurOn
      - repeatEveryXWeeks
    type: object
  payee_account_ofx_sync:
    description: The `PayeeAccount` associated with the sync request.
    properties:
      ACTCODE:
        description: The operation type.
        enum:
          - ADD
          - MOD
          - DEL
        example: ADD
        readOnly: true
        type: string
      ADDR1:
        description: The address line 1 of the `Payee Account`.
        example: 123 Main Street
        readOnly: true
        type: string
      ADDR2:
        description: The address line 2 of the `Payee Account`.
        example: Suite 100
        readOnly: true
        type: string
      ADDR3:
        description: The address line 3 of the `Payee Account`.
        example: Room 100
        readOnly: true
        type: string
      CITY:
        description: The city of the `Payee Account`.
        example: Denver
        readOnly: true
        type: string
      COUNTRY:
        description: The country code of the `Payee Account`.
        example: US
        readOnly: true
        type: string
      NAME:
        description: The `Payee Account`name.
        example: GEICO Insurance Company
        readOnly: true
        type: string
      PAYEEACCT:
        description: The `PayeeAccount` number.
        example: CEZAPD-123-456-789
        readOnly: true
        type: string
      PAYEEID:
        description: The `PayeeId`.
        example: payee_b496e068-837b-4e56-97ea-e1207649560e
        readOnly: true
        type: string
      PAYEELSTID:
        description: The `PayeeAccount` id.
        example: DDmx05Rhf7yc
        readOnly: true
        type: string
      PAYEENAME:
        description: The `Payee` name.
        example: Acme Insurance Co
        readOnly: true
        type: string
      PHONE:
        description: >-
          The telephone number of the `Payee Account`. Formatted to ITU-T E.164
          and E.123 (without '~') standards.
        example: US
        readOnly: true
        type: string
      POSTALCODE:
        description: The postal code of the `Payee Account`.
        example: '80205'
        readOnly: true
        type: string
      STATE:
        description: The state of the `Payee Account`.
        example: CO
        readOnly: true
        type: string
      TOKEN:
        description: The OFX token.
        example: B1F3AUSKBE
        readOnly: true
        type: string
      TRNUID:
        description: The OFX client-assigned transaction UID.
        example: '0'
        readOnly: true
        type: string
    readOnly: true
    required:
      - ACTCODE
      - ADDR1
      - ADDR2
      - ADDR3
      - CITY
      - COUNTRY
      - NAME
      - PAYEEACCT
      - PAYEEID
      - PAYEELSTID
      - PAYEENAME
      - PHONE
      - POSTALCODE
      - STATE
      - TOKEN
      - TRNUID
    type: object
    xml:
      name: payee_account_ofx_sync
  payee_accounts_ofx_sync:
    description: The results of a `PayeeAccount` ofx sync request.
    properties:
      payee_accounts_ofx_sync:
        description: The list of `PayeeAccount`.
        items:
          $ref: '#/definitions/payee_account_ofx_sync'
        readOnly: true
        type: array
        xml:
          name: payee_account_ofx_sync
    type: object
    xml:
      name: payee_accounts_ofx_sync
  payment_ofx_sync:
    description: The `Payment` associated with the sync request.
    properties:
      ACTCODE:
        description: The operation type.
        enum:
          - PAYEEDELRQ
          - PAYEEMODRQ
          - PAYEERQ
        example: PAYEERQ
        readOnly: true
        type: string
      ADDR1:
        description: The address line 1 of the `Payee Account`.
        example: 123 Main Street
        readOnly: true
        type: string
      ADDR2:
        description: The address line 2 of the `Payee Account`.
        example: Suite 100
        readOnly: true
        type: string
      ADDR3:
        description: The address line 3 of the `Payee Account`.
        example: Room 100
        readOnly: true
        type: string
      AMT:
        description: The amount paid.
        example: '100.0'
        readOnly: true
        type: string
      CANPEND:
        description: The cancel pending flag.
        enum:
          - 'Y'
          - 'N'
        example: 'Y'
        readOnly: true
        type: string
      CHECKMEMO:
        description: The `PaymentResult` check memo.
        example: Paid in full
        readOnly: true
        type: string
      CITY:
        description: The city of the `Payee Account`.
        example: Denver
        readOnly: true
        type: string
      COUNTRY:
        description: The country code of the `Payee Account`.
        example: US
        readOnly: true
        type: string
      DTSTATUS:
        description: The effective date.
        example: '2020-10-01'
        readOnly: true
        type: string
      FUNDINGACCT:
        description: The partner's `FundingAccountId`.
        example: 09ceb847-6c31-4916-b3c4-d91ef5c3f95a
        readOnly: true
        type: string
      MODPEND:
        description: The mod pending flag.
        enum:
          - 'Y'
          - 'N'
        example: 'Y'
        readOnly: true
        type: string
      NAME:
        description: The `Payee Account`name.
        example: GEICO Insurance Company
        readOnly: true
        type: string
      PAYEEACCT:
        description: The `PayeeAccount` number.
        example: CEZAPD-123-456-789
        readOnly: true
        type: string
      PAYEEID:
        description: The `PayeeId`.
        example: payee_b496e068-837b-4e56-97ea-e1207649560e
        readOnly: true
        type: string
      PAYEELSTID:
        description: The `PayeeAccount` id.
        example: DDmx05Rhf7yc
        readOnly: true
        type: string
      PAYEENAME:
        description: The `Payee` name.
        example: Acme Insurance Co
        readOnly: true
        type: string
      PHONE:
        description: >-
          The telephone number of the `Payee Account`. Formatted to ITU-T E.164
          and E.123 (without '~') standards.
        example: US
        readOnly: true
        type: string
      POSTALCODE:
        description: The postal code of the `Payee Account`.
        example: '80205'
        readOnly: true
        type: string
      RELEASEDT:
        description: The send-on or effective date.
        example: '2020-10-01'
        readOnly: true
        type: string
      SSTATUSCD:
        description: The status of the `Payment`.
        enum:
          - WILLPROCESSON
          - PROCESSEDON
          - NOFUNDSON
          - CANCELEDON
        example: WILLPROCESSON
        readOnly: true
        type: string
      STATE:
        description: The state of the `Payee Account`.
        example: CO
        readOnly: true
        type: string
      TOKEN:
        description: The OFX token.
        example: B1F3AUSKBE
        readOnly: true
        type: string
      TRACE:
        description: The `PaymentId`.
        example: pymt_00390448-2540-46c8-878f-b052e2fe4ca0
        readOnly: true
        type: string
      TRNUID:
        description: The OFX client-assigned transaction UID.
        example: '0'
        readOnly: true
        type: string
    readOnly: true
    required:
      - ACTCODE
      - ADDR1
      - ADDR2
      - ADDR3
      - AMT
      - CANPEND
      - CHECKMEMO
      - CITY
      - COUNTRY
      - DTSTATUS
      - FUNDINGACCT
      - MODPEND
      - NAME
      - PAYEEACCT
      - PAYEEID
      - PAYEELSTID
      - PAYEENAME
      - PHONE
      - POSTALCODE
      - RELEASEDT
      - SSTATUSCD
      - STATE
      - TOKEN
      - TRACE
      - TRNUID
    type: object
    xml:
      name: payment_ofx_sync
  payments_ofx_sync:
    description: The results of a `Payment` ofx sync request.
    properties:
      payments_ofx_sync:
        description: The list of `Payment`.
        items:
          $ref: '#/definitions/payment_ofx_sync'
        readOnly: true
        type: array
        xml:
          name: payment_ofx_sync
    type: object
    xml:
      name: payments_ofx_sync
  recurring_schedule_ofx_sync:
    description: The `RecurringSchedule` associated with the sync request.
    properties:
      ACTCODE:
        description: The operation type.
        enum:
          - ADD
          - MOD
          - DEL
        example: PAYEERQ
        readOnly: true
        type: string
      ADDR1:
        description: The address line 1 of the `Payee Account`.
        example: 123 Main Street
        readOnly: true
        type: string
      ADDR2:
        description: The address line 2 of the `Payee Account`.
        example: Suite 100
        readOnly: true
        type: string
      ADDR3:
        description: The address line 3 of the `Payee Account`.
        example: Room 100
        readOnly: true
        type: string
      AMT:
        description: The amount to be paid for each installment.
        example: '100.0'
        readOnly: true
        type: string
      CITY:
        description: The city of the `Payee Account`.
        example: Denver
        readOnly: true
        type: string
      COUNTRY:
        description: The country code of the `Payee Account`.
        example: US
        readOnly: true
        type: string
      FREQ:
        description: The frequency of the payment.
        enum:
          - WEEKLY
          - BIWEEKLY
          - TWICEMONTHLY
          - MONTHLY
          - FOURWEEKS
          - BIMONTHLY
          - QUARTERLY
          - SEMIANNUALLY
          - ANNUALLY
        example: WEEKLY
        readOnly: true
        type: string
      FUNDINGACCT:
        description: The partner's `FundingAccount` id.
        example: 09ceb847-6c31-4916-b3c4-d91ef5c3f95a
        readOnly: true
        type: string
      NAME:
        description: The `Payee Account`name.
        example: GEICO Insurance Company
        readOnly: true
        type: string
      NEXTPMTDT:
        description: The next payment date.
        example: '2020-10-01'
        readOnly: true
        type: string
      NUMINSTS:
        description: The number of installments.
        example: '12'
        readOnly: true
        type: string
      PAYEEACCT:
        description: The `PayeeAccount` number.
        example: CEZAPD-123-456-789
        readOnly: true
        type: string
      PAYEEID:
        description: The `PayeeId`.
        example: payee_b496e068-837b-4e56-97ea-e1207649560e
        readOnly: true
        type: string
      PAYEELSTID:
        description: The partner's `PayeeAccount` id.
        example: DDmx05Rhf7yc
        readOnly: true
        type: string
      PAYEENAME:
        description: The `Payee` name.
        example: Acme Insurance Co
        readOnly: true
        type: string
      PHONE:
        description: >-
          The telephone number of the `Payee Account`. Formatted to ITU-T E.164
          and E.123 (without '~') standards.
        example: US
        readOnly: true
        type: string
      POSTALCODE:
        description: The postal code of the `Payee Account`.
        example: '80205'
        readOnly: true
        type: string
      RECPMTID:
        description: The `RecurringScheduleId`.
        example: recsched_021902da-90a5-4f68-bf64-a557e291b17b
        readOnly: true
        type: string
      STATE:
        description: The state of the `Payee Account`.
        example: CO
        readOnly: true
        type: string
      TOKEN:
        description: The OFX token.
        example: B1F3AUSKBE
        readOnly: true
        type: string
      TRNUID:
        description: The OFX client-assigned transaction UID.
        example: '0'
        readOnly: true
        type: string
    readOnly: true
    required:
      - ACTCODE
      - ADDR1
      - ADDR2
      - ADDR3
      - AMT
      - CITY
      - COUNTRY
      - FREQ
      - FUNDINGACCT
      - NAME
      - NEXTPMTDT
      - NUMINSTS
      - PAYEEACCT
      - PAYEEID
      - PAYEELSTID
      - PAYEENAME
      - PHONE
      - POSTALCODE
      - RECPMTID
      - STATE
      - TOKEN
      - TRNUID
    type: object
    xml:
      name: recurring_schedule_ofx_sync
  recurring_schedules_ofx_sync:
    description: The results of a `RecurringSchedule` ofx sync request.
    properties:
      recurring_schedules_ofx_sync:
        description: The list of `RecurringSchedule`s.
        items:
          $ref: '#/definitions/recurring_schedule_ofx_sync'
        readOnly: true
        type: array
        xml:
          name: recurring_schedule_ofx_sync
    type: object
    xml:
      name: recurring_schedules_ofx_sync
host: localhost
info:
  description: BillGO Bill Pay API allows you to access the full BillGO power in bill pay.
  title: BillGO Bill Pay API
  version: '20220302'
  x-logo:
    altText: BillGO logo
    backgroundColor: '#101010'
    url: 'https://api-docs.billgo-dev.com/assets/BillGOlogo_white.png'
paths:
  /access:
    get:
      consumes:
        - application/json
      description: >-
        Returns data about all API calls made to the Core APIs for a particular
        user on a date
      operationId: Access Data_1
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ApiAccessRequest'
      produces:
        - application/json
      responses:
        '200':
          description: List of API Access Data
          schema:
            $ref: '#/definitions/ApiAccessPage'
        '404':
          description: API Access Data not found for that User ID and Date
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Access Data
  '/access/{accessId}':
    get:
      description: Returns data about a particular API call made to the Core APIs
      operationId: Access Data
      parameters:
        - description: The identifier of the Access.
          in: path
          name: accessId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Api Access Data
          schema:
            $ref: '#/definitions/ApiAccessDto'
        '404':
          description: Api Access not found for that ID
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Access Data
  /addressvalidation:
    post:
      consumes:
        - application/json
      description: >-
        Validates an Address and makes suggestions for verified USPS &
        International addresses.
      operationId: Validate Address
      parameters:
        - description: The information needed to validate the address.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddressValidationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Address suggestions.
          schema:
            $ref: '#/definitions/AddressValidation'
        '422':
          description: Invalid `AddressValidationRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Address Validation
  '/admin/users/{userId}/payments/{paymentId}/disputes':
    get:
      description: >-
        Returns a `PaymentDispute` associated with the `Payment` for the
        supplied `userId` and `paymentId`.
      operationId: Get disputes
      parameters:
        - description: The identifier of the `User` that has the `Payment`.
          in: path
          name: userId
          required: true
          type: string
        - description: The ID of the payment to get a dispute for.
          in: path
          name: paymentId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The requested `PaymentDispute`.
          schema:
            $ref: '#/definitions/PaymentDispute'
        '404':
          description: No dispute was found for the supplied `userId` and `paymentId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - 'Admin, Disputes'
    post:
      consumes:
        - application/json
      description: Creates a dispute associated with a payment
      operationId: Create dispute
      parameters:
        - description: The identifier of the `User` that has the `Payment`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payment` to dispute.
          in: path
          name: paymentId
          required: true
          type: string
        - description: The information needed to create the `PaymentDispute`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentDispute'
      produces:
        - application/json
      responses:
        '201':
          schema:
            $ref: '#/definitions/PaymentDispute'
        '404':
          description: No `Payment` found for the supplied `paymentId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid request body.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - 'Admin, Disputes'
  '/admin/users/{userId}/payments/{paymentId}/disputes/{disputeId}':
    get:
      description: >-
        Returns a `PaymentDispute` for the given `userId`, `paymentId`, and
        `disputeId`.
      operationId: Get dispute
      parameters:
        - description: The identifier of the `User` that has the `Payment`.
          in: path
          name: userId
          required: true
          type: string
        - description: The ID of the payment to get a dispute for.
          in: path
          name: paymentId
          required: true
          type: string
        - description: The ID of the dispute to retrieve.
          in: path
          name: disputeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The requested dispute.
        '404':
          description: >-
            No dispute was found for the supplied `userId`, `paymentId`, and
            `disputeId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - 'Admin, Disputes'
    patch:
      consumes:
        - application/json
      description: Updates a dispute associated with a payment
      operationId: Update dispute
      parameters:
        - description: The identifier of the `User` that has the `Payment`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payment` associated with the dispute.
          in: path
          name: paymentId
          required: true
          type: string
        - description: The identifier of the `PaymentDispute` to be updated.
          in: path
          name: disputeId
          required: true
          type: string
        - description: The information needed to update the `PaymentDispute`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentDisputeUpdate'
      produces:
        - application/json
      responses:
        '200':
          schema:
            $ref: '#/definitions/PaymentDispute'
        '404':
          description: No `Payment` found for the supplied `paymentId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid request body.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - 'Admin, Disputes'
  /categories:
    get:
      description: Get the list of `Merchant` categories.
      operationId: Categories
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: List of `Merchant` categories
          schema:
            $ref: '#/definitions/MerchantCategories'
      tags:
        - Merchant Directory
  '/categories/{category}/logo':
    get:
      description: Get the logo for a merchant category.
      operationId: Category Logo
      parameters:
        - description: >-
            The category that is used to classify a `Merchant` or `PayeeAccount`
            in the BillGO network.
          enum:
            - AUTOLOAN
            - BANK
            - CABLE
            - CLUB
            - COLLECTIONS
            - CREDIT
            - ELECTRIC
            - GAS
            - GIFT
            - HOME
            - INSURANCE
            - INTERNET
            - LICENSE
            - LOAN
            - MEDIA
            - MEDICAL
            - MORTGAGE
            - PARKING
            - PHONE
            - PREPAID
            - RENT
            - SECURITY
            - STORAGE
            - STUDENTLOAN
            - UTILITY
            - WASTE
            - WATER
            - OTHER
          in: path
          name: category
          required: true
          type: string
        - description: The category image type.
          enum:
            - DEFAULT
            - ICON
          in: query
          name: imageType
          required: false
          type: string
      produces:
        - image/png
      responses:
        '200':
          description: Logo for the requested merchant category.
          schema:
            format: binary
            type: string
        '400':
          description: Invalid category supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Category logo not found for the supplied category.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Merchant Directory
  /customer-consent:
    get:
      description: Returns customer consent terms that match the provided query.
      operationId: Customer Consent Terms
      parameters:
        - description: The terms version to return. Use `LATEST` to return the most recent
          in: query
          name: version
          required: false
          type: string
        - description: The terms url to return.
          in: query
          name: url
          required: false
          type: string
        - description: The terms type to return.
          enum:
            - BILLPAY
            - VIRTUAL_CARD
          in: query
          name: type
          required: false
          type: string
        - default: 100
          description: The number of terms to return.
          format: int32
          in: query
          minimum: 1
          name: limit
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: List of matching terms
          schema:
            $ref: '#/definitions/CustomerConsentTermsResponse'
        '400':
          description: Invalid request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
  /customer-consent/terms:
    post:
      consumes:
        - application/json
      description: >-
        Creates a version of the terms of the specified type that the customer
        must accept to enable bill payment handling and optional use of virtual
        cards.
      operationId: Create customer consent terms
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TermsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully stored the terms
          schema:
            $ref: '#/definitions/Terms'
        '400':
          description: Invalid request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
  '/customer-consent/terms/{termsId}':
    patch:
      consumes:
        - application/json
      description: Updates existing terms and allows existing terms to be marked invalid.
      operationId: Update customer consent terms
      parameters:
        - description: The identifier of the `Terms`.
          in: path
          name: termsId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TermsUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated the terms
          schema:
            $ref: '#/definitions/Terms'
        '400':
          description: Invalid request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
  /merchants:
    get:
      description: Get the list of `MerchantSuggestions` matching the queryPrefix.
      operationId: Search
      parameters:
        - description: The prefix search string.
          in: query
          maxLength: 30
          minLength: 1
          name: queryPrefix
          required: true
          type: string
        - description: The optional zip code to filter on.
          in: query
          name: zipCode
          required: false
          type: string
        - description: The optional account number to filter on.
          in: query
          name: accountNumber
          required: false
          type: string
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `Merchant` suggestions to return.
          format: int32
          in: query
          maximum: 30
          minimum: 1
          name: limit
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: List of `MerchantSuggestion`.
          schema:
            $ref: '#/definitions/MerchantSuggestions'
        '400':
          description: 'Invalid offset, limit, or queryPrefix supplied.'
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Merchant Directory
  /merchants/suggestions:
    get:
      description: Get `MerchantSuggestions` for a user.
      operationId: Merchant Suggestions
      parameters:
        - description: The identifier of the user to customize these results for.
          in: query
          name: userId
          required: false
          type: string
          x-example: u_c1388fc6f2e64306bf937c0c5b0761b6
        - description: >-
            The category that is used to classify a `Merchant` or `PayeeAccount`
            in the BillGO network.
          enum:
            - AUTOLOAN
            - BANK
            - CABLE
            - CLUB
            - COLLECTIONS
            - CREDIT
            - ELECTRIC
            - GAS
            - GIFT
            - HOME
            - INSURANCE
            - INTERNET
            - LICENSE
            - LOAN
            - MEDIA
            - MEDICAL
            - MORTGAGE
            - PARKING
            - PHONE
            - PREPAID
            - RENT
            - SECURITY
            - STORAGE
            - STUDENTLOAN
            - UTILITY
            - WASTE
            - WATER
            - OTHER
          in: query
          name: merchantCategory
          required: false
          type: string
        - description: The zipcode of the region to suggest merchants for.
          in: query
          name: zipCode
          required: false
          type: string
        - description: >-
            The required minimum confidence score the of the merchants returned.
            (0.01-1.00)
          format: double
          in: query
          maximum: 1
          minimum: 0
          name: minimumConfidenceScore
          required: false
          type: number
        - default: 30
          description: The maximum number of `Merchant` suggestions to return.
          format: int32
          in: query
          maximum: 30
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: List of `MerchantSuggestion`.
          schema:
            $ref: '#/definitions/MerchantSuggestions'
        '400':
          description: One or more invalid query parameters were supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Merchant Directory
  '/merchants/{merchantId}':
    get:
      description: Get a `Merchant`.
      operationId: Merchant
      parameters:
        - description: The `Merchant` identifier.
          in: path
          name: merchantId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The requested `Merchant`.
          schema:
            $ref: '#/definitions/Merchant'
        '400':
          description: Missing or blank merchantId was supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: '`Merchant` was not found for the supplied merchantId.'
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Merchant Directory
  '/merchants/{merchantId}/logo':
    get:
      description: >-
        Retrieves a merchant logo. For valid merchant IDs, this will return a
        32-bit PNG in the dimensions of 102 pixels wide by 64 pixels tall. Even
        for merchants that do not have an associated logo available, a generic
        biller category image is returned.


        Logos can be cached indefinitely, however, it is possible for them to
        change over time. In practice, a new logo should be fetched whenever the
        `updated` property of a `Merchant` changes.


        Rather than return a JSON payload containing an encoded version of the
        logo, this API returns the image as content type `image/png`.


        If a query string is provided in the URL, with query parameter
        `imageType` with value `accent`, this API returns a larger accent 32-bit
        PNG with a transparent background. This accent logo should only be used
        on top of a canvas colored with the value found in the `PrimaryColor`
        property of the merchant style. The maximum dimensions of this logo are
        300 pixels wide by 150 pixels tall. This accent logo should always be
        centered both horizontally and vertically within a 300 pixel by 150
        pixel canvas. Showing this larger accent logo on top of the
        `PrimaryColor` background is useful on a full-screen overlay in certain
        scenarios where the user's attention is required, like adding a new
        biller. Only the top 250 billers have an accent logo configured. You may
        also provide 'accentOnWhite' and 'icon' as values for imageType.
      operationId: Logo
      parameters:
        - description: The `Merchant` identifier.
          in: path
          name: merchantId
          required: true
          type: string
        - default: DEFAULT
          description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist. Defaults true.
          in: query
          name: fallback
          required: false
          type: boolean
        - description: >-
            Resizes the image width to the requested width if the requested
            width is smaller than the original image size.
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Resizes the image height to the requested height if the requested
            height is smaller  than the original image size.
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: >-
            Resizes to match the images original aspect ratio if it does not
            match the bound dimension aspect ratio requested. Defaults to true.
            If set to false, the image may stretch to match both bounds. If set
            to true, the image may resize a dimension smaller than the requested
            bound
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
      produces:
        - image/png
      responses:
        '200':
          description: The `Merchant`s logo.
          schema:
            format: binary
            type: string
        '400':
          description: Invalid merchantId or logo imageType.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Merchant logo not found for supplied merchantId and logo imageType.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Merchant Directory
  /reports/auditLog:
    get:
      description: Returns Audit Log report
      operationId: Audit Log
      parameters:
        - default: ''
          description: The identifier of the user associated with the audit Log report
          in: query
          name: userId
          pattern: '(^$|[0-9a-zA-Z_@\.-]+)'
          required: false
          type: string
        - default: ''
          in: query
          name: adminUser
          pattern: '(^$|[0-9a-zA-Z_@\.-]+)'
          required: false
          type: string
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Audit Log
          schema:
            $ref: '#/definitions/AuditLogReport'
        '404':
          description: Audit Log report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/billpaysummary:
    get:
      description: Returns Bill Pay Summary report
      operationId: Bill Pay Summary
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Bill Pay Summary
          schema:
            $ref: '#/definitions/BillPaySummaryReportDto'
        '404':
          description: Bill Pay Summary report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/canceledpayments:
    get:
      description: Returns Payments Canceled report
      operationId: Payments Canceled
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Payments Canceled
          schema:
            $ref: '#/definitions/PaymentsCanceledReportDto'
        '404':
          description: Payments Canceled report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/paymentdetail:
    get:
      description: Returns Payment Detail report
      operationId: Payment Detail
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Payment Detail
          schema:
            $ref: '#/definitions/PaymentDetailReportDto'
        '404':
          description: Payment Detail report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/paymentrejects:
    get:
      description: Returns Payment Rejects report
      operationId: Payment Rejects
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Payment Rejects
          schema:
            $ref: '#/definitions/PaymentRejectsReportDto'
        '404':
          description: Payment Rejects report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/paymentstatus:
    get:
      description: Payment Status Report
      operationId: Payment status
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `Payment`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: sendOnDate
          required: false
          type: object
        - description: 'The status, inclusive, of the report to run.'
          in: query
          name: status
          required: false
          type: string
        - description: 'The columns inclusive, of the report to run.'
          in: query
          name: columns
          required: false
          type: string
      produces:
        - application/json
        - text/csv
      responses:
        '200':
          description: Payment Status
          schema:
            $ref: '#/definitions/PaymentStatusReportDto'
        '404':
          description: Payment status report was not successfully retrieved
          schema:
            $ref: '#/definitions/PaymentStatusReportDto'
      tags:
        - Reports
  /reports/paymentsummary:
    get:
      description: Payment Summary Report
      operationId: Payment summary
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `Payment`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: sendOnDate
          required: false
          type: object
        - description: 'The status, inclusive, of the report to run.'
          in: query
          name: status
          required: false
          type: string
        - description: 'The columns inclusive, of the report to run.'
          in: query
          name: columns
          required: false
          type: string
      produces:
        - application/json
        - text/csv
      responses:
        '200':
          description: Payment Summary
          schema:
            $ref: '#/definitions/PaymentStatusSummaryReportDto'
        '404':
          description: Payment summary report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/returns:
    get:
      description: Returns the 'Returns Report'
      operationId: Returns
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
        - text/csv
      responses:
        '200':
          description: Returns
          schema:
            $ref: '#/definitions/ReturnsReportDto'
        '404':
          description: Returns report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/top20billers:
    get:
      description: Returns Top Billers  report
      operationId: Top Billers
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
        - text/csv
      responses:
        '200':
          description: Top Billers
          schema:
            $ref: '#/definitions/TopBillersReport'
        '404':
          description: Top Billers report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /reports/topbillersusagedetail:
    get:
      description: Returns Top Biller Usage Detail report
      operationId: Top Biller Usage Detail
      parameters:
        - description: The identifier of the biller associated with the payee account
          in: query
          name: merchantId
          pattern: '^[A-Za-z0-9_]+$'
          required: true
          type: string
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - aggregatePaymentAmount
            - creationDate
            - transactionDate
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: startDate
          required: false
          type: object
        - description: 'The end date, exclusive, of the report to run.'
          in: query
          name: endDate
          required: false
          type: object
        - default: DEFAULT
          description: The desired format of the response.
          enum:
            - CSV
            - DEFAULT
          in: query
          name: format
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Top Biller Usage Detail
          schema:
            $ref: '#/definitions/TopBillerUsageDetailReport'
        '404':
          description: Top Biller Usage Detail report was not successfully retrieved
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Reports
  /users:
    get:
      description: Returns `Users` associated with a partner account.
      operationId: Users
      parameters:
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `User`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Indicates the status of the `User`.
          enum:
            - ACTIVE
            - LOCKED
            - ARCHIVED
            - DORMANT
          in: query
          name: status
          required: false
          type: string
        - description: Fields that can be searched or use to sort searches for `User`s.
          enum:
            - NAME
            - BUSINESS_NAME
            - DOB
            - EMAIL
            - PHONE
            - TAX_ID
            - ID
            - PARTNER_USER_ID
            - CREATED
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: Fields that can be searched or use to sort searches for `User`s.
          enum:
            - NAME
            - BUSINESS_NAME
            - DOB
            - EMAIL
            - PHONE
            - TAX_ID
            - ID
            - PARTNER_USER_ID
            - CREATED
          in: query
          name: searchField
          required: false
          type: string
        - description: Optional value to search for if `searchField` is present
          in: query
          maxLength: 255
          minLength: 0
          name: searchValue
          required: false
          type: string
        - default: 1
          description: >-
            The `depth` of the response objects to be returned. A `depth` of `1`
            will only return the top level `User` objects without Payee data
          format: int32
          in: query
          name: depth
          required: false
          type: integer
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: >-
            `Users` up to the supplied `limit` that matched the supplied
            `status` are returned. If there are more `Users` than the specified
            `limit`, the `offset` can be adjusted to return the additional
            `Users`.
          schema:
            $ref: '#/definitions/UserPage'
        '400':
          description: 'Invalid `offset`, `limit`, or `status` supplied.'
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
    post:
      consumes:
        - application/json
      description: Adds a `User` associated with a partner.
      operationId: Add User
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Returns the added `User` with the `Users` `status` set to `ACTIVE`.
          schema:
            $ref: '#/definitions/User'
        '422':
          description: Invalid `UserRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
  '/users/{userId}':
    delete:
      description: >-
        Set's the `User` status to `ARCHIVED`, archived users should not be
        displayed to the user.
      operationId: Remove User
      parameters:
        - description: The identifier of the `User` to remove.
          in: path
          name: userId
          pattern: '([0-9a-zA-Z_@\.-]+)'
          required: true
          type: string
        - description: The reason for removing the `User`.
          in: query
          name: reasonForDisabling
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The deleted `User`.
          schema:
            $ref: '#/definitions/User'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `userId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
    get:
      description: >-
        Returns the `User` associated with the provided `userId`. The supplied
        `userId` can be either the application's `userId` or the partner's
        `partnerUserId`.
      operationId: User
      parameters:
        - description: The identifier of the `User` to retrieve.
          in: path
          name: userId
          pattern: '([0-9a-zA-Z_@\.-]+)'
          required: true
          type: string
        - default: 1
          deprecated: true
          description: >-
            The `depth` of the response object to be returned. The default
            `depth` of `1` or `0` returns the top level `User` object without
            Payee data. Depth `2` or greater will return payees
          format: int32
          in: query
          name: depth
          required: false
          type: integer
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: >-
            The `User` for the supplied application `userId` or partner
            `partnerUserId` is returned.
          schema:
            $ref: '#/definitions/User'
        '404':
          description: The `User` for the supplied `userId` was not found.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
    patch:
      consumes:
        - application/json
      description: >-
        Updates the `status`, `profileInformation`, or `isTest` properties of
        the `User` for the supplied `userId`.  The supplied `userId` can be
        either the application's `userId` or the partner's `partnerUserId`. The
        `Update User` operation can be used to `ARCHIVE` the `User` or mark the
        `User` `DORMANT`.
      operationId: Update User
      parameters:
        - description: The identifier of the `User` to update.
          in: path
          name: userId
          pattern: '([0-9a-zA-Z_@\.-]+)'
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the `User` for the supplied `userId` with the supplied
            properties updated.
          schema:
            $ref: '#/definitions/User'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `userId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: >-
            Unable to make the update because other resources reference the user
            that is being updated. For example, a user's address can't be
            archived if a `Payee`'s payerAddress references it.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `UserUpdate` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Users
  '/users/{userId}/bills':
    get:
      description: Returns the `Bills` associated with the `User's` `PayeeAccount`."
      operationId: Bills
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the account for the associated `Bills`.
          in: query
          name: accountId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of the `Bills` associated with the `User`'s `PayeeAccount`.
          schema:
            $ref: '#/definitions/BillList'
        '400':
          description: The `accountId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `Bills` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Bills
  '/users/{userId}/bills/{billId}':
    get:
      description: Returns the `Bill` for the supplied `userId` and `billId`.
      operationId: Bill
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Bill`.
          in: path
          name: billId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the requested `Bill`.
          schema:
            $ref: '#/definitions/Bill'
        '400':
          description: The `billId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `Bills` found for the supplied `userId` and `billId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Bills
  '/users/{userId}/customerfundingaccounts':
    get:
      description: >-
        Returns the list of `CustomerFundingAccount`s for the `User` with the
        supplied user identifier.
      operationId: Customer Funding Account List
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `FundingAccount`s to return.
          format: int32
          in: query
          maximum: 100
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - status
            - type
            - nickname
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - default: false
          description: return the entire card number.
          in: query
          name: returnEntireCardNumber
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the list of `CustomerFundingAccount`s for the `User` with
            the supplied user identifier.
          schema:
            $ref: '#/definitions/CustomerFundingAccountPage'
        '404':
          description: The `userId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Customer Funding Accounts
    post:
      consumes:
        - application/json
      description: >-
        Creates and associates a `CustomerFundingAccount` with the user's
        `PayeeAccount`.
      operationId: Add Customer Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The information needed to create the `CustomerFundingAccount`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerFundingAccountRequest'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            In the case the request parameters match an existing
            `CustomerFundingAccount`, the existing `CustomerFundingAccount` will
            be returned.
          schema:
            $ref: '#/definitions/CustomerFundingAccount'
        '201':
          description: >-
            Returned if a new `CustomerFundingAccount` is created and added to
            the db.
          schema:
            $ref: '#/definitions/CustomerFundingAccount'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `CustomerFundingAccount` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Customer Funding Accounts
  '/users/{userId}/customerfundingaccounts/{accountId}':
    delete:
      description: >-
        Indicates that an existing `CustomerFundingAccount` was marked as
        deleted.
      operationId: Remove Customer Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `CustomerFundingAccount` to delete.
          in: path
          name: accountId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Indicates the specified `CustomerFundingAccount` has been archived.
        '404':
          description: >-
            The `CustomerFundingAccount` was not found for the supplied
            `userId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `accountId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Customer Funding Accounts
    get:
      description: >-
        Returns the `CustomerFundingAccount` for the supplied `userId` and
        `accountId`.
      operationId: Customer Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `CustomerFundingAccount`.
          in: path
          name: accountId
          required: true
          type: string
        - default: false
          description: return the entire card number.
          in: query
          name: returnEntireCardNumber
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns the `CustomerFundingAccount` for the supplied `userId` and
            `accountId`.
          schema:
            $ref: '#/definitions/CustomerFundingAccount'
        '404':
          description: >-
            No `CustomerFundingAccount` found for the supplied `userId` and
            `accountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Customer Funding Accounts
    patch:
      consumes:
        - application/json
      description: >-
        Updates the `CustomerFundingAccount` for the supplied `userId` and
        `accountId` and returns the updated `CustomerFundingAccount`.
      operationId: Update Customer Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `CustomerFundingAccount`.
          in: path
          name: accountId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerFundingAccountUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Updates the `CustomerFundingAccount` for the supplied `userId` and
            `accountId` and returns the updated `CustomerFundingAccount`.
          schema:
            $ref: '#/definitions/CustomerFundingAccount'
        '404':
          description: >-
            No `CustomerFundingAccount` found for the supplied `userId` and
            `accountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Customer Funding Accounts
  '/users/{userId}/customerfundingaccounts/{accountId}/addpartnerid/{partnerId}':
    patch:
      description: >-
        Sets the `partnerId` of the `CustomerFundingAccount` matching the
        supplied `userId` and `accountId`. NOTE: the `partnerId` is idempotent
        and cannot be changed once set. This operation will return an error if
        the `CustomerFundingAccount` already has a `partnerId` that does not
        match the supplied one.
      operationId: Add Partner Id
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `CustomerFundingAccount`.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `partnerId` to be set.
          in: path
          name: partnerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Details of the updated `CustomerFundingAccount`.
          schema:
            $ref: '#/definitions/CustomerFundingAccount'
        '208':
          description: >-
            The `partnerId` of the `CustomerFundingAccount` has already been set
            and matches the provided `partnerId`. Returns the
            `CustomerFundingAccount`.
          schema:
            $ref: '#/definitions/CustomerFundingAccount'
        '400':
          description: >-
            The `partnerId` of the `CustomerFundingAccount` has already been set
            and does not match the provided `partnerId`.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            No `CustomerFundingAccount` found for the supplied `userId` and
            `accountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Customer Funding Accounts
  '/users/{userId}/documents':
    get:
      description: Returns the `Documents` associated with the `User's` `PayeeAccount`.
      operationId: Documents
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `PayeeAccount`.
          in: query
          name: accountId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of requested `Documents`.
          schema:
            $ref: '#/definitions/DocumentList'
        '400':
          description: The `accountId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `Documents` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Documents
  '/users/{userId}/documents/{documentId}':
    get:
      description: Returns the `Document` for the supplied `userId` and `documentId`.
      operationId: Document
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Document`.
          in: path
          name: documentId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Returns the requested `Document`.
          schema:
            $ref: '#/definitions/Document'
        '404':
          description: No `Document` found for the supplied `userId` and `documentId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Documents
  '/users/{userId}/documents/{documentId}/download':
    get:
      description: Download the `Document`.
      operationId: Download Document
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Document`.
          in: path
          name: documentId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The requested `Document`.
          schema:
            $ref: '#/definitions/DocumentLink'
        '404':
          description: No `Document` found for the supplied `documentId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Documents
  '/users/{userId}/fundingaccounts':
    get:
      description: >-
        Returns the list of `FundingAccounts` for the `User` with the supplied
        user identifier.
      operationId: Funding Accounts
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `FundingAccount`s to return.
          format: int32
          in: query
          maximum: 100
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - status
            - type
            - nickname
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - default: false
          description: Return the entire bank account number.
          in: query
          name: returnEntireBankAccountNumber
          required: false
          type: boolean
        - default: false
          description: Return the entire external bank account number.
          in: query
          name: returnEntireExternalBankAccountNumber
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: List of the `User`'s `FundingAccounts`.
          schema:
            $ref: '#/definitions/FundingAccountPage'
        '404':
          description: The `userId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Funding Accounts
    post:
      consumes:
        - application/json
      description: >-
        Creates and associates a `FundingAccount` with the user's
        `PayeeAccount`.
      operationId: Add Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The information needed to create the `FundingAccount`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FundingAccountRequest'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            In the case the request parameters match an existing
            `FundingAccount`, the existing `FundingAccount` will be returned.
          schema:
            $ref: '#/definitions/FundingAccount'
        '201':
          description: Returned if a new `FundingAccount` is created and added to the db.
          schema:
            $ref: '#/definitions/FundingAccount'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `FundingAccountRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Funding Accounts
  '/users/{userId}/fundingaccounts/{fundingAccountId}':
    delete:
      description: >-
        Indicates that an existing `FundingAccount` was marked as deleted and
        replaces all usages of the deleted ` FundingAccount` with the
        replacement `FundingAccount`.
      operationId: Remove Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `FundingAccount` to delete.
          in: path
          name: fundingAccountId
          required: true
          type: string
        - description: >-
            The identifier of the `FundingAccount` to set all pending `Payments`
            and `RecurringSchedules` to.
          in: query
          name: replacementFundingAccountId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: >-
            Indicates the specified `FundingAccount` has been removed. If
            specified `FundingAccount` is a default `FundingAccount` the
            replacement `FundingAccount` is now designated as the default
            `FundingAccount`.
        '400':
          description: The `replacementFundingAccountId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            `User` or replacement `FundingAccount` was not found for the
            supplied `userId` or `replacementFundingAccountId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `fundingAccountId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Funding Accounts
    get:
      description: >-
        Returns the `FundingAccount` for the supplied `userId` and
        `fundingAccountId`.
      operationId: Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `FundingAccount`.
          in: path
          name: fundingAccountId
          required: true
          type: string
        - default: false
          description: Return the entire bank account number.
          in: query
          name: returnEntireBankAccountNumber
          required: false
          type: boolean
        - default: false
          description: Return the entire external bank account number.
          in: query
          name: returnEntireExternalBankAccountNumber
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Returns the requested `FundingAccount`.
          schema:
            $ref: '#/definitions/FundingAccount'
        '404':
          description: >-
            No `FundingAccount` found for the supplied `userId` and
            `fundingAccountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Funding Accounts
    patch:
      consumes:
        - application/json
      description: >-
        Updates the `FundingAccount` for the supplied `userId` and
        `fundingAccountId` and returns the updated `FundingAccount`.
      operationId: Update Funding Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `FundingAccount`.
          in: path
          name: fundingAccountId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FundingAccountUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Details of the updated `FundingAccount`.
          schema:
            $ref: '#/definitions/FundingAccount'
        '404':
          description: >-
            No `FundingAccount` found for the supplied `userId` and
            `fundingAccountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Funding Accounts
  '/users/{userId}/fundingaccounts/{fundingAccountId}/addpartnerid/{partnerId}':
    patch:
      description: >-
        Sets the `partnerId` of the `FundingAccount` matching the supplied
        `userId` and `fundingAccountId`. NOTE: the `partnerId` is idempotent and
        cannot be changed once set. This operation will return an error if the
        `FundingAccount` already has a `partnerId` that does not match the
        supplied one.
      operationId: 'Add Partner Id '
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `FundingAccount`.
          in: path
          name: fundingAccountId
          required: true
          type: string
        - description: The `partnerId` to be set.
          in: path
          name: partnerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Details of the updated `FundingAccount`.
          schema:
            $ref: '#/definitions/FundingAccount'
        '208':
          description: >-
            The `partnerId` of the `FundingAccount` has already been set and
            matches the provided `partnerId`. Returns the `FundingAccount`.
          schema:
            $ref: '#/definitions/FundingAccount'
        '400':
          description: >-
            The `partnerId` of the `FundingAccount` has already been set and
            does not match the provided `partnerId`.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            No `FundingAccount` found for the supplied `userId` and
            `fundingAccountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Funding Accounts
  '/users/{userId}/jwt':
    get:
      description: Returns the JWT for the end `User` to make authenticated requests.
      operationId: Get JWT for User
      parameters:
        - description: The identifier of the `User` to create a JWT for.
          in: path
          name: userId
          required: true
          type: string
        - description: The IP Address of the end user.
          in: query
          name: ipAddress
          required: false
          type: string
        - description: If  the token should be given read-only access
          in: query
          name: readOnly
          required: false
          type: boolean
      responses:
        '200':
          description: The JWT for the end `User` to make authenticated requests.
      tags:
        - Users
  '/users/{userId}/logout':
    get:
      description: Invalidates the JWT for the `User` specified
      operationId: Invalidate User JWT
      parameters:
        - description: The identifier of the `User` to invalidate the JWT for.
          in: path
          name: userId
          required: true
          type: string
      produces:
        - text/plain
        - application/json
      responses:
        default:
          description: default response
      tags:
        - Users
  '/users/{userId}/notifications':
    get:
      description: >-
        Retrieves a list of `UserNotifications` for the `User` with the supplied
        `userId`.
      operationId: Get Notifications V2
      parameters:
        - description: The `offset` for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: true
          type: integer
        - description: The number of `UserNotifications` to return.
          format: int32
          in: query
          maximum: 1000
          name: limit
          required: true
          type: integer
        - default: DESC
          description: 'The order of `UserNotifications` to return, sorted by creation date.'
          enum:
            - ASC
            - DESC
          in: query
          name: sort
          required: false
          type: string
        - description: Return only the `seen` notifications.
          in: query
          name: seen
          required: false
          type: boolean
        - description: Return only the `read` notifications.
          in: query
          name: read
          required: false
          type: boolean
        - description: Return only the `dismissed` notifications.
          in: query
          name: dismissed
          required: false
          type: boolean
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of `Notifications`.
          schema:
            $ref: '#/definitions/NotificationList'
        '400':
          description: >-
            The `offset`, `limit`, or `filter` were not supplied or were
            invalid.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `UserNotifications` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
    patch:
      consumes:
        - application/json
      description: >-
        Updates the state of all `UserNotifications` associated with the `User`
        using the supplied `UpdateUserNotifications` parameter.
      operationId: Update All Notifications
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            The information needed to update all `UserNotifications` associated
            with the `User`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserNotifications'
      produces:
        - application/json
      responses:
        '200':
          description: The updated `Notifications`.
          schema:
            $ref: '#/definitions/UpdateResult'
        '404':
          description: No `UserNotifications` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `UpdateUserNotifications` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
    post:
      consumes:
        - application/json
      deprecated: true
      description: >-
        Retrieves a list of `UserNotifications` for the `User` with the supplied
        `userId`.
      operationId: Get Notifications
      parameters:
        - description: The `offset` for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: true
          type: integer
        - description: The number of `UserNotifications` to return.
          format: int32
          in: query
          maximum: 1000
          name: limit
          required: true
          type: integer
        - default: DESC
          description: 'The order of `UserNotifications` to return, sorted by creation date.'
          enum:
            - ASC
            - DESC
          in: query
          name: sort
          required: false
          type: string
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            Filter `UserNotifications` with the supplied
            `UserNotificationsFilter`.
          in: body
          name: body
          schema:
            $ref: '#/definitions/UserNotificationsFilter'
      produces:
        - application/json
      responses:
        '200':
          description: List of `Notifications`.
          schema:
            $ref: '#/definitions/NotificationList'
        '400':
          description: >-
            The `offset`, `limit`, or `filter` were not supplied or were
            invalid.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `UserNotifications` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
  '/users/{userId}/notifications/bulk':
    patch:
      consumes:
        - application/json
      description: Updates a set of notifications.
      operationId: Update Notification Set
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            The information needed to update a set of `UserNotifications`
            associated with the `User`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserNotificationSet'
      produces:
        - application/json
      responses:
        '200':
          description: The updated `Notifications`.
          schema:
            $ref: '#/definitions/NotificationList'
        '404':
          description: No `UserNotifications` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `UpdateUserNotificationSet` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
  '/users/{userId}/notifications/{notificationId}':
    get:
      description: >-
        Returns the `UserNotification` for the supplied `userId` and
        `notificationId`.
      operationId: Notification
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `UserNotification`.
          in: path
          name: notificationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The requested `Notification`.
          schema:
            $ref: '#/definitions/UserNotification'
        '404':
          description: >-
            No `UserNotification` found for the supplied `userId` and
            `notificationId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
    patch:
      consumes:
        - application/json
      description: >-
        Updates the state of the `UserNotification` using the
        `UpdateUserNotifications` parameter for the supplied `userId` and
        `notificationId`.
      operationId: Update Notification
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `UserNotification`.
          in: path
          name: notificationId
          required: true
          type: string
        - description: The information needed to update the `UserNotification`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserNotifications'
      produces:
        - application/json
      responses:
        '200':
          description: The updated `Notification`.
          schema:
            $ref: '#/definitions/UserNotification'
        '404':
          description: No `UserNotification` was found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `UpdateUserNotifications` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Notifications
  '/users/{userId}/payeeaccounts':
    get:
      description: >-
        Returns the list of `Accounts` for the `User` with the supplied
        `userId`.
      operationId: Payee Accounts
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `PayeeAccount`s to return.
          format: int32
          in: query
          maximum: 100
          minimum: 1
          name: limit
          required: false
          type: integer
        - default: false
          description: Optional filtering on hidden `PayeeAccount`s
          in: query
          name: hidden
          required: false
          type: boolean
        - collectionFormat: multi
          description: Optional status of the `PayeeAccounts` to filter on.
          in: query
          items:
            description: >-
              When a `Payee` is successfully linked, a `PayeeAccount` is created
              for each account associated with the linked `Payee`. Before the
              user supplies the required payment details for a `PayeeAccount`,
              the `PayeeAccount` status is `PENDING`.  After the user supplies
              the required payment details for a `PayeeAccount`, the
              `PayeeAccount's` status is `ACTIVE`. `PayeeAccounts` with a status
              of `ARCHIVED` should  not be presented to the user.
            enum:
              - PENDING
              - ACTIVE
              - ARCHIVED
            example: ACTIVE
            type: string
          name: statuses
          required: false
          type: array
        - description: Optional bill status of the `PayeeAccounts` to filter on.
          enum:
            - UNPAID
            - SERVICE_SCHEDULED
            - SERVICE_AUTOMATIC
            - SCHEDULED
            - EMPTY
            - PAID
            - PAID_EXTERNAL
            - SKIPPED
            - NONE
            - ARCHIVED
          in: query
          name: billStatus
          required: false
          type: string
        - description: The optional identifier of the `Payee` to search for accounts.
          in: query
          name: payeeId
          required: false
          type: string
        - description: Optional start date to filter the `PayeeAccounts`.
          in: query
          name: startDate
          required: false
          type: string
        - description: Optional end date to filter the `PayeeAccounts`.
          in: query
          name: endDate
          required: false
          type: string
        - description: Optional field to sort on
          enum:
            - name
            - status
            - established
            - accountNumber
          in: query
          name: sortField
          required: false
          type: string
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: Optional field to search on
          enum:
            - name
            - status
            - established
            - accountNumber
          in: query
          name: searchField
          required: false
          type: string
        - description: Optional value to search for if `searchField` is present
          in: query
          maxLength: 255
          minLength: 0
          name: searchValue
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of `PayeeAccounts`.
          schema:
            $ref: '#/definitions/PayeeAccountPage'
        '404':
          description: No `Accounts` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payee Accounts
    post:
      consumes:
        - application/json
      description: Creates and associates a `PayeeAccount` with the `User's` `Payee`.
      operationId: Add Payee Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
        - description: The information needed to create the `PayeeAccount`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PayeeAccountRequest'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            In the case the request parameters match an existing payeeAccount,
            the existing payeeAccount will be returned.
          schema:
            $ref: '#/definitions/PayeeAccount'
        '201':
          description: Returned if a new `PayeeAccount` is created and added to the db.
          schema:
            $ref: '#/definitions/PayeeAccount'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `AccountRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payee Accounts
  '/users/{userId}/payeeaccounts/sync/{ofxToken}':
    get:
      description: >-
        Returns the payee accounts for the supplied `userId`, `accountId`, and
        `ofxToken`.
      operationId: OFX Payee Account Synchronization
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The ofx token with which to synchronize.
          in: path
          name: ofxToken
          required: true
          type: string
        - description: Return the value for the specified token only.
          in: query
          name: tokenOnly
          required: false
          type: boolean
        - description: >-
            Return the values for the specified token and all changes that
            occurred since the time for that token.
          in: query
          name: tokenValue
          required: false
          type: boolean
        - description: Return the current state of the resource.
          in: query
          name: refresh
          required: false
          type: boolean
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: The requested payee accounts synchronization.
          schema:
            $ref: '#/definitions/payee_accounts_ofx_sync'
        '400':
          description: The `accountId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            No payee accounts synchronization found for the supplied `userId`,
            `accountId`, and `ofxToken`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payee Accounts
  '/users/{userId}/payeeaccounts/{accountId}':
    delete:
      description: Removes a `PayeeAccount`.
      operationId: Remove Payee Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `PayeeAccount`.
          in: path
          name: accountId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The deleted `PayeeAccount`.
          schema:
            $ref: '#/definitions/PayeeAccount'
        '404':
          description: No `PayeeAccount` found for the supplied `userId` and `accountId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `accountId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payee Accounts
    get:
      description: Returns the `PayeeAccount` for the supplied `userId` and `accountId`.
      operationId: Payee Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `PayeeAccount`.
          in: path
          name: accountId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: The requested `PayeeAccount`.
          schema:
            $ref: '#/definitions/PayeeAccount'
        '404':
          description: No `PayeeAccount` found for the supplied `userId` and `accountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payee Accounts
    patch:
      consumes:
        - application/json
      description: Updates the information for the existing `PayeeAccount`.
      operationId: Update Payee Account
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `PayeeAccount`.
          in: path
          name: accountId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
        - description: The information needed to update the associated `PayeeAccount`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PayeeAccountUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: The updated `PayeeAccount`.
          schema:
            $ref: '#/definitions/PayeeAccount'
        '404':
          description: No `PayeeAccount` found for the supplied `userId` and `accountId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `accountId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `AccountRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payee Accounts
  '/users/{userId}/payees':
    get:
      description: Returns the list of `Payee`s for the supplied `userId`.
      operationId: Payees
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
        - default: 0
          description: The offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 30
          description: The maximum number of `Payee`s to return.
          format: int32
          in: query
          maximum: 100
          minimum: 1
          name: limit
          required: false
          type: integer
        - description: Optional field to sort on
          enum:
            - name
          in: query
          name: sortField
          required: false
          type: string
        - collectionFormat: multi
          description: Optional status of the `Payee` to filter on.
          in: query
          items:
            description: >-
              Represents the status of the `Payee`. `ACTIVE` is a `Payee` in
              good standing. `PENDING` payees are in the process of being set
              up. `ARCHIVED` payees should not be shown to the user.
            enum:
              - ACTIVE
              - ARCHIVED
            example: ARCHIVED
            type: string
          name: statuses
          required: false
          type: array
        - collectionFormat: multi
          description: Optional link status of the `Payee` to filter on.
          in: query
          items:
            description: >-
              Indicates the linking status of the `Payee`. `LINKABLE` indicates
              the `Payee` can be linked, but there is currently no attempt to
              link the `Payee`. `NOT_LINKABLE` indicates the `Payee` does not
              support linking. `LINKED` indicates the `Payee` has been linked.
              Other statuses are indicators of the status of an in progress link
              attempt. Please see the documentation on linking `Payee`s for
              further information.
            enum:
              - LINKING
              - LINKING_DATUMS_VERIFIED
              - DATUMS_INVALID
              - DATUMS_MISSING
              - LOCKED
              - CLOSED
              - LINKED
              - OUTAGE
              - PENDING
              - DATUMS_VALID
              - LINKABLE
              - NOT_LINKABLE
              - DEPRECATED
              - NONE
            example: DATUMS_VALID
            type: string
          name: linkStatuses
          required: false
          type: array
        - default: ASC
          description: Optional sort direction if `sortField` is present
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: Optional field to search on
          enum:
            - name
          in: query
          name: searchField
          required: false
          type: string
        - description: Optional value to search for if `searchField` is present
          in: query
          maxLength: 255
          minLength: 0
          name: searchValue
          required: false
          type: string
        - description: >-
            The `depth` of the response objects to be returned. A `depth` of `1`
            will only return the top level `Payee` objects without Payee account
            data
          in: query
          name: depth
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of `Payee`s.
          schema:
            $ref: '#/definitions/PayeePage'
        '400':
          description: Invalid `offset` or `limit` supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `Payees` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payees
    post:
      consumes:
        - application/json
      description: Creates and associates a `Payee` with the `User`.
      operationId: Add Payee
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
        - description: >-
            The information needed to create and associate the `Payee` with the
            `User`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PayeeRequest'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            In the case the request parameters match an existing payee, the
            existing payee will be returned.
          schema:
            $ref: '#/definitions/Payee'
        '201':
          description: Returned if a new `Payee` is created and added to the db.
          schema:
            $ref: '#/definitions/Payee'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `PayeeRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payees
  '/users/{userId}/payees/{payeeId}':
    delete:
      description: >-
        Set's the `Payee` status to `ARCHIVED`, archived payees should not be
        displayed.
      operationId: Remove Payee
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payee`.
          in: path
          name: payeeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The deleted `Payee`.
          schema:
            $ref: '#/definitions/Payee'
        '404':
          description: No `Payee` found for the supplied `userId` and `payeeId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payees
    get:
      description: Returns the `Payee` for supplied `payeeId` and `userId`.
      operationId: Payee
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payee`.
          in: path
          name: payeeId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: The requested `Payee`.
          schema:
            $ref: '#/definitions/Payee'
        '404':
          description: No `Payee` found for the supplied `userId` and `payeeId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payees
    patch:
      consumes:
        - application/json
      description: Updates the information for the existing `Payee`.
      operationId: Update Payee
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payee`.
          in: path
          name: payeeId
          required: true
          type: string
        - default: false
          description: >-
            Request to include the `Payee` logo as a Base64 encoded string in
            the response payload.
          in: query
          name: includePayeeLogo
          required: false
          type: boolean
        - description: The style of Logo associated with a Merchant
          enum:
            - ACCENT
            - ACCENTONPRIMARY
            - DARKONWHITE
            - ICON
            - DEFAULT
            - LEGACY
          in: query
          name: imageType
          required: false
          type: string
        - default: true
          description: >-
            Request to get a category logo back if the `Merchant` logo does not
            exist.
          in: query
          name: fallback
          required: false
          type: boolean
        - default: false
          description: Return only the best available `PaymentConstraint`.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: Return the latest payment instead of the latest successful payment.
          in: query
          name: latestPayment
          required: false
          type: boolean
        - default: false
          description: Return the entire payee account number.
          in: query
          name: returnEntirePayeeAccountNumber
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
        - description: >-
            Retrieves logo at the requested bound width if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundWidth
          required: false
          type: integer
        - description: >-
            Retrieves logo at the requested bound height if includePayeeLogo is
            selected. 
          format: int32
          in: query
          maximum: 2000
          name: logoBoundHeight
          required: false
          type: integer
        - default: true
          description: 'Maintains the aspect ratio of the image if '
          in: query
          name: keepAspectRatio
          required: false
          type: boolean
        - description: The information needed to update the associated `Payee`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PayeeUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: The updated `Payee`.
          schema:
            $ref: '#/definitions/Payee'
        '404':
          description: No `Payee` found for the supplied `userId` and `payeeId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `payeeId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `PayeeRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payees
  '/users/{userId}/payees/{payeeId}/link':
    post:
      description: >-
        Manually trigger a new link attempt for a `Payee`. Useful if the `Payee`
        is in a locked stated and a new `linkingDatum` is required.
      operationId: Link Payee
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payee`.
          in: path
          name: payeeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The updated `Payee`.
          schema:
            $ref: '#/definitions/Payee'
        '404':
          description: No `Payee` found for the supplied `userId` and `payeeId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `payeeId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payees
  '/users/{userId}/payments':
    get:
      description: >-
        Returns a list of `Payments` for the the supplied `userId` and
        `accountId`. Use `?completed=true` to include historical payments.
      operationId: Payments
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - default: 0
          description: Optional offset for pagination.
          format: int32
          in: query
          minimum: 0
          name: offset
          required: false
          type: integer
        - default: 100
          description: Optional maximum number of `Payment`s to return.
          format: int32
          in: query
          maximum: 1000
          minimum: 1
          name: limit
          required: false
          type: integer
        - collectionFormat: multi
          description: Optional status of the `Payments` to return.
          in: query
          items:
            description: Indicates the current status of the `Payment`.
            enum:
              - PENDING
              - PENDING_DEBITED
              - CANCELLED
              - FAILURE
              - INFORMATION_NEEDED
              - PROCESSING
              - SUBMITTED
              - SUCCESS
              - SUCCESS_RETURN
              - SUCCESS_PARTIAL_RETURN
            example: PROCESSING
            type: string
          name: statuses
          required: false
          type: array
        - description: Optional start date used to filter the `Payments`.
          in: query
          name: startDate
          required: false
          type: string
        - description: Optional end date used to filter the `Payments`.
          in: query
          name: endDate
          required: false
          type: string
        - description: Optional identifier of the `PayeeAccount` to search for payments.
          in: query
          name: accountId
          required: false
          type: string
        - description: Optional identifier of the `FundingAccount` to search for payments.
          in: query
          name: fundingAccountId
          required: false
          type: string
        - description: Fields that can be searched or use to sort searches for `Payment`s.
          enum:
            - NAME
            - STATUS
            - PAYMENT_AMOUNT
            - ORIGINATION_TYPE
            - SEND_ON_DATE
            - DELIVER_BY_DATE
            - CREATED
          in: query
          name: sortField
          required: false
          type: string
        - description: Optional sort direction if `sortField` is present.
          enum:
            - ASC
            - DESC
          in: query
          name: sortOrder
          required: false
          type: string
        - description: 'Optional payee name, confirmation number, or amount to search for.'
          in: query
          maxLength: 255
          minLength: 0
          name: searchValue
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of `Payment`s.
          schema:
            $ref: '#/definitions/PaymentPage'
        '400':
          description: Invalid `offset` or `limit` supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `Payments` found for the supplied `userId` and `accountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
    post:
      consumes:
        - application/json
      description: Creates and associates a `Payment` with the `User's` `PayeeAccount`.
      operationId: Make Payment
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The information needed to create the `Payment`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: The new `Payment`.
          schema:
            $ref: '#/definitions/Payment'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `PaymentRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
  '/users/{userId}/payments/constraints':
    get:
      description: >-
        Returns the `PaymentConstraints` for the supplied `userId` and
        `accountId`.
      operationId: Payment Constraints
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `PayeeAccount` for the payment constraints.
          in: query
          name: accountId
          required: true
          type: string
        - description: Optional flag to request only the best available payment constraint.
          in: query
          name: bestAvailableOnly
          required: false
          type: boolean
        - default: false
          description: >-
            Return all of the `RailConstraints` with `PaymentConstraints`
            instead of just the `AVAILABLE` `RailConstraints`.
          in: query
          name: returnAllRailConstraints
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: The requested `PaymentConstraint`.
          schema:
            $ref: '#/definitions/PaymentConstraints'
        '400':
          description: The `accountId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            No `PaymentConstraints` found for the supplied `userId` and
            `accountId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
  '/users/{userId}/payments/review':
    post:
      consumes:
        - application/json
      description: >-
        Review information about the `Payment` like delivery date prior to
        creating the `Payment`.
      operationId: Review Payment
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The information needed to review the `Payment`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ReviewPaymentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: The reviewed `Payment`.
          schema:
            $ref: '#/definitions/PaymentReview'
        '404':
          description: No `User` found for the supplied `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
  '/users/{userId}/payments/sync/{fundingAccountId}/{ofxToken}':
    get:
      description: >-
        Returns the payments for the supplied `userId`, `fundingAccountId`, and
        `ofxToken`.
      operationId: OFX Payment Synchronization
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Funding Account`.
          in: path
          name: fundingAccountId
          required: true
          type: string
        - description: The ofx token with which to synchronize.
          in: path
          name: ofxToken
          required: true
          type: string
        - description: Return the value for the specified token only.
          in: query
          name: tokenOnly
          required: false
          type: boolean
        - description: >-
            Return the values for the specified token and all changes that
            occurred since the time for that token.
          in: query
          name: tokenValue
          required: false
          type: boolean
        - description: Return the current state of the resource.
          in: query
          name: refresh
          required: false
          type: boolean
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: The requested payments synchronization.
          schema:
            $ref: '#/definitions/payments_ofx_sync'
        '400':
          description: The `fundingAccountId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            No payments synchronization found for the supplied `userId` and
            `ofxToken`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
  '/users/{userId}/payments/{paymentId}':
    delete:
      description: Indicates that an existing `Payment` was marked as cancelled.
      operationId: Cancel Payment
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payment` to cancel.
          in: path
          name: paymentId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Indicates the specified `Payment` has been cancelled.
          schema:
            $ref: '#/definitions/Payment'
        '400':
          description: The `Payment` is currently being processed and cannot be cancelled.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `Payment` was found for the supplied `userId` and `paymentId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
    get:
      description: Returns the `Payment` for the supplied `userId` and `paymentId`.
      operationId: Payment
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payment`.
          in: path
          name: paymentId
          required: true
          type: string
        - default: false
          description: >-
            If true, returns all payment results in the paymentResults set. If
            false, only returns the latest payment result in paymentResult
            object
          in: query
          name: returnAllPaymentResults
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: The requested `Payment`.
          schema:
            $ref: '#/definitions/Payment'
        '404':
          description: No `Payment` was found for the supplied `userId` and `paymentId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
    patch:
      consumes:
        - application/json
      description: Updates the `Payment` with the provided payload.
      operationId: Update Payment
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Payment`.
          in: path
          name: paymentId
          required: true
          type: string
        - description: The information needed to update the associated `Payment`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PaymentUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: The updated `Payment`.
          schema:
            $ref: '#/definitions/Payment'
        '400':
          description: The `Payment` is currently being processed and cannot be cancelled.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No `Payment` was found for the supplied `userId` and `paymentId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `paymentId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `PaymentUpdate` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Payments
  '/users/{userId}/pkce/access':
    post:
      operationId: Get JWT token for access code
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The access code
          in: query
          name: code
          required: false
          type: string
        - description: The verifier code
          in: query
          name: verifier
          required: false
          type: string
      responses:
        '200':
          description: UserPkceDto resource
        '401':
          description: Token Expired
        '404':
          description: Resource Not Found
      tags:
        - Users
  '/users/{userId}/pkce/authorize':
    post:
      description: Get PKCE access token for user
      operationId: pkceAuthorize
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The IP Address of the end user.
          in: query
          name: ipAddress
          required: false
          type: string
        - description: If  the token should be given read-only access
          in: query
          name: readOnly
          required: false
          type: boolean
        - description: The challenge code
          in: query
          name: challenge
          required: false
          type: string
        - description: The challenge algorithm
          in: query
          name: challenge-method
          required: false
          type: string
      responses:
        '200':
          description: PKCE Access Token as content
        '403':
          description: >-
            Cannot access. User has not accepted customer consent terms and
            conditions
        '404':
          description: Resource Not Found (When user does not exist)
      tags:
        - Users
  '/users/{userId}/pkce/challenge':
    post:
      operationId: Get challenge token for refresh code
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The verifier code
          in: query
          name: verifier
          required: false
          type: string
      responses:
        '200':
          description: Refreshed JWT
        '404':
          description: Resource Not Found
      tags:
        - Users
  '/users/{userId}/pkce/refresh':
    post:
      operationId: Get JWT token for refresh code
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The refresh code
          in: query
          name: code
          required: false
          type: string
      responses:
        '200':
          description: Refreshed JWT
        '404':
          description: Resource Not Found
      tags:
        - Users
  '/users/{userId}/schedules':
    get:
      description: Returns the `RecurringSchedules` for the provided `userId`.
      operationId: Schedules
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The requested `RecurringSchedules`.
          schema:
            $ref: '#/definitions/RecurringScheduleList'
        '404':
          description: No `RecurringSchedules` found for the provided `userId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Schedules
    post:
      consumes:
        - application/json
      description: >-
        Creates and associates a `RecurringSchedule` with a `User's`
        `PayeeAccount`.
      operationId: Add Schedule
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: >-
            The information needed to create the `RecurringSchedule` and
            associate it with the `User's` `PayeeAccount`.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RecurringScheduleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: The new `RecurringSchedule`.
          schema:
            $ref: '#/definitions/RecurringSchedule'
        '422':
          description: Invalid `RecurringScheduleRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Schedules
  '/users/{userId}/schedules/review':
    post:
      consumes:
        - application/json
      description: >-
        Reviews a `RecurringScheduleRequest` before the
        `RecurringScheduleRequest` is submitted to the system using the `Add
        Schedule` request.
      operationId: Review Schedule
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The `RecurringScheduleRequest` to review.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RecurringScheduleRequest'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            Returns a `RecurringScheduleReview`, if the
            `RecurringScheduleRequest` was valid. If the `RecurringSchedule` is
            a calendar based `RecurringScheduleRequest` the
            `RecurringScheduleReview` response will contain the first or
            `nextPayment` as well as a limited set of future `paymentDates`.
          schema:
            $ref: '#/definitions/RecurringScheduleReview'
        '422':
          description: Invalid `RecurringScheduleRequest` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Schedules
  '/users/{userId}/schedules/sync/{fundingAccountId}/{ofxToken}':
    get:
      description: >-
        Returns the payments for the supplied `userId`, `fundingAccountId`, and
        `ofxToken`.
      operationId: OFX Recurring Payments Schedules Synchronization
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `Funding Account`.
          in: path
          name: fundingAccountId
          required: true
          type: string
        - description: The ofx token with which to synchronize.
          in: path
          name: ofxToken
          required: true
          type: string
        - description: Return the value for the specified token only.
          in: query
          name: tokenOnly
          required: false
          type: boolean
        - description: >-
            Return the values for the specified token and all changes that
            occurred since the time for that token.
          in: query
          name: tokenValue
          required: false
          type: boolean
        - description: Return the current state of the resource.
          in: query
          name: refresh
          required: false
          type: boolean
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: The requested payments schedules synchronization.
          schema:
            $ref: '#/definitions/recurring_schedules_ofx_sync'
        '400':
          description: The `fundingAccountId` was not supplied.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            No payments schedules synchronization found for the supplied
            `userId` and `ofxToken`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Schedules
  '/users/{userId}/schedules/{scheduleId}':
    delete:
      description: >-
        Removes the `RecurringSchedule` for recurring payments. This cancels any
        `PENDING` payments associated with the removed `RecurringSchedule`.
      operationId: Remove Schedule
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `RecurringSchedule`.
          in: path
          name: scheduleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The deleted `RecurringSchedule`.
          schema:
            $ref: '#/definitions/RecurringSchedule'
        '404':
          description: >-
            No `RecurringSchedule` found for the supplied `userId` and
            `scheduleId`.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Schedules
    get:
      description: >-
        Returns the `RecurringSchedule` for the supplied `userId` and
        `scheduleId`.
      operationId: Schedule
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `RecurringSchedule`.
          in: path
          name: scheduleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: The requested `RecurringSchedule`.
          schema:
            $ref: '#/definitions/RecurringSchedule'
        '404':
          description: >-
            No `RecurringSchedule` found for the supplied `userId` and
            `scheduleId`.
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: The `scheduleId` was not present in the request.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Schedules
    patch:
      consumes:
        - application/json
      description: Updates the `RecurringSchedule`.
      operationId: Update Recurring Schedule
      parameters:
        - description: The identifier of the `User`.
          in: path
          name: userId
          required: true
          type: string
        - description: The identifier of the `RecurringSchedule`.
          in: path
          name: scheduleId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RecurringScheduleUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: The updated `Notification`.
          schema:
            $ref: '#/definitions/RecurringSchedule'
        '400':
          description: The requested updates are invalid.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            No `RecurringSchedule` found for the provided `userId` and
            `scheduleId`.
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid `RecurringScheduleUpdate` supplied.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Schedules
  '/users/{userId}/verify-jwt':
    post:
      consumes:
        - application/json
      description: Returns 204 if the token was created by gluon
      operationId: Verify JWT
      parameters:
        - description: The identifier of the `User` the JWT was created for.
          in: path
          name: userId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/JwtVerificationRequest'
      responses:
        '204':
          description: Return 204 if the token was created by gluon
      tags:
        - Users
  /webhooks/filters:
    delete:
      description: >-
        A successful response clears all `ResourceNotificationFilter` settings.
        Clearing filters restores the issuing of all `Notifications`.
      operationId: Delete Resource Notifications Filter
      parameters: []
      produces:
        - application/json
      responses:
        '204':
          description: The notifications filter was successfully removed.
        '400':
          description: No notifications filters exist.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Webhooks
    get:
      description: Returns the current `ResourceNotificationsFilter`.
      operationId: Resource Notification Filter
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: The requested Notification Filter
          schema:
            $ref: '#/definitions/ResourceNotificationsFilter'
        '404':
          description: No `ResourceNotificationsFilter` found.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Webhooks
    patch:
      consumes:
        - application/json
      description: >-
        A successful response results in the application sending only the
        `Notifications` that match the selection criteria in the updated
        `ResourceNotificationsFilter`.
      operationId: Update Resource Notifications Filter
      parameters:
        - description: Provides the criteria that determine which `Notifications` to send.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResourceNotificationsFilterRequest'
      produces:
        - application/json
      responses:
        '200':
          description: The updated Notifications Filter.
          schema:
            $ref: '#/definitions/ResourceNotificationsFilter'
        '422':
          description: The supplied `ResourceNotificationsFilterRequest` is invalid.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Webhooks
    post:
      consumes:
        - application/json
      description: >-
        A successful response results in the application sending only the
        `Notifications` that match the selection criteria in the
        `ResourceNotificationFilter`.
      operationId: Create Resource Notifications Filter
      parameters:
        - description: Provides the criteria that determine which `Notifications` to send.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResourceNotificationsFilterRequest'
      produces:
        - application/json
      responses:
        '200':
          description: The added Notifications Filter.
          schema:
            $ref: '#/definitions/ResourceNotificationsFilter'
        '422':
          description: The supplied `ResourceNotificationsFilterRequest` is invalid.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Webhooks
  /webhooks/notifications:
    post:
      consumes:
        - application/json
      description: >-
        A successful response results in the application issuing `Notifications`
        that match the `ResourceNotificationsRequest` criteria. Use this
        resource endpoint to get a sample of the `Notifications` generated by
        the application, when preparing to consume `Webhook Notifications`.
      operationId: Request Resource Notifications
      parameters:
        - description: Provides the criteria that determine which `Notifications` to send.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResourceNotificationsRequest'
      produces:
        - application/json
      responses:
        '422':
          description: The supplied `ResourceNotificationRequest` is invalid.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Webhooks
schemes:
  - http
swagger: '2.0'
tags:
  - description: >+
      This documentation describes BillGO Bill Pay API. On the left, you can
      navigate between API sets to explore the capabilities. Explore the
      `Overview` section to get a general understanding of how to interact with
      the various API endpoints. If you have any questions, please reach out to
      developers@billgo.com.

      # Core Concepts

      You should be familiar with the following when building to this API.

      ## Merchant Linking

      When a user decides to link a payee, the user must provide the necessary
      login details required to access the user’s merchant account. Merchants
      ask for a variety of merchant-specific details. To determine which details
      the user should provide, the `Datum` property of the `Merchant` contains
      the list of login datums that are required. The user should be presented
      with input fields for each datum in this list. The `Description` should be
      presented as the placeholder text, and where provided, the `Pattern` is a
      regular expression that can be used to validate the input of the user. For
      the `Password`  type, the answer the user provides may optionally be
      masked. Additionally, for any `Datum` where the `sensitive` property is
      `true`, masking the user's input is good practice. For the `Choice` and
      `QuestionAnswerChoice` datum types, the user should be presented with a
      combo box or dropdown of the choices to pick from. For the Date datum
      type, the user should be presented with a calendar picker from which a
      date (day, month, and year) can be chosen.


      Once these details have been collected from the user, they can be passed
      to BillGO. BillGO will immediately return a newly-created merchant object
      whose LinkStatus will be `SYNCING`. This indicates a merchant sync is
      under way. Once the datums have been verified by the merchant, the
      LinkStatus will become `SYNCING_DATUMS_VERIFIED`. Once in this status, no
      additional information will be required from the user, and the user can be
      given the option of allowing the sync to complete in the background. While
      the LinkStatus is `SYNCING` or `SYNCING_DATUMS_VERIFIED`, the Retrieve
      Merchant API should be called periodically at a recommended interval of
      once every five seconds. Once the LinkStatus transitions to another
      status, periodic updates can cease.


      If the user makes a mistake when entering their details or if the merchant
      determines additional details are necessary, the LinkStatus will become
      `DATUMS_INVALID` or `DATUMS_MISSING`. The user should then be prompted to
      enter the details for any datums whose Status is Invalid or Missing.
      Rather than creating a new merchant, the Update Merchant API should be
      used to provide these updated values. The syncing process will resume and
      periodic refreshes can once again commence.


      Once the merchant sync has completed successfully, the LinkStatus will
      become `SYNCED` and any merchant accounts will be returned. Going forward,
      BillGO will continue to sync data from the merchant on an ongoing basis.
      Future sync attempts are optimized around the user’s billing cycle and
      activity. Assuming the user’s log-in details do not change, this
      synchronization process will continue into the future. However, it is
      possible for a user or the merchant to change or reset details for a
      variety of reasons. When BillGO encounters this situation, the LinkStatus
      can become `DATUMS_INVALID` or `DATUMS_MISSING`. The user should be
      reprompted for details at this point and once they are gathered, the
      Update Merchant API should be used.


      If an unexpected error occurs while the user is attempting to add or
      update a merchant, the LinkStatus can become `PENDING`. The provided
      Notice should be displayed to the user since it will provide details about
      the situation. This status is transient and should generally correct
      itself within minutes to hours, depending on the underlying issue. If an
      individual user hits a unique, account-specific problem, the merchant may
      remain in this status for a longer period of time. The application can
      continue to call the Retrieve Merchant API to detect when the merchant has
      transitioned out of Pending. In practice, this should be performed at most
      once per minute for the first 15 minutes and then hourly for the next 24
      hours. After 24 hours, the merchant can be retrieved daily.


      It is separately possible for a merchant to lock a user’s account,
      possibly as a result of too many failed login attempts. When this occurs,
      the LinkStatus is `LOCKED`. The provided Notice should be displayed to the
      user since it will describe actions the user can take to resolve the
      locked situation. BillGO will continue to attempt to sync this merchant
      over time in order to detect whether the user’s account transitions out of
      the `LOCKED` status. Due to this behavior, the merchant should only be
      deleted by the user.


      It is also possible for a user to provide login details for a merchant but
      for the user to not yet associate those login details with a billing
      account. When this occurs, the LinkStatus is `CLOSED` and the Notice
      property will contain details for the user on how to correct the
      situation. BillGO will continue to attempt to sync this merchant over time
      in order to detect whether the user’s account transitions out of the
      closed status. Due to this behavior, the merchant should only be deleted
      by the user.


      If a merchant is down for maintenance while the user is attempting to add
      or update a merchant or if a merchant remains down for an extended period
      of time, the LinkStatus can become Outage and the Notice property will
      contain details about the situation. BillGO will continue to attempt to
      sync this merchant over time in order to detect when the merchant is no
      longer down for maintenance. Due to this behavior, the merchant should
      only be deleted by the user.


      If a merchant does not yet support syncing (IsLinkingEnabled is false),
      the LinkStatus will become `DATUMS_VALID`once the user’s datums have been
      verified. The section [Unsupported Merchants](Unsupported Merchants) below
      explains in detail how to handle these merchants.


      Because merchants can sometimes take a long time to complete a sync, it is
      recommended  a timer be started each time an Add Merchant API or Update
      Merchant API call is performed. If 70 seconds elapses and the LinkStatus
      is still `SYNCING` or `SYNCING_DATUMS_VERIFIED` after the next retrieval,
      it is recommended  the user be presented with a message indicating syncing
      is taking longer than expected and to allow them to dismiss any modal
      dialog that may be displayed. Polling can continue to occur in the
      background as needed, and, if possible, the user can be notified when the
      sync has eventually completed.

      <a name="Unsupported Merchants"></a>## Unsupported Merchants

      The BillGO merchant database is a comprehensive collection of merchants
      within the United States. Within this database, BillGO can synchronize
      billing information for more than 10,000 of these merchants. The rest are
      currently unsupported but are present within the database. To determine
      whether a record supports synchronization, the IsLinkingEnabled property
      can be inspected.


      Within the BillGO user experience, BillGO exposes all relevant merchants
      in the database, including ones for which synchronization is not yet
      supported. When a user provides login details for a merchant that doesn’t
      yet support synchronization, BillGO will verify these details and continue
      to prompt the user until verified ones have been provided. When this
      occurs, the merchant will transition to a special synchronization status
      (LinkStatus becomes `DATUMS_VALID`). The merchant remain in this state
      until synchronization support is being added. At that point, the login
      details will be re-verified, and if still valid, billing details will be
      delivered to the user.


      This approach allows the user to provide all of their merchants and
      provides them with a easy means to discover when support for new merchants
      occurs. This approach is optional. If not desired, merchants that do not
      yet support synchronization can be filtered from results presented to the
      user. However, it is strongly suggested to provide your user with this
      option (perhaps annotated with specific language beforehand), because
      BillGO cannot support new merchants without this information. In addition,
      total support volume tends to decrease when you support this option.

      ## Merchant Deprecation

      Every merchant within the BillGO database is represented as a record.
      Records are immutable and map to a particular account registration for a
      particular merchant. For a user to receive a set of login details (most
      commonly a username and password), the user must register an account with
      a merchant. Typically, this registration process requires the user to
      enter personal information and other account billing data present on their
      billing statement. Once a user performs this registration, they are able
      to provide the login details to the BillGO service. Subsequently, BillGO
      will synchronize the billing informationfor that user.


      However, when merchants redesign their billing and payment portal,
      especially when switching billing providers or payment processors, it is
      not uncommon for the merchant to require full re-registration by all
      users. When this occurs, BillGO will transition the associated record to
      no longer being able to be added (IsAddingEnabled becomes false), and any
      merchants that have been associated with users will become deprecated
      (LinkStatus becomes Deprecated). The merchant will have a record ID that
      the user is being migrated to (MigratedRecordId) and a user-directed
      message (Notice). The user directed message is meant to be as clear as
      possible for the user. This message will be shown in the support tool.


      Once deprecation occurs, the deprecated merchant will no longer be
      synchronized and the user must re-register before adding a merchant for
      the new record. The deprecated merchant can be left to contain a record of
      past payments or it can be removed at the user's discretion.


      ## Resource Caching

      BillGO exposes resources in a way that allows users of the API to maintain
      a local cache of the resources that can be stored and updated over time.
      The local cache can be maintained by using the Updated timestamp on each
      resource in conjunction with resource state changes that are represented
      in responses from the BillGO service.


      For a particular resource type, resources will be returned in one of
      several consistently named collections in any service response. These
      collections indicate whether a resource has been added, updated, removed
      or is included in a full list. In the case of additions, updates, and
      removals, the cache can use a combination of the Id property to uniquely
      identify the resource (and add/update/remove accordingly) and the Updated
      property of the resource to determine whether the cached copy should be
      replaced. With a full list, the entire cache can be replaced in its
      entirety.


      To illustrate with the Merchant resource type, Merchant resources can be
      returned in the following collections:


      Merchants: This represents a full list of merchants within the user
      account. When this collection is returned, the cached list of merchants
      should be replaced in its entirety with this list.


      MerchantsAdded: This represents a list of merchants that were added as
      part of the operation. Items in this collection should be added to the
      cache.


      MerchantsUpdated: This represents a list of merchants that were updated as
      part of the operation. Items in this collection should be added if not
      present in the cache or updated by examining the Id property.


      MerchantsRemoved: This represents a list of merchants that were removed as
      part of the operation. Items in this collection should be removed from the
      cache, if present, by using the Id property.


      Other resource types will return those resources in similarly-named
      collections. The behavior outlined above for merchants is applicable to
      all resource types.

      # BillGO Bill Pay API Examples

      There is an up-to-date collection of examples on how to exercise the API
      available at [BillGO Bill Pay
      API](https://documenter.getpostman.com/view/5565499/TzCS6mj9)

      # Sandbox

      The Sandbox is available for User Acceptance Testing.

      ## Merchants

      All merchants presented in the test environment return only test data;
      they do not interact with real merchant websites. These merchants take any
      combination of datums as long as they validate against the given datum
      patterns specified in the record. **Real merchant credentials should never
      be used in the test environment**.


      Special test records are available within the test environment to aid in
      testing specific merchant conditions. Each of these special test records
      will have the `isTest` property set to `true`. A sample list of these
      records follow, along with a description of when and how to use them.
      Unless specified otherwise, all test records will successfully athenticate
      using any string for the <code>username</code> and "Password!" as the
      <code>Password</code>.

      ## Datums

      The following are special test records that can be used to validate your
      implementation of datum handling during "Create Merchant" and "Update
      Merchant". Make sure to test against all these records.

      <table>

      <thead>

      <tr><th>Record</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>GEICO <code>GEICO_testCBP</code></td><td>Simple
      <code>Username</code> &amp; <code>Password</code> datums</td></tr>

      <tr><td>Toyota Financial Services
      <code>Toyota_Financial_Services_testCBP</code></td><td><code>Text</code>
      datum</td></tr>

      <tr><td>Sallie Mae Student Loans
      <code>Sallie_Mae_Student_Loans_testCBP</code></td><td><code>Text</code>
      datum &amp; <code>Date</code> datum</td></tr>

      <tr><td>Good to Go! <code>Good_to_Go_testCBP</code></td><td>Static
      <code>Choice</code> datum</td></tr>

      <tr><td>Mortgage Questions
      <code>Mortgage_Questions_testCBP</code></td><td><code>QuestionAnswer</code>
      datum ("Seattle") &amp; dynamic <code>QuestionAnswerChoice</code> datum
      ("2244 132nd Ave. SE")</td></tr>

      <tr><td>Sprint <code>Sprint_testCBP</code></td><td>Two-factor
      authentication using <code>QuestionAnswer</code> datum (Code
      "12345")</td></tr>

      <tr><td>Discover Card
      <code>Discover_Card_testCBP</code></td><td>Two-factor authentication using
      <code>QuestionAnswer</code> &amp; <code>QuestionAnswerChoice</code> datums
      (Code "12345")</td></tr>

      <tr><td>USAA <code>USAA_testCBP</code></td><td>Five successive
      <code>QuestionAnswer</code> datums (PIN "1234", others "Prism")</td></tr>

      <tr><td>Progressive Insurance
      <code>Progressive_Insurance_testCBP</code></td><td>Odd sync attempts
      successful, even sync attempts return <code>DatumsInvalid</code></td></tr>

      </tbody>

      </table>


      ## Payee Accounts

      A number of test records are available that generate unpaid payee accounts
      with various properties set:

      <table>

      <thead>

      <tr><th>Record</th><th style="text-align:center">Nickname</th><th
      style="text-align:center">Minimum Due</th><th
      style="text-align:center">Past Due</th><th style="text-align:center">Due
      Date</th><th style="text-align:center">Balance</th><th
      style="text-align:center">Payments</th></tr>

      </thead>

      <tbody>

      <tr><td>Capital One <code>Capital_One_Credit_Card_testCBP</code></td><td
      style="text-align:center">✔</td><td style="text-align:center">✔</td><td
      style="text-align:center"></td><td style="text-align:center">Today</td><td
      style="text-align:center">✔</td><td style="text-align:center">1</td></tr>

      <tr><td>NV Energy <code>NV_Energy_testCBP</code></td><td
      style="text-align:center"></td><td style="text-align:center"></td><td
      style="text-align:center"></td><td
      style="text-align:center">Tomorrow</td><td
      style="text-align:center"></td><td style="text-align:center">4</td></tr>

      <tr><td>Wells Fargo <code>Wells_Fargo_testCBP</code></td><td
      style="text-align:center">✔</td><td style="text-align:center"></td><td
      style="text-align:center"></td><td style="text-align:center">+3</td><td
      style="text-align:center"></td><td style="text-align:center">2</td></tr>

      <tr><td>American Express <code>American_Express_testCBP</code></td><td
      style="text-align:center">✔</td><td style="text-align:center"></td><td
      style="text-align:center">✔</td><td style="text-align:center">+4</td><td
      style="text-align:center">✔</td><td style="text-align:center">5</td></tr>

      <tr><td>Walmart Credit Card
      <code>Walmart_Credit_Card_testCBP</code></td><td
      style="text-align:center">✔</td><td style="text-align:center">✔</td><td
      style="text-align:center"></td><td style="text-align:center">+5</td><td
      style="text-align:center">✔</td><td style="text-align:center">0</td></tr>

      <tr><td>Macy's Credit Card <code>Macy's_Credit_Card_testCBP</code></td><td
      style="text-align:center"></td><td style="text-align:center">✔</td><td
      style="text-align:center"></td><td style="text-align:center">+6</td><td
      style="text-align:center">✔</td><td style="text-align:center">1</td></tr>

      <tr><td>Infiniti Financial Services
      <code>Infiniti_Financial_Services_testCBP</code></td><td
      style="text-align:center"></td><td style="text-align:center"></td><td
      style="text-align:center"></td><td style="text-align:center">+9</td><td
      style="text-align:center">✔</td><td style="text-align:center">6</td></tr>

      <tr><td>GEICO <code>GEICO_testCBP</code></td><td
      style="text-align:center">✔</td><td style="text-align:center">✔</td><td
      style="text-align:center"></td><td style="text-align:center">+10</td><td
      style="text-align:center"></td><td style="text-align:center">0</td></tr>

      <tr><td>Atmos Energy <code>Atmos_Energy_testCBP</code></td><td
      style="text-align:center"></td><td style="text-align:center"></td><td
      style="text-align:center">✔</td><td style="text-align:center">+12</td><td
      style="text-align:center"></td><td style="text-align:center">3</td></tr>

      <tr><td>T-Mobile <code>T-Mobile_testCBP</code></td><td
      style="text-align:center"></td><td style="text-align:center"></td><td
      style="text-align:center"></td><td style="text-align:center">+18</td><td
      style="text-align:center"></td><td style="text-align:center">5</td></tr>

      <tr><td>JCPenney Rewards Credit Card
      <code>JCPenney_Rewards_Credit_Card_testCBP</code></td><td
      style="text-align:center"></td><td style="text-align:center">✔</td><td
      style="text-align:center">✔</td><td style="text-align:center">+23</td><td
      style="text-align:center">✔</td><td style="text-align:center">6</td></tr>

      </tbody>

      </table>


      The following records exhibit specific bill and payee account behavior.
      Make sure  your implementation handles all the situations presented by
      these payees as well. You will encounter these situations in the
      Production environment.

      <table>

      <thead>

      <tr><th>Record Name</th><th>Record ID</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>YMCA</td><td><code>YMCA_testCBP</code></td><td>No bill due
      (<code>Empty</code>)</td></tr>

      <tr><td>Verizon
      Wireless</td><td><code>Verizon_Wireless_testCBP</code></td><td>Bill on
      autopay (<code>ServiceAutomatic</code>)</td></tr>

      <tr><td>Old Navy Credit
      Card</td><td><code>Old_Navy_Credit_Card_testCBP</code></td><td>Scheduled
      bill (<code>ServiceScheduled</code>)</td></tr>

      <tr><td>Green Dot</td><td><code>Green_Dot_testCBP</code></td><td>No
      merchant accounts</td></tr>

      <tr><td>State Farm</td><td><code>State_Farm_testCBP</code></td><td>Two
      merchant accounts, due in past</td></tr>

      <tr><td>Kohl's Credit
      Card</td><td><code>Kohl's_Credit_Card_testCBP</code></td><td>Three
      merchant accounts</td></tr>

      <tr><td>Zales Credit
      Card</td><td><code>Zales_Credit_Card_testCBP</code></td><td>Due
      <code>Soon</code> &amp; due <code>Now</code> bills</td></tr>

      <tr><td>Bill Me
      Later</td><td><code>Bill_Me_Later_Deprecated_testCBP</code></td><td><code>Deprecated</code>
      merchant, migrated to PayPal</td></tr>

      <tr><td>PayPal</td><td><code>PayPal_testCBP</code></td><td><code>Unpaid</code>
      bill with a balance</td></tr>

      <tr><td>GMAC
      Mortgage</td><td><code>GMAC_Mortgage_testCBP</code></td><td><code>Unpaid</code>
      mortgage bill, gets <code>Deprecated</code> after a minute, migrated to
      Ocwen</td></tr>

      <tr><td>Ocwen</td><td><code>Ocwen_Loan_Servicing_testCBP</code></td><td><code>Unpaid</code>
      mortgage bill</td></tr>

      <tr><td>Audible</td><td><code>Audible_testCBP</code></td><td><code>Closed</code>
      merchant</td></tr>

      <tr><td>King County Animal
      Services</td><td><code>King_County_Animal_Services_testCBP</code></td><td><code>Locked</code>
      merchant ("unlocks" on subsequent sync)</td></tr>

      <tr><td>Microsoft
      Account</td><td><code>Microsoft_Account_testCBP</code></td><td><code>DatumsValid</code>
      merchant</td></tr>

      <tr><td>Charter
      Spectrum</td><td><code>Charter_Spectrum_testCBP</code></td><td><code>Pending</code>
      merchant</td></tr>

      <tr><td>Prudential Life
      Insurance</td><td><code>Prudential_Life_Insurance_testCBP</code></td><td>Very
      slow sync</td></tr>

      <tr><td>Verizon
      Residential</td><td><code>Verizon_Residential_testCBP</code></td><td>Record
      ID updates to Verizon Wireless</td></tr>

      <tr><td>Comcast</td><td><code>Comcast_testCBP</code></td><td>Merchant
      document available</td></tr>

      <tr><td>LoanCare</td><td><code>LoanCare_testCBP</code></td><td>Merchant
      <code>Locked</code> few minutes adding merchant. Two-factor authentication
      using <code>QuestionAnswer</code> datum (Code "98765")</td></tr>

      </tbody>

      </table>


      ## Custom Merchants

      The following test records let you manipulate the data being returned. For
      example, you can return a custom due date 

      and the amount due. By providing bill due dates in the past, you are able
      to generate a historical list of bills via 

      the "Update Payee Account" API.

      <table>

      <thead>

      <tr><th>Record: Choose Your Own Adventure
      <code>Choose_Your_Own_Adventure_testCBP</code></th></tr>

      </thead>

      <tbody>

      <tr><td>Beyond a <code>Username</code> and <code>Password</code>, this
      record takes an "Initial State" <code>Choice</code> datum
      (<code>Closed</code>, <code>Locked</code>, <code>Outage</code>, or
      "Bill"), an "Amount Due" <code>Text</code> datum, and a "Due Date"
      <code>Date</code> datum. The <code>Choice</code> datum determines the
      initial state of the merchant. In addition, by triggering a sync via
      <code>/merchants/{MerchantId}/sync</code>, the merchant will cycle through
      states: { <code>Closed</code> / <code>Locked</code> / <code>Outage</code>
      } -&gt; Bill -&gt; <code>DatumsInvalid</code> -&gt; { <code>Closed</code>
      / <code>Locked</code> / <code>Outage</code> / Bill } -&gt; ... Once you
      get <code>DatumsInvalid</code> you can update
      <code>/merchants/{MerchantId}</code> with new options of
      <code>Choice</code>, <code>Text</code>, and <code>Date</code> to determine
      what you want to see next. For example, if you choose "Bill" then the
      amount due on the bill will be determined by the <code>Text</code> datum
      and the due date will be determined by the <code>Date</code>
      datum.</td></tr>

      </tbody>

      </table>

      <table>

      <thead>

      <tr><th>Record: Target <code>Target_REDcard_testCBP</code></th></tr>

      </thead>

      <tbody>

      <tr><td>This record takes four datums - <code>Username</code>,
      <code>Password</code>, <code>ZipCode</code> and <code>Last 4 digits of
      SSN</code>. "Add Merchant" will return with a <code>DatumsMissing</code>
      status requiring a Two Factor Authentication (2FA) using a QuestionAnswer
      datum(Question - <code>Which year did you graduate?</code>). The answer
      <code>2000</code> can be provided via "Update Merchant" <code>POST
      /merchants/{MerchantId}</code>.</td></tr>

      </tbody>

      </table>


      <table>

      <thead>

      <tr><th>Record: The Swiss Colony Choose 'N Charge
      <code>The_Swiss_Colony_Choose_'N_Charge_testCBP</code></th></tr>

      </thead>

      <tbody>

      <tr><td>This record takes three datums: <code>Username</code>,
      <code>Password</code>, and a <code>Choice</code> for the number of
      merchant accounts: 1, 2, 3, 4, or 5. Pick the number of merchant accounts
      you want first, then "Add Merchant" will return with two instances of
      <code>QuestionAnswer</code> per merchant account.</td></tr>

      <tr><td>For example: With two merchant accounts, you'll get "Name of
      Merchant Account #1" and "Details of Merchant Account #1", "Name of
      Merchant Account #2" and "Details of Merchant Account #2", etc.</td></tr>

      <tr><td>The first <code>QuestionAnswer</code> of the pair determines the
      <code>Name</code> of the corresponding merchant account. This will only be
      needed one time, since it never changes. The second
      <code>QuestionAnswer</code> determines the details of the merchant
      account. It expects values in the form of comma-separated, key-value
      pairs. This <code>QuestionAnswer</code> will come back (as
      <code>DatumsInvalid</code>) every other sync so you can modify the details
      of the merchant account.</td></tr>

      <tr><td>For example: "Name of Merchant Account #1" could be "1234", and
      "Details of Merchant Account #1" might be "Nickname=My Mortgage,
      AmountDue=100.00, MinimumDue=25.00, PastDue=50.00, InvoiceDate=01/15/2017,
      DueDate=02/13/2017"</td></tr>

      <tr><td>Valid keys are <code>AmountDue</code>, <code>MinimumDue</code>,
      <code>PastDue</code>, <code>DueDate</code>, <code>InvoiceDate</code>,
      <code>Nickname</code>. Keys are case-insensitive. Most keys are optional.
      If filling out "Details" for the first time, <code>AmountDue</code> is
      required. If <code>AmountDue</code> is positive, then <code>DueDate</code>
      is required as well, otherwise <code>DueDate</code> will be ignored. If
      you were not to provide valid key-value pairs on subsequent syncs, we will
      re-use the previous info.</td></tr>

      </tbody>

      </table>


      ## Payments

      <p>The following test records provide different payment scenarios:</p>

      <table>

      <thead>

      <tr><th>Record: Dominion Energy
      <code>Dominion_Energy_testCBP</code></th></tr>

      </thead>

      <tbody>

      <tr><td>This record provides a way to test failed payment
      scenarios.</td></tr>

      <tr><td>In addition to <code>Username</code> and <code>Password</code>,
      this record takes a "Payment Status" <code>Choice</code> datum
      (<code>Completed</code>, <code>DatumsNeeded</code>,
      <code>MerchantActionRequired</code>, <code>PaymentAmountDeclined</code>,
      or <code>PayeeAccountDeclined</code>). The <code>Choice</code> datum
      specifies the expected payment payment state (Payment
      <code>ExtendedStatus</code>).</td></tr>

      <tr><td>If <code>DatumsNeeded</code> is selected, all the datums for the
      merchant will be invalidated, and you will have one minute to return with
      the new datums (including the expected password). If you do respond within
      this interval, the payment payment will fail.</td></tr>

      </tbody>

      </table>

      <table>

      <thead>

      <tr><th>Record: Frontier Communications
      <code>Frontier_Communications_testCBP</code></th></tr>

      </thead>

      <tbody>

      <tr><td>This record provides a way to test outage during
      payment.</td></tr>

      <tr><td>Upon making a payment, a payment payment in
      <code>PaymentStatus</code>=<code>Processing</code> +
      <code>PaymentExtendedStatus</code>=<code>Outage</code> is
      generated.</td></tr>

      </tbody>

      </table>


      <table>

      <thead>

      <tr><th>Record: Century Link <code>CenturyLink_testCBP</code></th></tr>

      </thead>

      <tbody>

      <tr><td>This record mimics the ability to pay an amount less than the
      amount due. Upon making a payment for this record, the
      <code>AmountRequested</code> in the payment will be a lesser value than
      the <code>AmountPaid</code>.</td></tr>

      </tbody>

      </table>

    name: Overview
  - description: >
      BillGO requires mutual TLS (mTLS) for authentication (certificate
      pinning).BillGO provides a `*.billgo-{environment}.com` public SSL
      certificate issued from a trusted certificate authority for our UAT and
      Production environments


      We expect to receive a public X.509 certificate for your systems in the
      form of a `.cer` or `.pem` file which we load into our trust stores to
      validate that the communication to BillGO originated from your systems.


      We also support SFTP file transfer where needed. PGP encryption of files
      transferred over SFTP can be used.


      We will provide you with a user@billgoserver SFTP location and BillGO
      public PGP key. We expect to receive a user on your SFTP host location,
      user@remoteserver, and the host PGP public key for that user from you. We
      will use your PGP public key to encrypt the files transferred and sign the
      encrypted file with the BillGO private PGP key. You can use the BillGO
      public key to verify the file integrity and your private PGP key to
      decrypt the files transferred.
    name: Authentication
  - description: >-
      BillGO avoids backwards-incompatible changes when at all possible. The API
      will be versioned in the event that a backward incompatible change needs
      to be introduced.


      Each client has an API version assigned to their integration. BillGO will
      support you in transitioning.
    name: Versioning
  - description: >-
      The following set of APIs support search functionality.


      # Sample UI

      Here is an example that presents the recommended merchants.<img
      src="https://api-docs.billgo-dev.com/assets/merchant_directory_ui.png"
      alt="Merchant Directory UI"></img>



      # Flow Diagram

      This flow diagram outlines how to interact with our API to produce this
      screen.<img
      src="https://api-docs.billgo-dev.com/assets/merchant_selection_process.png"
      alt="Merchant Selection Process"></img>
    name: Merchant Directory
  - description: Returns verified address suggestions for the address provided.
    name: Address Validation
  - description: API set for managing user profiles with BillGO.
    name: Users
  - description: API set for managing the `User`'s `FundingAccounts`.
    name: Funding Accounts
  - description: API set for managing the `User`'s `CustomerFundingAccounts`.
    name: Customer Funding Accounts
  - description: The following set of APIs support payee management functionality.
    name: Payees
  - description: The following set of APIs support payee account management functionality.
    name: Payee Accounts
  - description: A set of APIs to access bills.
    name: Bills
  - description: The following set of APIs support document functionality.
    name: Documents
  - description: >+
      The following set of APIs support payment management functionality.

      # Payment Status

      The following are the descriptions of the status and associated codes.
      More status and codes may be added at any time, so don't rely on only
      these existing in your code.

      ## Status

      <table>

      <thead>

      <tr><th>Status</th><th>Prior State</th><th>Description</th><th>Applies
      To</th></tr>

      </thead>

      <tbody>

      <tr><td>PENDING</td><td>PENDING</td><td>This status is reserved for any
      payment that has not been picked up for processing.</td><td>All</td></tr>

      <tr><td>PENDING_DEBITED</td><td></td><td>This status is used when the
      customer has been debited but the payment is still able to be
      edited.</td><td>All non-realtime payments. Realtime payments will move
      directly from PENDING to PENDING_DEBITED to PROCESSING.</td></tr>

      <tr><td>PROCESSING</td><td>PENDING</td><td>Once a payment is in
      PROCESSING, the payment cannot be edited.</td><td>All</td></tr>

      <tr><td>INFORMATION_NEEDED</td><td></td><td>This is flagged if more
      information is needed from the customer to make the same-day / real-time
      payment if time allows. We can skip this and fall back to a redundant
      network if not desired.</td><td>Real-time / same-day payments</td></tr>

      <tr><td>CANCELED</td><td></td><td>This is when the user has canceled the
      payment or the payment can't be made in the case of insufficient funds or
      fraud. Canceling is available if the payment is in one of the following
      status: PENDING, PENDING_DEBITED,
      INFORMATION_NEEDED.</td><td>All</td></tr>

      <tr><td>FAILURE</td><td></td><td>This is an internal status that indicates
      there was an error with the payment.</td><td>All</td></tr>

      <tr><td>COMPLETED</td><td></td><td>This status signals the payment has
      been sent to a rail to be paid. Or, in the case of EBN or CHECK, it means
      the payment was sent to the network.</td><td>All</td></tr>

      <tr><td>SUBMITTED</td><td></td><td>This status signals the payment has
      been sent to a rail to be paid. Or, in the case of EBN or CHECK, it means
      the payment was sent to the network.</td><td>All</td></tr>

      <tr><td>SUCCESS</td><td>COMPLETED</td><td>This status signals that the
      payment was successfully completed. For real-time payments, the biller has
      accepted the payment. For other delivery rails, it means that the rail as
      signed that the payment has been successful.</td><td>All</td></tr>

      <tr><td>SUCCESS_RETURN</td><td></td>SUCCESS<td>This status is used if a
      full return was processed for the user.</td><td>All</td></tr>

      <tr><td>SUCCESS_PARTIAL_RETURN</td><td>SUCCESS</td><td>This status is when
      a partial return for the payment was processed for the
      user.</td><td>All</td></tr>

      </tbody>

      </table>


      ## Status Codes

      <table>

      <thead>

      <tr><th>Status</th><th>Category</th><th>Code</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>FAILURE</td><td>BillerActionRequired</td><td>BillNotFound</td><td>The
      payment failed because this bill can no longer be found on the
      website.</td></tr>

      <tr><td></td><td></td><td>CardSecurityCodeIncorrect</td><td>The payment
      failed because the security code of the card used for the payment was
      incorrect.</td></tr>

      <tr><td></td><td></td><td>Deprecated</td><td>The payment failed because
      the merchant has updated its online system.</td></tr>

      <tr><td></td><td></td><td>Locked</td><td>The payment failed because the
      user's login credentials are locked.</td></tr>

      <tr><td></td><td></td><td>Outage</td><td>The payment failed because the
      merchant's website is experiencing an outage.</td></tr>

      <tr><td></td><td></td><td>PaymentDisabled</td><td>The payment failed
      because the merchant is reporting the user is not eligible to make online
      payments.</td></tr>

      <tr><td></td><td></td><td>Subsumed</td><td>The payment failed because the
      merchant indicates  the user may have already made the payment via other
      means.</td></tr>

      <tr><td></td><td>PaymentAccountDeclined</td><td>BankOnly</td><td>The
      payment failed because the merchant accepts only bank account
      payments.</td></tr>

      <tr><td></td><td></td><td>CardExpired</td><td>The payment failed because
      the card used for making the payment has expired.</td></tr>

      <tr><td></td><td></td><td>CardOnly</td><td>The payment failed because the
      merchant accepts only card payments.</td></tr>

      <tr><td></td><td></td><td>CardSecurityCodeIncorrect</td><td>The payment
      failed because the security code of the card used for the payment was
      incorrect.</td></tr>

      <tr><td></td><td></td><td>CreateSecurityQuestions</td><td>The payment
      failed because the merchant is requiring the user to set security
      questions on the online account.</td></tr>

      <tr><td></td><td></td><td>Declined</td><td>The payment failed because the
      merchant did not accept the payment.</td></tr>

      <tr><td></td><td></td><td>ExternalNotAllowed</td><td>The payment failed
      because the merchant won't allow payments from an external bank.</td></tr>

      <tr><td></td><td></td><td>ExternalNotValidated</td><td>The payment failed
      because the external bank account used must first be validated on the
      merchant's website.</td></tr>

      <tr><td></td><td></td><td>VirtualPaymentAllocation</td><td>The payment
      failed because the merchant will not accept the payment account at this
      time.</td></tr>

      <tr><td></td><td></td><td>ZipCodeIncorrect</td><td>The payment failed
      because the payment account has an incorrect ZIP Code.</td></tr>

      <tr><td></td><td>PaymentAmountDeclined</td><td>LessThanAmountDisallowed</td><td>The
      payment failed because the merchant won't allow a payment of less than a
      specific amount.</td></tr>

      <tr><td></td><td></td><td>LessThanOwedDisallowed</td><td>The payment
      failed because the merchant won't allow payment amounts less than the
      amount owed.</td></tr>

      <tr><td></td><td></td><td>NewLargerAmountDue</td><td>The payment failed
      because the merchant is reporting  the user now owes a larger
      amount.</td></tr>

      <tr><td></td><td>DatumsNeeded</td><td>IdentificationCodeRequired</td><td>The
      payment failed because merchant required another one-time code
      verification.</td></tr>

      <tr><td></td><td></td><td>DatumsInvalid</td><td>The payment failed because
      the user's answers did not match  the datums the merchant has on
      file.</td></tr>

      <tr><td></td><td></td><td>DatumsMissing</td><td>The payment failed because
      the user did not provide the answers to the merchant's questions required
      for the payment to complete.</td></tr>

      <tr><td></td><td>Other</td><td>ComplianceDeclined</td><td>The payment was
      failed because we're having trouble verifying details about the
      user.</td></tr>

      <tr><td></td><td></td><td>ExpirationTimeExceeded</td><td>The payment was
      failed because it reached the specified expiration time.</td></tr>

      <tr><td>CANCELED</td><td>PaymentCanceled</td><td>BillNotFound</td><td>The
      payment was canceled.</td></tr>

      <tr><td></td><td></td><td>CSR</td><td>The payment was canceled by the
      customer service representative.</td></tr>

      <tr><td></td><td></td><td>Customer</td><td>The payment was canceled by the
      customer.</td></tr>

      <tr><td></td><td></td><td>NSF</td><td>The payment was cancelled due to
      insufficient funds.</td></tr>

      <tr><td></td><td></td><td>Fraud</td><td>The payment was identified as
      fraudulent.</td></tr>

      </tbody>

      </table>

    name: Payments
  - description: The following set of APIs support recurring payments.
    name: Schedules
  - description: >+
      Notifications summarize events of interest for a user. Such events may
      include "new bill available", "bill due tomorrow", "payee missing datum",
      and "payee locked". Notifications are transient and may only exist for
      short periods of time (for example, a notification denoting "bill due
      tomorrow" may only be around for one day, before being replaced with a new
      notification "bill due today").


      Since notifications are events of interest to a user, you should feel free
      to treat the full list of notifications like a transient "news feed" for a
      user and to show these notifications directly. User-friendly text will be
      provided in the notification's `title` and `subtitle` properties. In
      addition, the `level` property can be used to determine the priority
      and/or mechanism to notify the user (SMS vs. e-mail, for example). Other
      properties on the notification, like `payeeAccountIds` will tell you which
      `Payee` the notification relates to.# Notification Types

      The following are the user notification types we currently support:
      `SYNC`, `BILL`, `PAYMENT`, and `PAYEE_ACCOUNT`. For each type, you can
      look at the "status" and optionally, "extendedStatus" for more detailed
      information. More types and extended statuses may be added at any time, so
      don't rely on only these types existing in your code.

      ## Link

      <table>

      <thead>

      <tr><th>LinkStatus</th><th>LinkExtendedStatus</th><th>Message</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>DatumsMissing</td><td></td><td>Login Details Missing</td><td>The
      payee is missing some login details.</td></tr>

      <tr><td>DatumsInvalid</td><td></td><td>Login Details Invalid</td><td>The
      payee's login details are incorrect.</td></tr>

      <tr><td>DatumsValid</td><td></td><td>Login Details Successfully
      Validated</td><td>The payee's datums have been verified.</td></tr>

      <tr><td>Linked</td><td></td><td>Merchant Linked</td><td>The payee was
      synced for the first time.</td></tr>

      <tr><td>Locked</td><td></td><td>Merchant Account Locked</td><td>The
      payment account has been locked on the payee's website.</td></tr>

      <tr><td>Locked</td><td>IdentificationCodeRequired</td><td>MFA
      Needed</td><td>The payee requires a multi-factor authentication
      code.</td></tr>

      <tr><td>Closed</td><td></td><td>Merchant Site Closed</td><td>The payment
      account has been closed on the payee's website.</td></tr>

      <tr><td>Outage</td><td></td><td>Merchant Site Experiencing an
      Outage</td><td>The payee website is experiencing problems. Info may be out
      of date.</td></tr>

      </tbody>

      </table>


      ## Bill

      <table>

      <thead>

      <tr><th>BillStatus</th><th>BillExtendedStatus</th><th>Message</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>Unpaid</td><td>Available</td><td>New Bill Created</td><td>A new
      bill is available.</td></tr>

      <tr><td>Unpaid</td><td>Available</td><td>New Bill Invoice
      Available</td><td>A new bill invoice is available.</td></tr>

      <tr><td>Unpaid</td><td>NearDue</td><td>Bill Due Soon</td><td>The bill is
      due soon.</td></tr>

      <tr><td>Unpaid</td><td>Due</td><td>Bill Due Today</td><td>The bill is due
      today or is due now.</td></tr>

      <tr><td>Unpaid</td><td>PastDue</td><td>Bill Past Due</td><td>The bill was
      due in the past.</td></tr>

      <tr><td>ServiceAutomatic</td><td></td><td></td><td>The bill is on autopay
      on the payee's website.</td></tr>

      <tr><td>ServiceScheduled</td><td></td><td></td><td>The bill is scheduled
      on the payee's website.</td></tr>

      <tr><td>RecurringAutomatic</td><td></td><td>Bill Now On
      Autopay</td><td>The bill is on autopay via the BillGO service.</td></tr>

      <tr><td>RecurringScheduled</td><td></td><td>Bill Payment
      Scheduled</td><td>The bill is scheduled via the BillGO service.</td></tr>

      </tbody>

      </table>


      ## PayeeAccount

      <table>

      <thead>

      <tr><th>PayeeAccountStatus</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>None</td><td>The account lacks status.</td></tr>

      <tr><td>Expiring</td><td>The account is expiring.</td></tr>

      <tr><td>Expired</td><td>The account has expired.</td></tr>

      <tr><td>Invalid</td><td>The account is invalid.</td></tr>

      </tbody>

      </table>


      ## Payment

      <table>

      <thead>

      <tr><th>PaymentStatus</th><th>PaymentExtendedStatus</th><th>Message</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>Processing</td><td>Outage</td><td></td><td>The payment has not yet
      been paid because of a payee outage.</td></tr>

      <tr><td>Completed</td><td></td><td></td><td>The payment has posted to
      processor for execution.</td></tr>

      <tr><td>Success</td><td></td><td>Payment Successful</td><td>The payment
      has been confirmed by the payee.</td></tr>

      <tr><td>Canceled</td><td></td><td></td><td>The payment has been canceled
      by the user.</td></tr>

      <tr><td>Failed</td><td></td><td></td><td>The payment failed and payment
      was not received by the payee.</td></tr>

      <tr><td>Failed</td><td>DatumsNeeded</td><td>Payment Not Successful-- Login
      Details may need to be updated</td><td>The payment failed because of
      missing or invalid datums.</td></tr>

      <tr><td>Failed</td><td>PayeeAccountDeclined</td><td></td><td>The payment
      failed because the payment account was not accepted by the
      payee.</td></tr>

      <tr><td>Failed</td><td>PayeeActionRequired</td><td></td><td>The payment
      failed because an action was required by the payee.</td></tr>

      <tr><td>Failed</td><td>PaymentAmountDeclined</td><td></td><td>The payment
      failed because the payment amount was not accepted by the payee.</td></tr>

      </tbody>

      </table>


      ## User

      <table>

      <thead>

      <tr><th>Message</th><th>Description</th></tr>

      </thead>

      <tbody>

      <tr><td>User Created</td><td>A new user has been added.</td></tr>

      <tr><td>User Email Address Updated</td><td>User's email address has been
      updated. </td></tr>

      <tr><td>User Phone Number Updated</td><td>User's phone number has been
      updated.</td></tr>

      </tbody>

      </table>

    name: Notifications
  - description: >+
      Webhooks can be used to be notified asynchronously of changes that happen
      to system resources. Since BillGO is responsible for keeping data in sync
      over time, it is both possible and expected for this data to change
      outside of and due to a client-initiated request. A webhook can be
      utilized to learn of these changes in an asynchronous manner. By
      registering a webhook URL, we will notify you any time a system resource
      change occurs within your account.


      The webhook should be a dedicated endpoint on your server. The webhook URL
      can be configured per-environment - Production and User Acceptance Test.
      Once this URL and notifications to receive has been configured, every time
      relevant data within the BillGO system changes, a POST to the URL will be
      performed. The provided URL must use mTLS connection to ensure data is not
      transmitted in the clear.

      ## Security

      To secure your webhook endpoints so they are not accessed by a third
      party, the BillGO Bill Pay API requires mTLS connection (aka certificate
      pinning).

      ## Response

      To acknowledge receipt of a webhook notification, your endpoint should
      return a 2xx HTTP status code. Any other information returned in the
      response will be ignored. All response codes outside this range, including
      3xx, 4xx, and 5xx status codes will be treated as failures.


      If a webhook notification is not successfully received for any reason,
      BillGO will continue to resend the webhook using an exponential back off
      algorithm until successfully delivered. Webhook notifications are sent
      asynchronously and are not guaranteed to be delivered or received in
      order. You should protect against duplicate notifications by making
      notification processing idempotent. A notification identifier is
      guaranteed to be unique.

      ## Best Practices

      If your webhook script performs complex logic, or makes network calls,
      it's possible the script may timeout before BillGO receives your response.
      As a result, you may want to have your endpoint immediately acknowledge
      receipt by returning a 2xx HTTP status code before processing the webhook
      notification. Similarly, although we will reattempt delivery of a webhook
      in the event of an error response, it's best to save or cache the webhook
      notification and immediately acknowledge receipt before processing. Keep
      complex logic out of your webhook script in order to keep event ordering
      more predictable.

      ## Notifications

      In BillGO, system resource changes are exposed as notifications. As a
      client, you can configure which notifications you'd like to receive. Any
      time a system resource changes, notifications are created, and a webhook
      notification will be triggered. Included in the payload are current and
      previous state of the system resource as defined in the resource
      descriptions in the API. A consumer of the webhook may compare the
      received notification previous and current state data to determine what
      action should be taken. This allows you to capture system state and notify
      your customers as needed. The USER_NOTIFICATION details.resourceType is
      for all notifications that we have categorized as important for the user.


      Notification fields:

      <table>
          <tr><th>Field</th><th>Description</th></tr>
          <tr><td>id</td><td>The unique identifier for the notification</td></tr>
          <tr><td>created</td><td>The timestamp of when the notification was created</td></tr>
          <tr><td>updated</td><td>The timestamp of when the notification was updated</td></tr>
          <tr><td>delivered</td><td>The timestamp of when the notification was delivered</td></tr>
          <tr><td>deliveryAttempts</td><td>The number of attempts made to deliver the notification</td></tr>
          <tr><td>details</td><td>The notification details</td></tr>
          <tr><td>details.userId</td><td>The identifier for the User</td></tr>
          <tr><td>details.partnerUserId</td><td>The partner identifier for the User that allows the partner to access the BillGO User</td></tr>
          <tr><td>details.resourceType</td><td>Indicates the type of the resource (USER, PAYEE, PAYEE_ACCOUNT, BILL, DOCUMENT, PAYMENT, SCHEDULE, USER_NOTIFICATION, USER_JWT)</td></tr>
          <tr><td>details.resourceUrl</td><td>The relative URL to retrieve the resource that the notification is associated with</td></tr>
          <tr><td>details.resource</td><td>The new or updated JSON string representation of the resource that the notification is associated with</td></tr>
          <tr><td>details.previousResource</td><td>The previous JSON string representation of the resource that the notification is associated with</td></tr>
          <tr><td>details.apiVersion</td><td>The API version of the resource that the notification is associated with</td></tr>
          <tr><td>details.isTest</td><td>Indicates if the notification is for a test resource</td></tr>
          <tr><td>details.operationType</td><td>Indicates if the resource was `CREATED`, `UPDATED`, or `REMOVED`</td></tr>
      </table>


      ## Example Payloads


      ### User


          {

          "id":"e_fbd40f3f63b14400824b945635a63d52",

          "created":"2018-01-01T13:01:01Z",

          "updated":"2018-01-01T13:30:01Z",

          "delivered":"2018-01-01T13:30:01Z",

          "deliveryAttempts":"1",

          "details":{

              "resourceType":"USER",

              "resourceUrl":"/users/user_a212f949-c989-4e90-bd16-ee4085a9157a",

              "resource":"{\"id\":\"user_a212f949-c989-4e90-bd16-ee4085a9157a\",\"created\":{\"epochSecond\":1605737233,\"nano\":500000000},\"updated\":{\"epochSecond\":1605737233,\"nano\":500000000},\"partnerUserId\":\"bill.billerson1605737222742\",\"status\":\"ACTIVE\",\"reasonForDisabling\":null,\"reasonForEnabling\":null,\"profile\":{\"type\":\"PERSONAL\",\"accountHolderName\":{\"type\":\"INDIVIDUAL\",\"firstName\":\"Bill\",\"middleNameOrInitial\":null,\"lastName\":\"Billerson\",\"suffix\":\"III\",\"businessName\":null,\"openFormNameField\":null},\"taxId\":\"123-45-6789\",\"dateOfBirth\":{\"year\":1969,\"month\":\"JULY\",\"monthValue\":7,\"dayOfMonth\":4,\"chronology\":{\"calendarType\":\"iso8601\",\"id\":\"ISO\"},\"leapYear\":false,\"dayOfWeek\":\"FRIDAY\",\"dayOfYear\":185,\"era\":\"CE\"},\"primaryPhone\":{\"phoneNumber\":\"+1 970 123 4561\",\"extension\":null,\"type\":\"MOBILE\",\"verified\":null},\"secondaryPhone\":{\"phoneNumber\":null,\"extension\":null,\"type\":null,\"verified\":null},\"tertiaryPhone\":{\"phoneNumber\":null,\"extension\":null,\"type\":null,\"verified\":null},\"emailAddress\":null,\"emailVerified\":null,\"emailLastUpdated\":null,\"customerConsent\":{},\"addresses\":[{\"defaultAddress\":true,\"id\":\"addr_e2985df5-8026-4e98-8caa-5d87e877d0f0\",\"created\":{\"epochSecond\":1605737233,\"nano\":576000000},\"updated\":{\"epochSecond\":1605737233,\"nano\":576000000},\"status\":\"ACTIVE\",\"type\":\"MAILING\",\"verified\":null,\"addressLine1\":\"3003 E Harmony Rd\",\"addressLine2\":\"Ste 500\",\"city\":\"Fort Collins\",\"stateAbbreviation\":\"CO\",\"postalCode\":\"80528-9628\",\"countryCode\":\"US\"}],\"accountSubType\":null,\"businessProprietor\":null,\"bankAccountEnrollmentDate\":null,\"enrollmentSource\":null,\"olbStartDate\":null,\"billPaySinceDate\":null,\"customerRelationshipStartDate\":null},\"accountOrigin\":\"NEW\",\"test\":false,\"payees\":null}",

              "previousResource":null,

              "apiVersion":"v.20200501",

              "isTest":"false",

              "operationType":"CREATED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### Payee


          {

          "id":"e_fbd40f3f63b14400824b945635a63d52",

          "created":"2018-01-01T13:01:01Z",

          "updated":"2018-01-01T13:30:01Z",

          "delivered":"2018-01-01T13:30:01Z",

          "deliveryAttempts":"1",

          "details":{

              "resourceType":"PAYEE",

              "resourceUrl":"/users/user_aa314deb-4f05-408d-90be-8ba0efe12427/payees/payee_5b8aa9de-148e-463c-9efd-cff0930f10b9",

              "resource":"{\"id\":\"payee_5b8aa9de-148e-463c-9efd-cff0930f10b9\",\"created\":{\"nano\":580000000,\"epochSecond\":1605737690},\"updated\":{\"nano\":580000000,\"epochSecond\":1605737690},\"status\":\"ACTIVE\",\"name\":\"GEICO (Test)\",\"merchantPhoneNumber\":\"+1 970 867 5309\",\"naicsCodes\":null,\"linkData\":null,\"notice\":null,\"accounts\":null,\"merchantLink\":null,\"merchantLocationId\":null,\"merchantAddress\":null,\"trusted\":false,\"linkStatus\":null,\"payerAddress\":null}",

              "previousResource":null,

              "apiVersion":"v.20200501",

              "isTest":"false",

              "operationType":"CREATED"

            }

          }



      ### Payee Account


          {

          "id":"e_fbd40f3f63b14400824b945635a63d52",

          "created":"2018-01-01T13:01:01Z",

          "updated":"2018-01-01T13:30:01Z",

          "delivered":"2018-01-01T13:30:01Z",

          "deliveryAttempts":"1",

          "details":{

              "resourceType":"PAYEE_ACCOUNT",

              "resourceUrl":"/users/user_aa314deb-4f05-408d-90be-8ba0efe12427/payeeaccounts/pacct_bbe916c5-f722-4048-9d13-82081a02c626",

              "resource":"{\"id\":\"pacct_bbe916c5-f722-4048-9d13-82081a02c626\",\"created\":{\"nano\":318000000,\"epochSecond\":1605737794},\"updated\":{\"nano\":318000000,\"epochSecond\":1605737794},\"established\":{\"nano\":0,\"epochSecond\":1539534060},\"hidden\":false,\"status\":\"PENDING\",\"name\":\"Ford F150 Insurance\",\"notice\":null,\"accountRemittanceInfo\":null,\"paymentInfo\":{\"id\":\"pinfo_220834f6-f4a3-45e2-a2b5-de42b90c0fa3\",\"created\":{\"nano\":320000000,\"epochSecond\":1605737794},\"updated\":{\"nano\":320000000,\"epochSecond\":1605737794},\"isPayable\":null,\"lastPayment\":null,\"nextPayment\":null,\"isCustomerFundingAccountTypeSupported\":null,\"fundingAccount\":{\"id\":\"fa_08aca226-a7fa-4669-aac9-7eba69aadd0b\",\"created\":{\"nano\":345000000,\"epochSecond\":1605737779},\"updated\":{\"nano\":345000000,\"epochSecond\":1605737779},\"status\":\"ACTIVE\",\"type\":\"ACCOUNT_DETAILS\",\"defaultFundingAccount\":true,\"partnerId\":null,\"nickname\":null,\"bankAccount\":{\"id\":\"ba_8c9d92e4-f4c9-48eb-9b4c-8ba8b322b6a6\",\"created\":{\"nano\":328000000,\"epochSecond\":1605737779},\"updated\":{\"nano\":346000000,\"epochSecond\":1605737779},\"type\":\"DDA\",\"subType\":\"CHECKING\",\"authorizedUsers\":[],\"accountNumber\":\"####1875\",\"routingNumber\":\"102001017\"}},\"customerFundingAccount\":null,\"recurringSchedule\":null},\"billStatus\":null,\"payerAddress\":{\"id\":\"addr_025475ac-3a15-4a55-8335-30da38dc07db\",\"created\":{\"nano\":602000000,\"epochSecond\":1605737532},\"updated\":{\"nano\":321000000,\"epochSecond\":1605737794},\"status\":\"ACTIVE\",\"type\":\"MAILING\",\"verified\":null,\"addressLine1\":\"3003 E Harmony Rd\",\"addressLine2\":\"Ste 500\",\"city\":\"Fort Collins\",\"stateAbbreviation\":\"CO\",\"postalCode\":\"80528-9628\",\"countryCode\":\"US\"},\"owedBalance\":null,\"payments\":[],\"latestBill\":null,\"documentEnrollmentStatus\":\"NONE\",\"latestDocumentId\":null,\"base64PayeeLogo\":null,\"payeeInfo\":{\"linkStatus\":\"NOT_LINKABLE\"},\"payeeLink\":null,\"accountToAccountPayeeInfo\":{\"id\":\"parema_7738b885-34b9-48b8-b454-6bd683045dc6\",\"created\":{\"nano\":317000000,\"epochSecond\":1605737794},\"updated\":{\"nano\":317000000,\"epochSecond\":1605737794},\"bankAccountLast4\":\"####8484\",\"routingNumberLast4\":\"#####6789\",\"payeeAccountType\":\"CHECKING\"}}",

              "previousResource":null,

              "apiVersion":"v.20200501",

              "isTest":"false",

              "operationType":"CREATED"

            }

          }



      ### Payment


          {

          "id":"e_fbd40f3f63b14400824b945635a63d52",

          "created":"2018-01-01T13:01:01Z",

          "updated":"2018-01-01T13:01:01Z",

          "delivered":"2018-01-01T13:30:01Z",

          "deliveryAttempts":"1",

          "details":{

              "resourceType":"PAYMENT",

              "resourceUrl":"/users/bill.billerson1605737525050/payments/pymt_9eb637c7-3fbb-453e-a2a0-ef05c118b0c0",

              "resource":"{\"id\":\"pymt_9eb637c7-3fbb-453e-a2a0-ef05c118b0c0\",\"created\":{\"nano\":184000000,\"epochSecond\":1605737848},\"updated\":{\"nano\":184000000,\"epochSecond\":1605737848},\"originationType\":\"RECURRENCE_SCHEDULE_PAYMENT\",\"partnerId\":\"bill.billerson16057375250502020-11-18T22:17:28.103Z\",\"status\":\"PENDING\",\"statusCode\":null,\"sendOnDate\":{\"year\":2020,\"month\":\"NOVEMBER\",\"chronology\":{\"id\":\"ISO\",\"calendarType\":\"iso8601\"},\"monthValue\":11,\"dayOfMonth\":18,\"dayOfWeek\":\"WEDNESDAY\",\"dayOfYear\":323,\"era\":\"CE\",\"leapYear\":true},\"deliverByDate\":null,\"memo\":\"this is a memo\",\"feeAllowance\":null,\"paymentAmount\":{\"amount\":\"168.94\",\"currency\":\"USD\"},\"fundingAccount\":{\"id\":\"fa_08aca226-a7fa-4669-aac9-7eba69aadd0b\",\"created\":{\"nano\":345000000,\"epochSecond\":1605737779},\"updated\":{\"nano\":345000000,\"epochSecond\":1605737779},\"status\":\"ACTIVE\",\"type\":\"ACCOUNT_DETAILS\",\"defaultFundingAccount\":true,\"partnerId\":null,\"nickname\":null,\"bankAccount\":{\"id\":\"ba_8c9d92e4-f4c9-48eb-9b4c-8ba8b322b6a6\",\"created\":{\"nano\":328000000,\"epochSecond\":1605737779},\"updated\":{\"nano\":346000000,\"epochSecond\":1605737779},\"type\":\"DDA\",\"subType\":\"CHECKING\",\"authorizedUsers\":[],\"accountNumber\":\"####1875\",\"routingNumber\":\"102001017\"}},\"customerFundingAccount\":null,\"paymentResult\":null,\"payeeAccountLink\":{\"uri\":\"/users/bill.billerson1605737525050/payeeaccounts/pacct_bbe916c5-f722-4048-9d13-82081a02c626\",\"params\":{\"rel\":\"payee account\"},\"title\":null,\"type\":null,\"uriBuilder\":{\"absolute\":false},\"rel\":\"payee account\",\"rels\":[\"payee\",\"account\"]},\"recurrenceScheduleId\":null,\"attributes\":null,\"payeeSummary\":null}",

              "previousResource":null,

              "apiVersion":"v.20200501",

              "isTest":"false",

              "operationType":"CREATED"

            }

          }



      ### User Created


          {

          "id":5bf39377-fc8c-7b13-a4f4-4e72a9de3a81,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"USER",

              "resourceUrl":"/users/fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "resource":"{\"id\":\"fc4522ad-ceb0-4f92-8aa8-9501a2252f25\",\"externalId\":null,\"created\":null,\"updated\":null,\"partnerUserId\":\"972ff9fb-e97e-4f5a-aacf-066519ec9fa8\",\"status\":\"ACTIVE\",\"reasonForDisabling\":null,\"reasonForEnabling\":null,\"profile\":{\"type\":\"PERSONAL\",\"accountHolderName\":{\"type\":\"INDIVIDUAL\",\"firstName\":\"Nancy\",\"middleNameOrInitial\":\"K\",\"lastName\":\"Wilson\",\"suffix\":null,\"businessName\":null,\"openFormNameField\":null},\"taxId\":\"123-45-6789\",\"dateOfBirth\":\"1959-01-03\",\"primaryPhone\":{\"phoneNumber\":\"+ 719 271 0052\",\"extension\":null,\"type\":\"MOBILE\",\"verified\":null},\"secondaryPhone\":null,\"tertiaryPhone\":null,\"emailAddress\":\"test.email.address@billgo.com\",\"emailVerified\":null,\"emailLastUpdated\":null,\"customerConsent\":null,\"addresses\":[{\"defaultAddress\":true,\"addressLine3\":null,\"addressLine4\":null,\"province\":null,\"id\":null,\"externalId\":null,\"created\":null,\"updated\":null,\"status\":\"ACTIVE\",\"type\":\"PHYSICAL\",\"verified\":null,\"addressLine1\":\"6830 NE Bothell Way\",\"addressLine2\":\"Ste C\",\"city\":\"Kenmore\",\"stateAbbreviation\":\"WA\",\"postalCode\":\"98028-3546\",\"countryCode\":\"US\"}],\"accountSubType\":null,\"businessProprietor\":null,\"bankAccountEnrollmentDate\":null,\"enrollmentSource\":null,\"olbStartDate\":null,\"billPaySinceDate\":null,\"customerRelationshipStartDate\":null},\"accountOrigin\":\"NEW\",\"test\":null,\"payees\":null}",

              "previousResource":null,

              "apiVersion":null,

              "isTest":null,

              "operationType":"CREATED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### User Updated


          {

          "id":200e148d-5896-47a9-a923-a818554317c9,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"USER",

              "resourceUrl":"/users/fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "resource":"{\"id\":\"fc4522ad-ceb0-4f92-8aa8-9501a2252f25\",\"externalId\":null,\"created\":null,\"updated\":null,\"partnerUserId\":\"972ff9fb-e97e-4f5a-aacf-066519ec9fa8\",\"status\":\"ARCHIVED\",\"reasonForDisabling\":null,\"reasonForEnabling\":null,\"profile\":{\"type\":\"PERSONAL\",\"accountHolderName\":{\"type\":\"INDIVIDUAL\",\"firstName\":\"Jane\",\"middleNameOrInitial\":null,\"lastName\":\"Clark\",\"suffix\":null,\"businessName\":null,\"openFormNameField\":null},\"taxId\":\"62-4347688\",\"dateOfBirth\":\"1973-12-04\",\"primaryPhone\":{\"phoneNumber\":\"+ 719 271 0052\",\"extension\":null,\"type\":\"MOBILE\",\"verified\":null},\"secondaryPhone\":null,\"tertiaryPhone\":null,\"emailAddress\":\"test.email.address@billgo.com\",\"emailVerified\":null,\"emailLastUpdated\":null,\"customerConsent\":null,\"addresses\":[{\"defaultAddress\":true,\"addressLine3\":null,\"addressLine4\":null,\"province\":null,\"id\":null,\"externalId\":null,\"created\":null,\"updated\":null,\"status\":\"ACTIVE\",\"type\":\"PHYSICAL\",\"verified\":null,\"addressLine1\":\"6830 NE Bothell Way\",\"addressLine2\":\"Ste C\",\"city\":\"Kenmore\",\"stateAbbreviation\":\"WA\",\"postalCode\":\"98028-3546\",\"countryCode\":\"US\"}],\"accountSubType\":null,\"businessProprietor\":null,\"bankAccountEnrollmentDate\":null,\"enrollmentSource\":null,\"olbStartDate\":null,\"billPaySinceDate\":null,\"customerRelationshipStartDate\":null},\"accountOrigin\":\"NEW\",\"test\":null,\"payees\":null}",

              "previousResource":"{\"id\":null,\"externalId\":null,\"created\":null,\"updated\":null,\"partnerUserId\":\"972ff9fb-e97e-4f5a-aacf-066519ec9fa8\",\"status\":\"ACTIVE\",\"reasonForDisabling\":null,\"reasonForEnabling\":null,\"profile\":{\"type\":\"PERSONAL\",\"accountHolderName\":{\"type\":\"INDIVIDUAL\",\"firstName\":\"Jane\",\"middleNameOrInitial\":null,\"lastName\":\"Clark\",\"suffix\":null,\"businessName\":null,\"openFormNameField\":null},\"taxId\":\"62-4347688\",\"dateOfBirth\":\"1973-12-04\",\"primaryPhone\":{\"phoneNumber\":\"+ 719 271 0052\",\"extension\":null,\"type\":\"MOBILE\",\"verified\":null},\"secondaryPhone\":null,\"tertiaryPhone\":null,\"emailAddress\":\"test.email.address@billgo.com\",\"emailVerified\":null,\"emailLastUpdated\":null,\"customerConsent\":null,\"addresses\":[{\"defaultAddress\":true,\"addressLine3\":null,\"addressLine4\":null,\"province\":null,\"id\":null,\"externalId\":null,\"created\":null,\"updated\":null,\"status\":\"ACTIVE\",\"type\":\"PHYSICAL\",\"verified\":null,\"addressLine1\":\"6830 NE Bothell Way\",\"addressLine2\":\"Ste C\",\"city\":\"Kenmore\",\"stateAbbreviation\":\"WA\",\"postalCode\":\"98028-3546\",\"countryCode\":\"US\"}],\"accountSubType\":null,\"businessProprietor\":null,\"bankAccountEnrollmentDate\":null,\"enrollmentSource\":null,\"olbStartDate\":null,\"billPaySinceDate\":null,\"customerRelationshipStartDate\":null},\"accountOrigin\":\"NEW\",\"test\":null,\"payees\":null}",

              "apiVersion":null,

              "isTest":null,

              "operationType":"UPDATED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### User Removed


          {

          "id":9badc1b6-ffc6-4015-9939-544c6172261e,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"USER",

              "resourceUrl":null,

              "resource":null,

              "previousResource":"{\"id\":null,\"externalId\":null,\"created\":null,\"updated\":null,\"partnerUserId\":\"972ff9fb-e97e-4f5a-aacf-066519ec9fa8\",\"status\":\"ACTIVE\",\"reasonForDisabling\":null,\"reasonForEnabling\":null,\"profile\":{\"type\":\"PERSONAL\",\"accountHolderName\":{\"type\":\"INDIVIDUAL\",\"firstName\":\"Henry\",\"middleNameOrInitial\":null,\"lastName\":\"Davis\",\"suffix\":\"Sr\",\"businessName\":null,\"openFormNameField\":null},\"taxId\":\"321-54-9876\",\"dateOfBirth\":\"1848-01-24\",\"primaryPhone\":{\"phoneNumber\":\"+ 719 271 0052\",\"extension\":null,\"type\":\"MOBILE\",\"verified\":null},\"secondaryPhone\":null,\"tertiaryPhone\":null,\"emailAddress\":\"test.email.address@billgo.com\",\"emailVerified\":null,\"emailLastUpdated\":null,\"customerConsent\":null,\"addresses\":[{\"defaultAddress\":true,\"addressLine3\":null,\"addressLine4\":null,\"province\":null,\"id\":null,\"externalId\":null,\"created\":null,\"updated\":null,\"status\":\"ACTIVE\",\"type\":\"PHYSICAL\",\"verified\":null,\"addressLine1\":\"6830 NE Bothell Way\",\"addressLine2\":\"Ste C\",\"city\":\"Kenmore\",\"stateAbbreviation\":\"WA\",\"postalCode\":\"98028-3546\",\"countryCode\":\"US\"}],\"accountSubType\":null,\"businessProprietor\":null,\"bankAccountEnrollmentDate\":null,\"enrollmentSource\":null,\"olbStartDate\":null,\"billPaySinceDate\":null,\"customerRelationshipStartDate\":null},\"accountOrigin\":\"NEW\",\"test\":null,\"payees\":null}",

              "apiVersion":null,

              "isTest":null,

              "operationType":"REMOVED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### User Notification


          {

          "id":c6296b30-92cd-4408-892c-72737a5980f8,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"USER_NOTIFICATION",

              "resourceUrl":"/users/fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "resource":"{\"id\":\"94637191-f17b-4ed5-bb2d-653ec3b97795\",\"externalId\":null,\"created\":null,\"updated\":null,\"delivered\":null,\"deliveryStatus\":\"QUEUED\",\"deliveryAttempts\":0,\"details\":{\"userId\":\"578df455-4869-4e33-bbfa-d4e061ec9942\",\"partnerUserId\":\"9079b6e9-f419-4304-8d90-4d7dfab1c8bb\",\"level\":\"NORMAL\",\"type\":\"PAYMENT\",\"payeeAccountIds\":null,\"status\":\"\",\"state\":{\"seen\":false,\"read\":false,\"dismissed\":false},\"content\":{\"title\":\"Payment: AT&T Mobility\",\"subtitle\":null,\"content\":\"Payment to AT&T Mobility was made for $125.00\"},\"extendedStatus\":\"NONE\"}",

              "previousResource":null,

              "apiVersion":null,

              "isTest":null,

              "operationType":"CREATED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### Schedule Created


          {

          "id":033a978b-fca3-45f2-b747-5de4198d965d,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"SCHEDULE",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"SCHEDULE",

              "resourceUrl":"/users/fc4522ad-ceb0-4f92-8aa8-9501a2252f25/schedules/s_161777ee-8ff0-4df4-a22e-c0a6cfc16236",

              "resource":"{\"id\":\"s_161777ee-8ff0-4df4-a22e-c0a6cfc16236\",\"externalId\":null,\"created\":\"2021-02-17T21:33:28.174457Z\",\"updated\":\"2021-02-17T21:33:28.174457Z\",\"partnerScheduleId\":null,\"status\":null,\"calendarBased\":null,\"billBased\":{\"paymentAmountConfig\":\"FIXED_AMOUNT\",\"daysRelativeToDueDate\":\"DUE_DATE\",\"fixedAmount\":{\"amount\":\"1.00\",\"currency\":\"USD\"},\"payCurrentBill\":false,\"validFixedAmount\":true,\"validNonFixedAmount\":true,\"validPaymentAllowance\":true},\"holidaySchedulingStrategy\":\"PAY_EARLY\",\"notifications\":null,\"feeAllowance\":null,\"endingSetting\":null,\"lastPayment\":null,\"nextPayment\":null,\"payeeAccountSummary\":null,\"payeeAccountLink\":null,\"payeeAccountId\":\"169fb8fd-a6bf-4e7f-863d-cc994bce2818\",\"initialPaymentAmount\":null,\"ofxToken\":null,\"paymentDeviceInfo\":null}",

              "previousResource":null,

              "apiVersion":null,

              "isTest":"false",

              "operationType":"CREATED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### Schedule Updated


          {

          "id":04578785-904b-498f-840c-add15a366488,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"SCHEDULE",

              "resourceUrl":"/users/fc4522ad-ceb0-4f92-8aa8-9501a2252f25/schedules/s_7c07ecfc-26ca-4e2d-9474-f4c6c40e4960",

              "resource":"{\"id\":\"s_7c07ecfc-26ca-4e2d-9474-f4c6c40e4960\",\"externalId\":null,\"created\":\"2021-02-17T21:33:28.177608Z\",\"updated\":\"2021-02-17T21:33:28.177608Z\",\"partnerScheduleId\":null,\"status\":\"TERMINATED\",\"calendarBased\":null,\"billBased\":{\"paymentAmountConfig\":\"FIXED_AMOUNT\",\"daysRelativeToDueDate\":\"DUE_DATE\",\"fixedAmount\":{\"amount\":\"1.00\",\"currency\":\"USD\"},\"payCurrentBill\":false,\"validFixedAmount\":true,\"validNonFixedAmount\":true,\"validPaymentAllowance\":true},\"holidaySchedulingStrategy\":\"PAY_EARLY\",\"notifications\":null,\"feeAllowance\":null,\"endingSetting\":null,\"lastPayment\":null,\"nextPayment\":null,\"payeeAccountSummary\":null,\"payeeAccountLink\":null,\"payeeAccountId\":\"75154651-cbb0-4a6e-b3bf-330121205d81\",\"initialPaymentAmount\":null,\"ofxToken\":null,\"paymentDeviceInfo\":null}",

              "previousResource":"{\"id\":\"s_7c07ecfc-26ca-4e2d-9474-f4c6c40e4960\",\"externalId\":null,\"created\":\"2021-02-17T21:33:28.177608Z\",\"updated\":\"2021-02-17T21:33:28.177608Z\",\"partnerScheduleId\":null,\"status\":null,\"calendarBased\":null,\"billBased\":{\"paymentAmountConfig\":\"FIXED_AMOUNT\",\"daysRelativeToDueDate\":\"DUE_DATE\",\"fixedAmount\":{\"amount\":\"1.00\",\"currency\":\"USD\"},\"payCurrentBill\":false,\"validFixedAmount\":true,\"validNonFixedAmount\":true,\"validPaymentAllowance\":true},\"holidaySchedulingStrategy\":\"PAY_EARLY\",\"notifications\":null,\"feeAllowance\":null,\"endingSetting\":null,\"lastPayment\":null,\"nextPayment\":null,\"payeeAccountSummary\":null,\"payeeAccountLink\":null,\"payeeAccountId\":\"75154651-cbb0-4a6e-b3bf-330121205d81\",\"initialPaymentAmount\":null,\"ofxToken\":null,\"paymentDeviceInfo\":null}",

              "apiVersion":null,

              "isTest":"false",

              "operationType":"UPDATED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### Schedule Removed


          {

          "id":32660d0f-e47f-47e5-8ff7-bbdfb28b22e9,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"SCHEDULE",

              "resourceUrl":null,

              "resource":null,

              "previousResource":"{\"id\":\"s_4cdc4e99-fe97-4837-a7ea-2f067db0dea5\",\"externalId\":null,\"created\":\"2021-02-17T21:33:28.180067Z\",\"updated\":\"2021-02-17T21:33:28.180067Z\",\"partnerScheduleId\":null,\"status\":null,\"calendarBased\":null,\"billBased\":{\"paymentAmountConfig\":\"FIXED_AMOUNT\",\"daysRelativeToDueDate\":\"DUE_DATE\",\"fixedAmount\":{\"amount\":\"1.00\",\"currency\":\"USD\"},\"payCurrentBill\":false,\"validFixedAmount\":true,\"validNonFixedAmount\":true,\"validPaymentAllowance\":true},\"holidaySchedulingStrategy\":\"PAY_EARLY\",\"notifications\":null,\"feeAllowance\":null,\"endingSetting\":null,\"lastPayment\":null,\"nextPayment\":null,\"payeeAccountSummary\":null,\"payeeAccountLink\":null,\"payeeAccountId\":\"9ae016da-3e91-457d-a54f-7b744d45e37b\",\"initialPaymentAmount\":null,\"ofxToken\":null,\"paymentDeviceInfo\":null}",

              "apiVersion":null,

              "isTest":"false",

              "operationType":"REMOVED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### Bill Created


          {

          "id":f5a61c25-1ff6-46cd-a978-038b9cc02b37,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"BILL",

              "resourceUrl":"/users/a854331b-5f81-44f2-b080-d122acfed5f7/bills/6c68bb81-b1da-400d-bd16-c0b75294fd6d",

              "resource":"{\"id\":\"6c68bb81-b1da-400d-bd16-c0b75294fd6d\",\"externalId\":null,\"created\":null,\"updated\":null,\"lastUpdated\":null,\"name\":null,\"nickName\":null,\"status\":null,\"extendedStatus\":null,\"amountDue\":{\"amount\":\"94401.06\",\"currency\":\"USD\"},\"minimumDue\":{\"amount\":\"18880.21\",\"currency\":\"USD\"},\"pastDue\":{\"amount\":\"4720.05\",\"currency\":\"USD\"},\"amountScheduled\":null,\"invoiceDate\":null,\"dueDate\":\"2021-02-27\",\"scheduledDate\":null,\"paidDate\":null,\"paidExternalDate\":null,\"skippedDate\":\"2021-03-19\",\"notice\":null,\"relatedDocumentIds\":null,\"payeeAccountLink\":null}",

              "previousResource":null,

              "apiVersion":null,

              "isTest":"false",

              "operationType":"CREATED",

              "userId":"fc4522ad-ceb0-4f92-8aa8-9501a2252f25",

              "partnerUserId":"972ff9fb-e97e-4f5a-aacf-066519ec9fa8"

            }

          }



      ### Bill Updated


          {

          "id":c1ef2035-2c76-458e-a6ee-cddc917b07e9,

          "created":"2021-02-17T21:33:31.344490Z",

          "updated":2021-02-17T21:33:52.432580Z,

          "delivered":null,

          "deliveryStatus":"QUEUED",

          "deliveryAttempts":0,

          "details":{

              "resourceType":"BILL",

              "resourceUrl":"/users/a854331b-5f81-44f2-b080-d122acfed5f7/bills/0e8b8464-d2c1-4710-b872-8d9d3a3c7486",

              "resource":"{\"id\":\"0e8b8464-d2c1-4710-b872-8d9d3a3c7486\",\"externalId\":null,\"created\":null,\"updated\":null,\"lastUpdated\":null,\"name\":null,\"nickName\":null,\"status\":\"PAID\",\"extendedStatus\":null,\"amountDue\":{\"amount\":\"49163.46\",\"currency\":\"USD\"},\"minimumDue\":{\"amount\":\"9832.69\",\"currency\":\"USD\"},\"pastDue\":{\"amount\":\"2458.17\",\"currency\":\"USD\"},\"amountScheduled\":null,\"invoiceDate\":null,\"dueDate\":\"2021-02-27\",\"scheduledDate\":null,\"paidDate\":null,\"paidExternalDate\":null,\"skippedDate\":\"2021-03-19\",\"notice\":null,\"relatedDocumentIds\":null,\"payeeAccountLink\":null}",

              "previousResource":"{\"id\":\"0e8b8464-d2c1-4710-b872-8d9d3a3c7486\",\"externalId\":null,\"created\":null,\"updated\":null,\"lastUpdated\":null,\"name\":null,\"nickName\":null,\"status\":null,\"extendedStatus\":null,\"amountDue\":{\"amount\":\"49163.46\",\"currency\":\"USD\"},\"minimumDue\":{\"amount\":\"9832.69\",\"currency\":\"USD\"},\"pastDue\":{\"amount\":\"2458.17\",\"currency\":\"USD\"},\"amountScheduled\":null,\"invoiceDate\":null,\"dueDate\":\"2021-02-27\",\"scheduledDate\":null,\"paidDate\":null,\"paidExternalDate\":null,\"skippedDate\":\"2021-03-19\",\"notice\":null,\"relatedDocumentIds\":null,\"payeeAccountLink\":null}",

              "apiVersion":null,

              "isTest":"false",

              "operationType":"UPDATED",

              "userId":"a854331b-5f81-44f2-b080-d122acfed5f7",

              "partnerUserId":"79f726db-4b41-4639-b94d-40b807d69f5a"

            }

          }


    name: Webhooks
  - description: The following set of APIs support recurring payments.
    name: Access Data
  - description: >-
      The following set of APIs return reports on API Access, Payments, and
      Billers.
    name: Reports
  - description: >
      The following changelog reflects updates to the API over time. All changes
      are backwards compatible unless otherwise specified.

      ## March 2022

      - Added Postal Code validation in UserAddressRequestDto and
      AddressRequestDto to allows formats: 12345, 123456789, 12345-6789 for US
      country code.

      - Added RemittanceAccountNumberOrigin accountNumberOrigin to
      PayeeAccountRemittanceUpdateDto to track the source of the account number.

      ## January 2022

      - Added GET `Notifications V2` endpoint in place of the old POST-based
      endpoint.

      - Added POST `Review Schedule` endpoint.

      ## December 2021

      - Added `bankHolidays` to `PaymentConstraints`.

      - Added `VIRTUAL_CARD_CONSENT` documentation for `PaymentConstraints`
      `ExtendedStatus`.

      - Added `ReviewPaymentRequest` for `/user/{userId}/payments/review.
        - Replaces `PaymentRequest`
        - Removes `feeAllowance`
        - Adds `deliverByDate` to support scheduling payments based on the user selected deliver by date.
      - Updated `PaymentInfoRequest` to require `FundingAccount` or
      `CustomerFundingAccount`.

      - Reviewed and updated the `SchedulesAPI` documentation as well as the
      documentation for requests and responses.
        - Removed `feeAllowance`
        - Removed `initialPaymentAmount`
      - Added 'EbnAccountNumberMask' and 'EbnAccountNumberMask' list to
      'MerchantDto'.

      - Added 'PAYEE_ACCOUNT_HOLDER_NAME' and 'PAYEE_ACCOUNT_PAYER_ADDRESS' to
      `PaymentConstraints`.

      - Added 'MERCHANT_ID' to `PaymentConstraints`.
    name: Changelog
x-components: {}

